{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 This documentation describes the deCONZ REST-API, which is provided by the deCONZ REST-API Plugin on Github that runs a lightweight HTTP server within the deCONZ application on the Raspberry Pi. The REST-API allows third party applications easy monitoring and control of a Zigbee network from local or remote operating clients. One of the following devices is needed to get Zigbee support on the Raspberry Pi or PC. RaspBee and RaspBee II Zigbee shields for Raspberry Pi ConBee and ConBee II USB radio stick for PC and Raspberry Pi Features \u00b6 Support for Zigbee Home Automation (HA) and Zigbee Light Link (ZLL) based lights Add, remove and modify groups of lights Control single lights or groups Control colors and dimmlevels via hue, saturation, brightness, CIE xy color coordinates Smooth transitions of colors and dimming over time Save and recall individual scenes for a group Create rules to automate light control Trigger timed commands Reset ZLL lights to factory new state Extensibility \u00b6 The deCONZ REST-API Plugin is a Open Source project licensed under the BSD license and available at GitHub. It could therefore be extended with further functionality, for example to support more devices.","title":"Introduction"},{"location":"#introduction","text":"This documentation describes the deCONZ REST-API, which is provided by the deCONZ REST-API Plugin on Github that runs a lightweight HTTP server within the deCONZ application on the Raspberry Pi. The REST-API allows third party applications easy monitoring and control of a Zigbee network from local or remote operating clients. One of the following devices is needed to get Zigbee support on the Raspberry Pi or PC. RaspBee and RaspBee II Zigbee shields for Raspberry Pi ConBee and ConBee II USB radio stick for PC and Raspberry Pi","title":"Introduction"},{"location":"#features","text":"Support for Zigbee Home Automation (HA) and Zigbee Light Link (ZLL) based lights Add, remove and modify groups of lights Control single lights or groups Control colors and dimmlevels via hue, saturation, brightness, CIE xy color coordinates Smooth transitions of colors and dimming over time Save and recall individual scenes for a group Create rules to automate light control Trigger timed commands Reset ZLL lights to factory new state","title":"Features"},{"location":"#extensibility","text":"The deCONZ REST-API Plugin is a Open Source project licensed under the BSD license and available at GitHub. It could therefore be extended with further functionality, for example to support more devices.","title":"Extensibility"},{"location":"about_rest/","text":"About REST \u00b6 REST stands for Representational State Transfer and sets the ground for various modern web based APIs. The main idea behind REST is that everything is a resource and has a state. Resources are represented by URLs like: /lights - a collection of lights /lights/1 - a single light /lights/1/state - the current state of a light API endpoints \u00b6 All resources are provided by so called endpoints. The API endpoint documentation can be found in the menu on the left side. Currently the following endpoints are available. Endpoint Description /config Query and modify the gateway configuration. /lights Query and control lights. /sensors Query and control sensors. /groups Setup groups and scenes with lights and control them. /scenes Setup and control scenes of a group. /schedules Created time based schedules. /touchlink Execute Zigbee Light Link touchlink commands. Methods \u00b6 Resources can be queried and modified with standard HTTP methods. Where GET, PUT, POST and DELETE are only a subset of all possible methods, they are by far the most used ones. Method Description GET Query the content of a resource. PUT Modifies a existing resource. POST Creates a new resource which did not exist before. DELETE Deletes a resource. JSON \u00b6 The contents of resources are often expressed in Javascript Object Notation better known as JSON. That\u2019s not a requirement of REST itself, in fact some APIs also use XML but JSON is by far more popular due to its simplicity. The JSON format is a very simple but powerful notation to express structured objects and lists. The following example covers everything that can be expressed with JSON. Example object { \"a_string\": \"this is a string\", \"a_number\": 5, \"a_list\": [ 1, 2.0, 3, 4 ], \"a_mixed_list\": [ 2, {}, \"name\", 6, [ 1, 2 ,3 ] ], \"a_nested_object\": { \"foo\": \"bar\" } } Strings are always double quoted \"like this\" Keys and values are separated by a colon : and keys are always strings like \"key\" Objects { } and lists [ ] might be empty and can be nested Numbers can be integers 1 or fractional 0.5 That\u2019s all about JSON. URLs and the API key \u00b6 When reading the API endpoint documentation URLs will look like /api/<apikey>/lights . The /api prefix separates the API interface from the HTML5 web application which is reachable through the document root / . Nearly every API request requires a so called API key which is a mandatory part of request URLs. The API key has the only purpose to restrict access to the gateway. Remember the gateway is reachable through the whole local network and without the API key requirement anybody could control the lights. Nevertheless all clients need to acquire API key by means of the configuration endpoint. Benefits \u00b6 Clients might access the API local or remote via network Access from any desktop and mobile platform Access from any programming language All popular programming languages provide helper classes and functions to work with RESTful APIs The format of requests and responses is human readable Learning and using REST APIs is pretty straight forward What\u2019s next \u00b6 Now you know the basics about REST. It\u2019s time to move on to the Getting Started section which explains step by step how to acquire an API key and do some basic control of the lights.","title":"About REST"},{"location":"about_rest/#about-rest","text":"REST stands for Representational State Transfer and sets the ground for various modern web based APIs. The main idea behind REST is that everything is a resource and has a state. Resources are represented by URLs like: /lights - a collection of lights /lights/1 - a single light /lights/1/state - the current state of a light","title":"About REST"},{"location":"about_rest/#api-endpoints","text":"All resources are provided by so called endpoints. The API endpoint documentation can be found in the menu on the left side. Currently the following endpoints are available. Endpoint Description /config Query and modify the gateway configuration. /lights Query and control lights. /sensors Query and control sensors. /groups Setup groups and scenes with lights and control them. /scenes Setup and control scenes of a group. /schedules Created time based schedules. /touchlink Execute Zigbee Light Link touchlink commands.","title":"API endpoints"},{"location":"about_rest/#methods","text":"Resources can be queried and modified with standard HTTP methods. Where GET, PUT, POST and DELETE are only a subset of all possible methods, they are by far the most used ones. Method Description GET Query the content of a resource. PUT Modifies a existing resource. POST Creates a new resource which did not exist before. DELETE Deletes a resource.","title":"Methods"},{"location":"about_rest/#json","text":"The contents of resources are often expressed in Javascript Object Notation better known as JSON. That\u2019s not a requirement of REST itself, in fact some APIs also use XML but JSON is by far more popular due to its simplicity. The JSON format is a very simple but powerful notation to express structured objects and lists. The following example covers everything that can be expressed with JSON. Example object { \"a_string\": \"this is a string\", \"a_number\": 5, \"a_list\": [ 1, 2.0, 3, 4 ], \"a_mixed_list\": [ 2, {}, \"name\", 6, [ 1, 2 ,3 ] ], \"a_nested_object\": { \"foo\": \"bar\" } } Strings are always double quoted \"like this\" Keys and values are separated by a colon : and keys are always strings like \"key\" Objects { } and lists [ ] might be empty and can be nested Numbers can be integers 1 or fractional 0.5 That\u2019s all about JSON.","title":"JSON"},{"location":"about_rest/#urls-and-the-api-key","text":"When reading the API endpoint documentation URLs will look like /api/<apikey>/lights . The /api prefix separates the API interface from the HTML5 web application which is reachable through the document root / . Nearly every API request requires a so called API key which is a mandatory part of request URLs. The API key has the only purpose to restrict access to the gateway. Remember the gateway is reachable through the whole local network and without the API key requirement anybody could control the lights. Nevertheless all clients need to acquire API key by means of the configuration endpoint.","title":"URLs and the API key"},{"location":"about_rest/#benefits","text":"Clients might access the API local or remote via network Access from any desktop and mobile platform Access from any programming language All popular programming languages provide helper classes and functions to work with RESTful APIs The format of requests and responses is human readable Learning and using REST APIs is pretty straight forward","title":"Benefits"},{"location":"about_rest/#whats-next","text":"Now you know the basics about REST. It\u2019s time to move on to the Getting Started section which explains step by step how to acquire an API key and do some basic control of the lights.","title":"What's next"},{"location":"devices/","text":"Supported Devices \u00b6 There are 4 devices registered. This list is not complete and will grow once more products are described via Device Description Files (DDF). Manufacturer Product Status IKEA of Sweden TR\u00c5DFRI bulb GU10 WS 400lm Bronze IKEA of Sweden KADRILJ roller blind Bronze LUMI Vibration sensor DJT11LM Bronze Tuyatec Motion sensor ESS-SI-PIR-6101 Bronze","title":"Supported Devices"},{"location":"devices/#supported-devices","text":"There are 4 devices registered. This list is not complete and will grow once more products are described via Device Description Files (DDF). Manufacturer Product Status IKEA of Sweden TR\u00c5DFRI bulb GU10 WS 400lm Bronze IKEA of Sweden KADRILJ roller blind Bronze LUMI Vibration sensor DJT11LM Bronze Tuyatec Motion sensor ESS-SI-PIR-6101 Bronze","title":"Supported Devices"},{"location":"devices/ikea/gu10_ws_400lm_light/","text":"TR\u00c5DFRI bulb GU10 WS 400lm \u00b6 File: gu10_ws_400lm_light.json 1. Color temperature light \u00b6 Endpoint: /lights Device information \u00b6 Attribute Value status Bronze product TR\u00c5DFRI bulb GU10 WS 400lm modelid TRADFRI bulb GU10 WS 400lm manufacturername IKEA of Sweden type Color temperature light Top level attributes \u00b6 Attribute Datatype Description Access colorcapabilities UInt16 The supported color modes as bitmap. Default: 16 R ctmin UInt16 Minimum supported color temperature. Default: 250 R ctmax UInt16 Maximum supported color temperature. Default: 454 R lastannounced ISO 8601 timestamp Timestamp of the last power-cyle or rejoin. R lastseen ISO 8601 timestamp Timestamp of the last communication. R manufacturername String Manufacturer name of the device. R modelid String Model identifier of the device. R name String Name of the resource. RW swversion String Firmware version of the device. R type String Type of the resource. R uniqueid String Unique identifier of the resource. R State attributes \u00b6 Attribute Datatype Description Access on Bool True when device is on; false when off. RW bri UInt8 The current brightness. RW ct UInt16 The current Mired color temperature of the light. Where Mired is 1000000 / color temperature (in kelvins). RW reachable Bool When true the device is assumed to be operational. R colormode String The currently active color mode. \"ct\" \u2014 color temperature R alert String The currently active alert effect. Default: none \"none\" \u2014 light is not performing an alert \"select\" \u2014 light is blinking a short time \"lselect\" \u2014 light is blinking a longer time RW Example output \u00b6 { \"colorcapabilities\": 16, \"ctmax\": 454, \"ctmin\": 250, \"hascolor\": true, \"lastannounced\": \"2020-12-07T22:29:41Z\", \"lastseen\": \"2020-12-30T16:29Z\", \"manufacturername\": \"IKEA of Sweden\", \"modelid\": \"TRADFRI bulb GU10 WS 400lm\", \"name\": \"Desk lamp\", \"state\": { \"alert\": \"none\", \"bri\": 254, \"colormode\": \"ct\", \"ct\": 454, \"on\": true, \"reachable\": true }, \"swversion\": \"2.3.050\", \"type\": \"Color temperature light\", \"uniqueid\": \"00:0b:57:ff:fe:26:56:80-01\" } Known Issues \u00b6 Radio Silence \u00b6 All mains powered IKEA lights and repeaters have a bug that causes the device to not operate correctly anymore. The bug is triggered mostly in larger networks with many end-devices likely after receiving a Parent Announce message a few times. Workaround: To get the device back online it must be power-cycled. Which means cut the power for a few seconds. After that the device should work normally again.","title":"TR\u00c5DFRI bulb GU10 WS 400lm"},{"location":"devices/ikea/gu10_ws_400lm_light/#tradfri-bulb-gu10-ws-400lm","text":"File: gu10_ws_400lm_light.json","title":"TR\u00c5DFRI bulb GU10 WS 400lm"},{"location":"devices/ikea/gu10_ws_400lm_light/#1-color-temperature-light","text":"Endpoint: /lights","title":"1. Color temperature light"},{"location":"devices/ikea/gu10_ws_400lm_light/#device-information","text":"Attribute Value status Bronze product TR\u00c5DFRI bulb GU10 WS 400lm modelid TRADFRI bulb GU10 WS 400lm manufacturername IKEA of Sweden type Color temperature light","title":"Device information"},{"location":"devices/ikea/gu10_ws_400lm_light/#top-level-attributes","text":"Attribute Datatype Description Access colorcapabilities UInt16 The supported color modes as bitmap. Default: 16 R ctmin UInt16 Minimum supported color temperature. Default: 250 R ctmax UInt16 Maximum supported color temperature. Default: 454 R lastannounced ISO 8601 timestamp Timestamp of the last power-cyle or rejoin. R lastseen ISO 8601 timestamp Timestamp of the last communication. R manufacturername String Manufacturer name of the device. R modelid String Model identifier of the device. R name String Name of the resource. RW swversion String Firmware version of the device. R type String Type of the resource. R uniqueid String Unique identifier of the resource. R","title":"Top level attributes"},{"location":"devices/ikea/gu10_ws_400lm_light/#state-attributes","text":"Attribute Datatype Description Access on Bool True when device is on; false when off. RW bri UInt8 The current brightness. RW ct UInt16 The current Mired color temperature of the light. Where Mired is 1000000 / color temperature (in kelvins). RW reachable Bool When true the device is assumed to be operational. R colormode String The currently active color mode. \"ct\" \u2014 color temperature R alert String The currently active alert effect. Default: none \"none\" \u2014 light is not performing an alert \"select\" \u2014 light is blinking a short time \"lselect\" \u2014 light is blinking a longer time RW","title":"State attributes"},{"location":"devices/ikea/gu10_ws_400lm_light/#example-output","text":"{ \"colorcapabilities\": 16, \"ctmax\": 454, \"ctmin\": 250, \"hascolor\": true, \"lastannounced\": \"2020-12-07T22:29:41Z\", \"lastseen\": \"2020-12-30T16:29Z\", \"manufacturername\": \"IKEA of Sweden\", \"modelid\": \"TRADFRI bulb GU10 WS 400lm\", \"name\": \"Desk lamp\", \"state\": { \"alert\": \"none\", \"bri\": 254, \"colormode\": \"ct\", \"ct\": 454, \"on\": true, \"reachable\": true }, \"swversion\": \"2.3.050\", \"type\": \"Color temperature light\", \"uniqueid\": \"00:0b:57:ff:fe:26:56:80-01\" }","title":"Example output"},{"location":"devices/ikea/gu10_ws_400lm_light/#known-issues","text":"","title":"Known Issues"},{"location":"devices/ikea/gu10_ws_400lm_light/#radio-silence","text":"All mains powered IKEA lights and repeaters have a bug that causes the device to not operate correctly anymore. The bug is triggered mostly in larger networks with many end-devices likely after receiving a Parent Announce message a few times. Workaround: To get the device back online it must be power-cycled. Which means cut the power for a few seconds. After that the device should work normally again.","title":"Radio Silence"},{"location":"devices/ikea/kadrilj_roller_blind/","text":"KADRILJ roller blind \u00b6 File: kadrilj_blind.json 1. Window covering device \u00b6 Endpoint: /lights Device information \u00b6 Attribute Value status Bronze product E1752-140 modelid KADRILJ roller blind manufacturername IKEA of Sweden type Window covering device Top level attributes \u00b6 Attribute Datatype Description Access manufacturername String Manufacturer name of the device. R modelid String Model identifier of the device. R name String Name of the resource. RW swversion String Firmware version of the device. R type String Type of the resource. R uniqueid String Unique identifier of the resource. R lastannounced ISO 8601 timestamp Timestamp of the last power-cyle or rejoin. R lastseen ISO 8601 timestamp Timestamp of the last communication. R State attributes \u00b6 Attribute Datatype Description Access lift UInt8 The lift state of a roller blind. RW open Bool The open/close state. RW reachable Bool When true the device is assumed to be operational. R bri UInt8 The lift state in earlier versions, use lift instead. deprecated RW on Bool The open state in earlier versions, use open instead. deprecated RW Example output \u00b6 { \"lastannounced\": \"2020-12-11T16:57:04Z\", \"lastseen\": \"2020-12-29T21:55Z\", \"manufacturername\": \"IKEA of Sweden\", \"modelid\": \"KADRILJ roller blind\", \"name\": \"Roller blind 1\", \"state\": { \"bri\": 0, \"lift\": 0, \"on\": false, \"open\": true, \"reachable\": true }, \"swversion\": \"20190311\", \"type\": \"Window covering device\", \"uniqueid\": \"cc:cc:cc:ff:fe:b3:d9:e6-01\" } 2. ZHABattery \u00b6 Endpoint: /sensors Device information \u00b6 Attribute Value status Bronze product E1752-140 modelid KADRILJ roller blind manufacturername IKEA of Sweden type ZHABattery Top level attributes \u00b6 Attribute Datatype Description Access manufacturername String Manufacturer name of the device. R modelid String Model identifier of the device. R name String Name of the resource. RW swversion String Firmware version of the device. R type String Type of the resource. R uniqueid String Unique identifier of the resource. R lastseen ISO 8601 timestamp Timestamp of the last communication. R Config attributes \u00b6 Attribute Datatype Description Access on Bool When true the sensor is enabled in rules. Default: true RW reachable Bool When true the device is assumed to be operational. R State attributes \u00b6 Attribute Datatype Description Access battery UInt8 The current device battery level. R lastupdated ISO 8601 timestamp Timestamp when state was last updated. R Example output \u00b6 { \"config\": { \"on\": true, \"reachable\": true }, \"lastseen\": \"2020-12-29T21:55Z\", \"manufacturername\": \"IKEA of Sweden\", \"modelid\": \"KADRILJ roller blind\", \"name\": \"Roller blind 1\", \"state\": { \"battery\": 76, \"lastupdated\": \"2020-12-29T21:33:36.229\" }, \"swversion\": \"2.2.009\", \"type\": \"ZHABattery\", \"uniqueid\": \"cc:cc:cc:ff:fe:b3:d9:e6-01-0001\" }","title":"KADRILJ roller blind"},{"location":"devices/ikea/kadrilj_roller_blind/#kadrilj-roller-blind","text":"File: kadrilj_blind.json","title":"KADRILJ roller blind"},{"location":"devices/ikea/kadrilj_roller_blind/#1-window-covering-device","text":"Endpoint: /lights","title":"1. Window covering device"},{"location":"devices/ikea/kadrilj_roller_blind/#device-information","text":"Attribute Value status Bronze product E1752-140 modelid KADRILJ roller blind manufacturername IKEA of Sweden type Window covering device","title":"Device information"},{"location":"devices/ikea/kadrilj_roller_blind/#top-level-attributes","text":"Attribute Datatype Description Access manufacturername String Manufacturer name of the device. R modelid String Model identifier of the device. R name String Name of the resource. RW swversion String Firmware version of the device. R type String Type of the resource. R uniqueid String Unique identifier of the resource. R lastannounced ISO 8601 timestamp Timestamp of the last power-cyle or rejoin. R lastseen ISO 8601 timestamp Timestamp of the last communication. R","title":"Top level attributes"},{"location":"devices/ikea/kadrilj_roller_blind/#state-attributes","text":"Attribute Datatype Description Access lift UInt8 The lift state of a roller blind. RW open Bool The open/close state. RW reachable Bool When true the device is assumed to be operational. R bri UInt8 The lift state in earlier versions, use lift instead. deprecated RW on Bool The open state in earlier versions, use open instead. deprecated RW","title":"State attributes"},{"location":"devices/ikea/kadrilj_roller_blind/#example-output","text":"{ \"lastannounced\": \"2020-12-11T16:57:04Z\", \"lastseen\": \"2020-12-29T21:55Z\", \"manufacturername\": \"IKEA of Sweden\", \"modelid\": \"KADRILJ roller blind\", \"name\": \"Roller blind 1\", \"state\": { \"bri\": 0, \"lift\": 0, \"on\": false, \"open\": true, \"reachable\": true }, \"swversion\": \"20190311\", \"type\": \"Window covering device\", \"uniqueid\": \"cc:cc:cc:ff:fe:b3:d9:e6-01\" }","title":"Example output"},{"location":"devices/ikea/kadrilj_roller_blind/#2-zhabattery","text":"Endpoint: /sensors","title":"2. ZHABattery"},{"location":"devices/ikea/kadrilj_roller_blind/#device-information_1","text":"Attribute Value status Bronze product E1752-140 modelid KADRILJ roller blind manufacturername IKEA of Sweden type ZHABattery","title":"Device information"},{"location":"devices/ikea/kadrilj_roller_blind/#top-level-attributes_1","text":"Attribute Datatype Description Access manufacturername String Manufacturer name of the device. R modelid String Model identifier of the device. R name String Name of the resource. RW swversion String Firmware version of the device. R type String Type of the resource. R uniqueid String Unique identifier of the resource. R lastseen ISO 8601 timestamp Timestamp of the last communication. R","title":"Top level attributes"},{"location":"devices/ikea/kadrilj_roller_blind/#config-attributes","text":"Attribute Datatype Description Access on Bool When true the sensor is enabled in rules. Default: true RW reachable Bool When true the device is assumed to be operational. R","title":"Config attributes"},{"location":"devices/ikea/kadrilj_roller_blind/#state-attributes_1","text":"Attribute Datatype Description Access battery UInt8 The current device battery level. R lastupdated ISO 8601 timestamp Timestamp when state was last updated. R","title":"State attributes"},{"location":"devices/ikea/kadrilj_roller_blind/#example-output_1","text":"{ \"config\": { \"on\": true, \"reachable\": true }, \"lastseen\": \"2020-12-29T21:55Z\", \"manufacturername\": \"IKEA of Sweden\", \"modelid\": \"KADRILJ roller blind\", \"name\": \"Roller blind 1\", \"state\": { \"battery\": 76, \"lastupdated\": \"2020-12-29T21:33:36.229\" }, \"swversion\": \"2.2.009\", \"type\": \"ZHABattery\", \"uniqueid\": \"cc:cc:cc:ff:fe:b3:d9:e6-01-0001\" }","title":"Example output"},{"location":"devices/tuya/rh3040_motion_sensor/","text":"Motion sensor ESS-SI-PIR-6101 \u00b6 File: rh3040_motion_sensor.json 1. ZHAPresence \u00b6 Endpoint: /sensors Device information \u00b6 Attribute Value status Bronze product ESS-SI-PIR-6101 modelid RH3040 manufacturername Tuyatec type ZHAPresence Top level attributes \u00b6 Attribute Datatype Description Access manufacturername String Manufacturer name of the device. R modelid String Model identifier of the device. R name String Name of the resource. RW swversion String Todo not shown in output? R type String Type of the resource. R uniqueid String Unique identifier of the resource. R lastseen ISO 8601 timestamp Timestamp of the last communication. R Config attributes \u00b6 Attribute Datatype Description Access battery UInt8 The current device battery level. R duration UInt16 The duration until presence is automatically turned back to false. Default: 120 RW on Bool When true the sensor is enabled in rules. Default: true RW pending Array Pending tasks to configure the device. R reachable Bool When true the device is assumed to be operational. R State attributes \u00b6 Attribute Datatype Description Access presence Bool The current presence state. R lowbattery Bool True when the device battery runs low. R tampered Bool True when the device tampered alarm was triggered. R lastupdated ISO 8601 timestamp Timestamp when state was last updated. R Example output \u00b6 { \"config\": { \"battery\": 75, \"duration\": 120, \"on\": true, \"pending\": [], \"reachable\": true }, \"lastseen\": \"2020-12-29T14:47Z\", \"manufacturername\": \"Tuyatec\", \"modelid\": \"RH3040\", \"name\": \"Presence 68\", \"state\": { \"lastupdated\": \"2020-12-29T14:47:19.022\", \"lowbattery\": false, \"presence\": true, \"tampered\": false }, \"type\": \"ZHAPresence\", \"uniqueid\": \"14:b4:57:ff:fe:15:66:fc-01-0500\" }","title":"Motion sensor ESS-SI-PIR-6101"},{"location":"devices/tuya/rh3040_motion_sensor/#motion-sensor-ess-si-pir-6101","text":"File: rh3040_motion_sensor.json","title":"Motion sensor ESS-SI-PIR-6101"},{"location":"devices/tuya/rh3040_motion_sensor/#1-zhapresence","text":"Endpoint: /sensors","title":"1. ZHAPresence"},{"location":"devices/tuya/rh3040_motion_sensor/#device-information","text":"Attribute Value status Bronze product ESS-SI-PIR-6101 modelid RH3040 manufacturername Tuyatec type ZHAPresence","title":"Device information"},{"location":"devices/tuya/rh3040_motion_sensor/#top-level-attributes","text":"Attribute Datatype Description Access manufacturername String Manufacturer name of the device. R modelid String Model identifier of the device. R name String Name of the resource. RW swversion String Todo not shown in output? R type String Type of the resource. R uniqueid String Unique identifier of the resource. R lastseen ISO 8601 timestamp Timestamp of the last communication. R","title":"Top level attributes"},{"location":"devices/tuya/rh3040_motion_sensor/#config-attributes","text":"Attribute Datatype Description Access battery UInt8 The current device battery level. R duration UInt16 The duration until presence is automatically turned back to false. Default: 120 RW on Bool When true the sensor is enabled in rules. Default: true RW pending Array Pending tasks to configure the device. R reachable Bool When true the device is assumed to be operational. R","title":"Config attributes"},{"location":"devices/tuya/rh3040_motion_sensor/#state-attributes","text":"Attribute Datatype Description Access presence Bool The current presence state. R lowbattery Bool True when the device battery runs low. R tampered Bool True when the device tampered alarm was triggered. R lastupdated ISO 8601 timestamp Timestamp when state was last updated. R","title":"State attributes"},{"location":"devices/tuya/rh3040_motion_sensor/#example-output","text":"{ \"config\": { \"battery\": 75, \"duration\": 120, \"on\": true, \"pending\": [], \"reachable\": true }, \"lastseen\": \"2020-12-29T14:47Z\", \"manufacturername\": \"Tuyatec\", \"modelid\": \"RH3040\", \"name\": \"Presence 68\", \"state\": { \"lastupdated\": \"2020-12-29T14:47:19.022\", \"lowbattery\": false, \"presence\": true, \"tampered\": false }, \"type\": \"ZHAPresence\", \"uniqueid\": \"14:b4:57:ff:fe:15:66:fc-01-0500\" }","title":"Example output"},{"location":"devices/xiaomi/aq_vibration_sensor/","text":"Vibration sensor DJT11LM \u00b6 File: aq1_vibration_sensor.json 1. ZHAVibration \u00b6 Endpoint: /sensors Device information \u00b6 Attribute Value status Bronze product DJT11LM modelid lumi.vibration.aq1 manufacturername LUMI type ZHAVibration Top level attributes \u00b6 Attribute Datatype Description Access lastseen ISO 8601 timestamp Timestamp of the last communication. R manufacturername String Manufacturer name of the device. R modelid String Model identifier of the device. R name String Name of the resource. RW swversion String Firmware version of the device. R type String Type of the resource. R uniqueid String Unique identifier of the resource. R Config attributes \u00b6 Attribute Datatype Description Access on Bool When true the sensor is enabled in rules. Default: true RW reachable Bool When true the device is assumed to be operational. R pending Array Pending tasks to configure the device. R battery UInt8 The current device battery level. R temperature UInt8 The current device temperature in \u00b0C. R sensitivity UInt8 The sensor sensitivity. low \u2014 21 medium \u2014 11 high \u2014 1 RW sensitivitymax UInt8 The maximum sensor sensitivity. Default: 21 RW State attributes \u00b6 Attribute Datatype Description Access orientation Array[3] The orientation in degrees [X, Y, Z]. Where X, Y, Z can be in range -90\u201390. R tiltangle UInt16 The current tilt angle. Default: 0 R vibration Bool True when vibration is detected. Default: false RW vibrationstrength UInt16 The strength of the detected vibration. Default: 0 R lastupdated ISO 8601 timestamp Timestamp when state was last updated. R Example output \u00b6 { \"config\": { \"battery\": 95, \"on\": true, \"pending\": [], \"reachable\": true, \"sensitivity\": 1, \"sensitivitymax\": 21, \"temperature\": 2800 }, \"lastseen\": \"2020-12-29T22:03Z\", \"manufacturername\": \"LUMI\", \"modelid\": \"lumi.vibration.aq1\", \"name\": \"Vibration Sensor\", \"state\": { \"lastupdated\": \"2020-12-29T22:02:50.534\", \"orientation\": [ 81, 1, 9 ], \"tiltangle\": 84, \"vibration\": false, \"vibrationstrength\": 11 }, \"swversion\": \"20180130\", \"type\": \"ZHAVibration\", \"uniqueid\": \"00:15:8d:00:02:af:95:f9-01-0101\" } Known Issues \u00b6 Sticky Parents \u00b6 Almost all Xiaomi end-devices stick to their parent after pairing. The parent is the device which repeats the signal, it can be a router or the coordinator. Once a parent is cut from power or otherwise lost, the end-device won\u2019t automatically search for a new parent and appears to be offline. \u2192 Best practice for pairing is therefore to pair the device at the place where it\u2019s gonna be installed to force it to select a good parent. It\u2019s also advisable to power off all routers which aren\u2019t powered all the time, so that they aren\u2019t considered as parent when pairing.","title":"Vibration sensor DJT11LM"},{"location":"devices/xiaomi/aq_vibration_sensor/#vibration-sensor-djt11lm","text":"File: aq1_vibration_sensor.json","title":"Vibration sensor DJT11LM"},{"location":"devices/xiaomi/aq_vibration_sensor/#1-zhavibration","text":"Endpoint: /sensors","title":"1. ZHAVibration"},{"location":"devices/xiaomi/aq_vibration_sensor/#device-information","text":"Attribute Value status Bronze product DJT11LM modelid lumi.vibration.aq1 manufacturername LUMI type ZHAVibration","title":"Device information"},{"location":"devices/xiaomi/aq_vibration_sensor/#top-level-attributes","text":"Attribute Datatype Description Access lastseen ISO 8601 timestamp Timestamp of the last communication. R manufacturername String Manufacturer name of the device. R modelid String Model identifier of the device. R name String Name of the resource. RW swversion String Firmware version of the device. R type String Type of the resource. R uniqueid String Unique identifier of the resource. R","title":"Top level attributes"},{"location":"devices/xiaomi/aq_vibration_sensor/#config-attributes","text":"Attribute Datatype Description Access on Bool When true the sensor is enabled in rules. Default: true RW reachable Bool When true the device is assumed to be operational. R pending Array Pending tasks to configure the device. R battery UInt8 The current device battery level. R temperature UInt8 The current device temperature in \u00b0C. R sensitivity UInt8 The sensor sensitivity. low \u2014 21 medium \u2014 11 high \u2014 1 RW sensitivitymax UInt8 The maximum sensor sensitivity. Default: 21 RW","title":"Config attributes"},{"location":"devices/xiaomi/aq_vibration_sensor/#state-attributes","text":"Attribute Datatype Description Access orientation Array[3] The orientation in degrees [X, Y, Z]. Where X, Y, Z can be in range -90\u201390. R tiltangle UInt16 The current tilt angle. Default: 0 R vibration Bool True when vibration is detected. Default: false RW vibrationstrength UInt16 The strength of the detected vibration. Default: 0 R lastupdated ISO 8601 timestamp Timestamp when state was last updated. R","title":"State attributes"},{"location":"devices/xiaomi/aq_vibration_sensor/#example-output","text":"{ \"config\": { \"battery\": 95, \"on\": true, \"pending\": [], \"reachable\": true, \"sensitivity\": 1, \"sensitivitymax\": 21, \"temperature\": 2800 }, \"lastseen\": \"2020-12-29T22:03Z\", \"manufacturername\": \"LUMI\", \"modelid\": \"lumi.vibration.aq1\", \"name\": \"Vibration Sensor\", \"state\": { \"lastupdated\": \"2020-12-29T22:02:50.534\", \"orientation\": [ 81, 1, 9 ], \"tiltangle\": 84, \"vibration\": false, \"vibrationstrength\": 11 }, \"swversion\": \"20180130\", \"type\": \"ZHAVibration\", \"uniqueid\": \"00:15:8d:00:02:af:95:f9-01-0101\" }","title":"Example output"},{"location":"devices/xiaomi/aq_vibration_sensor/#known-issues","text":"","title":"Known Issues"},{"location":"devices/xiaomi/aq_vibration_sensor/#sticky-parents","text":"Almost all Xiaomi end-devices stick to their parent after pairing. The parent is the device which repeats the signal, it can be a router or the coordinator. Once a parent is cut from power or otherwise lost, the end-device won\u2019t automatically search for a new parent and appears to be offline. \u2192 Best practice for pairing is therefore to pair the device at the place where it\u2019s gonna be installed to force it to select a good parent. It\u2019s also advisable to power off all routers which aren\u2019t powered all the time, so that they aren\u2019t considered as parent when pairing.","title":"Sticky Parents"},{"location":"endpoints/configuration/","text":"Configuration \u00b6 This endpoint allows to retrieve and modify the current configuration of the gateway. Acquire API key \u00b6 POST /api Creates a new API key which provides authorized access to the REST-API. Note The request will only succeed if the gateway is unlocked or valid HTTP basic authentification credentials are provided in the HTTP request header see authorization . Parameters \u00b6 Field Type Description Required devicetype String (0\u201340 chars) Name of the client application. required username String (10\u201340 chars) Will be used as username. If not specified a random key will be generated. optional Example request data \u00b6 { \"username\": \"988112a4e198cc1211\", \"devicetype\": \"my application\" } Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"username\": \"988112a4e198cc1211\" } } ] Possible errors \u00b6 400 Bad Request 403 Forbidden Delete API key \u00b6 DELETE /api/<apikey>/config/whitelist/<apikey2> Deletes an API key so it can no longer be used. Parameters \u00b6 None Possible errors \u00b6 403 Forbidden 404 Not Found Get configuration \u00b6 GET /api/<apikey>/config Returns the current gateway configuration. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK ETag: \"203941fel3ds8ad61903224\" { \"apiversion\": \"1.16.0\", \"bridgeid\": \"00212EFFFF00C5FB\", \"devicename\": \"ConBee II\", \"dhcp\": true, \"fwversion\": \"0x26660700\", \"gateway\": \"192.168.80.1\", \"ipaddress\": \"192.168.80.142\", \"linkbutton\": false, \"localtime\": \"2020-06-29T14:00:40\", \"mac\": \"74:46:a0:9e:92:c7\", \"modelid\": \"deCONZ\", \"name\": \"deCONZ-GW\", \"netmask\": \"255.255.255.0\", \"networkopenduration\": 60, \"ntp\": \"synced\", \"panid\": 56889, \"portalservices\": false, \"proxyaddress\": \"\", \"proxyport\": 0, \"rfconnected\": true, \"swupdate\": { \"notify\": false, \"text\": \"\", \"updatestate\": 0, \"url\": \"\", }, \"swversion\": \"2.6.0\", \"timeformat\": \"12h\", \"timezone\": \"Europe/Berlin\", \"UTC\": \"2020-06-29T12:00:40\", \"uuid\": \"a65d80a1-975a-4598-8d5a-2547bc18d63b\", \"websocketnotifyall\": true, \"websocketport\": 23765, \"whitelist\": {}, \"zigbeechannel\": 20 } Response fields \u00b6 Field Type Description apiversion String The version of the deCONZ Rest API bridgeid String The unique identifier for the gateway. devicename String The product name of the gateway. Valid values are \"ConBee\", \"RaspBee\", \"ConBee II\" and \"RaspBee II\". dhcp Bool Whether the IP address of the bridge is obtained with DHCP. fwversion String The current Zigbee firmware version. gateway String IPv4 address of the gateway. ipaddress String IPv4 address of the gateway. linkbutton Bool true if the gateway is unlocked. localtime String The localtime of the gateway mac String MAC address of the gateway. modelid String Fixed string \"deCONZ\". name String Name of the gateway. netmask String Network mask of the gateway. networkopenduration Number (1\u201365535) The duration in seconds used by lights and sensors search, see Modify configuration . ntp String Only for gateways running on Linux. Tells if the NTP time is \"synced\" or \"unsynced\". panid Number (0\u201365535) The Zigbee pan ID of the gateway. portalservices Bool This indicates whether the bridge is registered to synchronize data with a portal account. proxyaddress String Not supported proxyport Number Not supported rfconnected Bool Is true when the deCONZ is connected with the firmware and the Zigbee network is up. softwareupdate Object Contains information related to software updates. swversion String The software version of the gateway. timeformat String Stores a value of the timeformat that can be used by other applications. \"12h\" or \"24h\" timezone String Timezone used by the gateway (only on Raspberry Pi). \"None\" if not further specified. UTC String Current UTC time of the gateway in ISO 8601 format. uuid String UPNP Unique Id of the gateway websocketnotifyall Bool When true all state changes will be signalled through the Websocket connection (default true). websocketport Number Port of the Websocket server. whitelist Object An array of whitelisted API keys. zigbeechannel Number The current wireless frequency channel used by the Gateway. Supported channels: 11, 15, 20, 25. Possible errors \u00b6 304 Not Modified 403 Forbidden Get full state \u00b6 GET /api/<apikey> Returns the full state of the gateway including all its lights, groups, scenes and schedules. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK ETag: \"203941fel3ds8ad61903224\" { \"config\": { \"dhcp\": true, \"gateway\": \"192.168.178.1\", \"ipaddress\": \"192.168.192.237\", \"linkbutton\": true, \"mac\": \"E0:69:95:58:06:7F\", \"name\": \"RaspBee GW\", \"netmask\": \"255.255.255.0\", \"portalservices\": false, \"proxyaddress\": \"\", \"proxyport\": 0, \"swupdate\": { \"notify\": false, \"text\": \"\", \"updatestate\": 0, \"url\": \"\" }, \"swversion\": \"1.12.3\", \"UTC\": \"2013-05-22T12:02:30\", \"whitelist\": {} }, \"groups\": { \"1\": { \"action\": { \"bri\": 3945, \"colormode\": \"hs\", \"ct\": 500, \"effect\": \"none\", \"hue\": 0, \"on\": true, \"sat\": 17680, \"xy\": [0.0610457, 0.219979] }, \"devicemembership\": [], \"etag\": \"893f60b611274d1803207298cf26b1e1\", \"hidden\": false, \"lights\": [ \"1\" ], \"lightsequence\": [ \"1\" ], \"multideviceids\": [], \"name\": \"Office\", \"scenes\": [ \"0\": { \"id\": \"1\", \"name\": \"blue moon\" } ] } }, \"lights\": { \"1\": { \"etag\": \"030cf8c1c0025420f3a0659afab251f5\", \"name\": \"Desk Lamp\", \"modelid\": \"FLS-PP-01\", \"pointsymbol\": {}, \"swversion\": \"14010400\", \"type\": \"Color Dimmable Light\", \"state\": { \"on\": true, \"bri\": 190, \"hue\": 21672, \"sat\": 254, \"ct\": 500, \"alert\": \"none\", \"colormode\": \"hs\", \"effect\": \"none\", \"reachable\": true, \"xy\": [ 0.805343, 0.000612754 ] } } }, \"schedules\": { \"1\": { \"autodelete\": false \"command\": { \"address\": \"/api/AD4F14F244/groups/2/scenes/1/recall\" \"body\": {} \"method\": \"PUT\" } \"etag\": \"3dea322b33d34a9134e5632706448f8f\" \"name\": \"Good Morning\" \"status\": \"enabled\" \"time\": \"W124/T05:00:00\" } }, \"sensors\": { 1: { \"config\": { \"on\": true \"reachable\": false } \"etag\": \"01252de8b14f62a234a4680827cf1609\" \"manufacturername\": \"dresden elektronik\" \"mode\": 2 \"modelid\": \"Lighting Switch\" \"name\": \"Lighting Switch 1\" \"state\": { \"lastupdated\": \"2016-06-29T13:16:41\" } \"swversion\": \"1.0\" \"type\": \"ZHASwitch\" \"uniqueid\": \"0x00212effff00a6bc\" } } \"rules\": {} } Response fields \u00b6 Field Type Description config Object Configuration of the gateway. groups Object All groups of the gateway. lights Object All lights of the gateway. rules (as from deconz version > 2.04.12) Object All rules of the gateway. schedules Object All schedules of the gateway. Possible errors \u00b6 304 Not Modified 403 Forbidden Modify configuration \u00b6 PUT /api/<apikey>/config Modify configuration parameters. Parameters \u00b6 Field Type Description Required name String (0\u201316 chars) Name of the gateway. optional rfconnected Bool Set connected state of the gateway. optional updatechannel String Set update channel (\"stable\"|\"alpha\"|\"beta\"). optional permitjoin Number (0\u2013255) Open the network so that other zigbee devices can join. 0 = network closed, 255 = network open, 1\u2013254 = time in seconds the network remains open. The value will decrement automatically. optional groupdelay Number (0\u20135000) Time between two group commands in milliseconds. optional otauactive Bool Set OTAU active or inactive. optional discovery Bool Set gateway discovery over the internet active or inactive. optional networkopenduration Number (1\u201365535) Sets the lights and sensors search duration in seconds. optional rfconnected Bool Set to true to bring the Zigbee network up and false to bring it down. This has the same effect as using the Join and Leave buttons in deCONZ. optional unlock Number (0\u2013600) Unlock the gateway so that apps can register themselves to the gateway (time in seconds). optional zigbeechannel Number (11|15|20|25) Set the zigbeechannel of the gateway. Notify other Zigbee devices also to change their channel. optional timezone String Set the timezone of the gateway (only on Raspberry Pi). Format: tzdatabase e.g. \u201cEurope/Berlin\u201d Wikipedia:ListOfTimeZones optional utc | UTC String Set the UTC time of the gateway (only on Raspbery Pi) in ISO 8601 format (yyyy-MM-ddTHH:mm:ss). For historical reasons both \"utc\" and \"UTC\" are supported as key. optional timeformat String Can be used to store the timeformat permanently. It can be either \"12h\" or \"24h\". optional Example request data \u00b6 { \"zigbeechannel\": 25 } Response \u00b6 HTTP/1.1 200 OK ETag: \"203941fel3ds8ad61903224\" [ { \"success\": {\"/config/zigbeechannel\": 25 } } ] Possible errors \u00b6 400 Bad Request Update software \u00b6 POST /api/<apikey>/config/update Returns the newest software version available. Starts the update if available (only on Raspberry Pi). Response \u00b6 HTTP/1.1 200 OK { \"success\": { \"/config/update\": \"2.04.05\" } } Update firmware \u00b6 POST /api/<apikey>/config/updatefirmware Starts the update firmware process if newer version is available. Response \u00b6 HTTP/1.1 200 OK { \"success\": { \"/config/updatefirmware\": \"26050500\" } } Possible errors \u00b6 503 Service Unavailable Reset gateway \u00b6 POST /api/<apikey>/config/reset Reset the gateway network settings to factory new and/or delete the deCONZ database (config, lights, scenes, groups, schedules, devices, rules). Parameters \u00b6 Field Type Description Required resetGW Bool Set the network settings of the gateway to factory new. optional deleteDB Bool Delete the Database. optional At least one parameter is required! Response \u00b6 HTTP/1.1 200 OK { \"success\": { \"/config/reset\": \"success\" } } Possible errors \u00b6 400 Bad Request 503 Service Unavailable Change password \u00b6 PUT /api/<apikey>/config/password Change the Password of the Gateway. The parameter must be a Base64 encoded string of <username>:<password> . Parameters \u00b6 Field Type Description Required username String The user name (currently only \u201cdelight\u201d is supported). required oldhash String The Base64 encoded combination of \u201cusername:old password\u201d. required newhash String The Base64 encoded combination of \u201cusername:new password\u201d. required Response \u00b6 HTTP/1.1 200 OK { \"success\": { \"/config/password\": \"changed\" } } Possible errors \u00b6 400 Bad Request 401 Unauthorized Reset password \u00b6 DELETE /api/<apikey>/config/password Resets the username and password to default username = \u201cdelight\u201d and password = \u201cdelight\u201d. The request can only succeed within 10 minutes after gateway start. Response \u00b6 HTTP/1.1 200 OK {} Possible errors \u00b6 403 Forbidden","title":"Configuration"},{"location":"endpoints/configuration/#configuration","text":"This endpoint allows to retrieve and modify the current configuration of the gateway.","title":"Configuration"},{"location":"endpoints/configuration/#acquire-api-key","text":"POST /api Creates a new API key which provides authorized access to the REST-API. Note The request will only succeed if the gateway is unlocked or valid HTTP basic authentification credentials are provided in the HTTP request header see authorization .","title":"Acquire API key&nbsp;"},{"location":"endpoints/configuration/#parameters","text":"Field Type Description Required devicetype String (0\u201340 chars) Name of the client application. required username String (10\u201340 chars) Will be used as username. If not specified a random key will be generated. optional","title":"Parameters"},{"location":"endpoints/configuration/#example-request-data","text":"{ \"username\": \"988112a4e198cc1211\", \"devicetype\": \"my application\" }","title":"Example request data"},{"location":"endpoints/configuration/#response","text":"HTTP/1.1 200 OK [ { \"success\": { \"username\": \"988112a4e198cc1211\" } } ]","title":"Response"},{"location":"endpoints/configuration/#possible-errors","text":"400 Bad Request 403 Forbidden","title":"Possible errors"},{"location":"endpoints/configuration/#delete-api-key","text":"DELETE /api/<apikey>/config/whitelist/<apikey2> Deletes an API key so it can no longer be used.","title":"Delete API key&nbsp;"},{"location":"endpoints/configuration/#parameters_1","text":"None","title":"Parameters"},{"location":"endpoints/configuration/#possible-errors_1","text":"403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/configuration/#get-configuration","text":"GET /api/<apikey>/config Returns the current gateway configuration.","title":"Get configuration&nbsp;"},{"location":"endpoints/configuration/#parameters_2","text":"None","title":"Parameters"},{"location":"endpoints/configuration/#response_1","text":"HTTP/1.1 200 OK ETag: \"203941fel3ds8ad61903224\" { \"apiversion\": \"1.16.0\", \"bridgeid\": \"00212EFFFF00C5FB\", \"devicename\": \"ConBee II\", \"dhcp\": true, \"fwversion\": \"0x26660700\", \"gateway\": \"192.168.80.1\", \"ipaddress\": \"192.168.80.142\", \"linkbutton\": false, \"localtime\": \"2020-06-29T14:00:40\", \"mac\": \"74:46:a0:9e:92:c7\", \"modelid\": \"deCONZ\", \"name\": \"deCONZ-GW\", \"netmask\": \"255.255.255.0\", \"networkopenduration\": 60, \"ntp\": \"synced\", \"panid\": 56889, \"portalservices\": false, \"proxyaddress\": \"\", \"proxyport\": 0, \"rfconnected\": true, \"swupdate\": { \"notify\": false, \"text\": \"\", \"updatestate\": 0, \"url\": \"\", }, \"swversion\": \"2.6.0\", \"timeformat\": \"12h\", \"timezone\": \"Europe/Berlin\", \"UTC\": \"2020-06-29T12:00:40\", \"uuid\": \"a65d80a1-975a-4598-8d5a-2547bc18d63b\", \"websocketnotifyall\": true, \"websocketport\": 23765, \"whitelist\": {}, \"zigbeechannel\": 20 }","title":"Response"},{"location":"endpoints/configuration/#response-fields","text":"Field Type Description apiversion String The version of the deCONZ Rest API bridgeid String The unique identifier for the gateway. devicename String The product name of the gateway. Valid values are \"ConBee\", \"RaspBee\", \"ConBee II\" and \"RaspBee II\". dhcp Bool Whether the IP address of the bridge is obtained with DHCP. fwversion String The current Zigbee firmware version. gateway String IPv4 address of the gateway. ipaddress String IPv4 address of the gateway. linkbutton Bool true if the gateway is unlocked. localtime String The localtime of the gateway mac String MAC address of the gateway. modelid String Fixed string \"deCONZ\". name String Name of the gateway. netmask String Network mask of the gateway. networkopenduration Number (1\u201365535) The duration in seconds used by lights and sensors search, see Modify configuration . ntp String Only for gateways running on Linux. Tells if the NTP time is \"synced\" or \"unsynced\". panid Number (0\u201365535) The Zigbee pan ID of the gateway. portalservices Bool This indicates whether the bridge is registered to synchronize data with a portal account. proxyaddress String Not supported proxyport Number Not supported rfconnected Bool Is true when the deCONZ is connected with the firmware and the Zigbee network is up. softwareupdate Object Contains information related to software updates. swversion String The software version of the gateway. timeformat String Stores a value of the timeformat that can be used by other applications. \"12h\" or \"24h\" timezone String Timezone used by the gateway (only on Raspberry Pi). \"None\" if not further specified. UTC String Current UTC time of the gateway in ISO 8601 format. uuid String UPNP Unique Id of the gateway websocketnotifyall Bool When true all state changes will be signalled through the Websocket connection (default true). websocketport Number Port of the Websocket server. whitelist Object An array of whitelisted API keys. zigbeechannel Number The current wireless frequency channel used by the Gateway. Supported channels: 11, 15, 20, 25.","title":"Response fields"},{"location":"endpoints/configuration/#possible-errors_2","text":"304 Not Modified 403 Forbidden","title":"Possible errors"},{"location":"endpoints/configuration/#get-full-state","text":"GET /api/<apikey> Returns the full state of the gateway including all its lights, groups, scenes and schedules.","title":"Get full state&nbsp;"},{"location":"endpoints/configuration/#parameters_3","text":"None","title":"Parameters"},{"location":"endpoints/configuration/#response_2","text":"HTTP/1.1 200 OK ETag: \"203941fel3ds8ad61903224\" { \"config\": { \"dhcp\": true, \"gateway\": \"192.168.178.1\", \"ipaddress\": \"192.168.192.237\", \"linkbutton\": true, \"mac\": \"E0:69:95:58:06:7F\", \"name\": \"RaspBee GW\", \"netmask\": \"255.255.255.0\", \"portalservices\": false, \"proxyaddress\": \"\", \"proxyport\": 0, \"swupdate\": { \"notify\": false, \"text\": \"\", \"updatestate\": 0, \"url\": \"\" }, \"swversion\": \"1.12.3\", \"UTC\": \"2013-05-22T12:02:30\", \"whitelist\": {} }, \"groups\": { \"1\": { \"action\": { \"bri\": 3945, \"colormode\": \"hs\", \"ct\": 500, \"effect\": \"none\", \"hue\": 0, \"on\": true, \"sat\": 17680, \"xy\": [0.0610457, 0.219979] }, \"devicemembership\": [], \"etag\": \"893f60b611274d1803207298cf26b1e1\", \"hidden\": false, \"lights\": [ \"1\" ], \"lightsequence\": [ \"1\" ], \"multideviceids\": [], \"name\": \"Office\", \"scenes\": [ \"0\": { \"id\": \"1\", \"name\": \"blue moon\" } ] } }, \"lights\": { \"1\": { \"etag\": \"030cf8c1c0025420f3a0659afab251f5\", \"name\": \"Desk Lamp\", \"modelid\": \"FLS-PP-01\", \"pointsymbol\": {}, \"swversion\": \"14010400\", \"type\": \"Color Dimmable Light\", \"state\": { \"on\": true, \"bri\": 190, \"hue\": 21672, \"sat\": 254, \"ct\": 500, \"alert\": \"none\", \"colormode\": \"hs\", \"effect\": \"none\", \"reachable\": true, \"xy\": [ 0.805343, 0.000612754 ] } } }, \"schedules\": { \"1\": { \"autodelete\": false \"command\": { \"address\": \"/api/AD4F14F244/groups/2/scenes/1/recall\" \"body\": {} \"method\": \"PUT\" } \"etag\": \"3dea322b33d34a9134e5632706448f8f\" \"name\": \"Good Morning\" \"status\": \"enabled\" \"time\": \"W124/T05:00:00\" } }, \"sensors\": { 1: { \"config\": { \"on\": true \"reachable\": false } \"etag\": \"01252de8b14f62a234a4680827cf1609\" \"manufacturername\": \"dresden elektronik\" \"mode\": 2 \"modelid\": \"Lighting Switch\" \"name\": \"Lighting Switch 1\" \"state\": { \"lastupdated\": \"2016-06-29T13:16:41\" } \"swversion\": \"1.0\" \"type\": \"ZHASwitch\" \"uniqueid\": \"0x00212effff00a6bc\" } } \"rules\": {} }","title":"Response"},{"location":"endpoints/configuration/#response-fields_1","text":"Field Type Description config Object Configuration of the gateway. groups Object All groups of the gateway. lights Object All lights of the gateway. rules (as from deconz version > 2.04.12) Object All rules of the gateway. schedules Object All schedules of the gateway.","title":"Response fields"},{"location":"endpoints/configuration/#possible-errors_3","text":"304 Not Modified 403 Forbidden","title":"Possible errors"},{"location":"endpoints/configuration/#modify-configuration","text":"PUT /api/<apikey>/config Modify configuration parameters.","title":"Modify configuration&nbsp;"},{"location":"endpoints/configuration/#parameters_4","text":"Field Type Description Required name String (0\u201316 chars) Name of the gateway. optional rfconnected Bool Set connected state of the gateway. optional updatechannel String Set update channel (\"stable\"|\"alpha\"|\"beta\"). optional permitjoin Number (0\u2013255) Open the network so that other zigbee devices can join. 0 = network closed, 255 = network open, 1\u2013254 = time in seconds the network remains open. The value will decrement automatically. optional groupdelay Number (0\u20135000) Time between two group commands in milliseconds. optional otauactive Bool Set OTAU active or inactive. optional discovery Bool Set gateway discovery over the internet active or inactive. optional networkopenduration Number (1\u201365535) Sets the lights and sensors search duration in seconds. optional rfconnected Bool Set to true to bring the Zigbee network up and false to bring it down. This has the same effect as using the Join and Leave buttons in deCONZ. optional unlock Number (0\u2013600) Unlock the gateway so that apps can register themselves to the gateway (time in seconds). optional zigbeechannel Number (11|15|20|25) Set the zigbeechannel of the gateway. Notify other Zigbee devices also to change their channel. optional timezone String Set the timezone of the gateway (only on Raspberry Pi). Format: tzdatabase e.g. \u201cEurope/Berlin\u201d Wikipedia:ListOfTimeZones optional utc | UTC String Set the UTC time of the gateway (only on Raspbery Pi) in ISO 8601 format (yyyy-MM-ddTHH:mm:ss). For historical reasons both \"utc\" and \"UTC\" are supported as key. optional timeformat String Can be used to store the timeformat permanently. It can be either \"12h\" or \"24h\". optional","title":"Parameters"},{"location":"endpoints/configuration/#example-request-data_1","text":"{ \"zigbeechannel\": 25 }","title":"Example request data"},{"location":"endpoints/configuration/#response_3","text":"HTTP/1.1 200 OK ETag: \"203941fel3ds8ad61903224\" [ { \"success\": {\"/config/zigbeechannel\": 25 } } ]","title":"Response"},{"location":"endpoints/configuration/#possible-errors_4","text":"400 Bad Request","title":"Possible errors"},{"location":"endpoints/configuration/#update-software","text":"POST /api/<apikey>/config/update Returns the newest software version available. Starts the update if available (only on Raspberry Pi).","title":"Update software&nbsp;"},{"location":"endpoints/configuration/#response_4","text":"HTTP/1.1 200 OK { \"success\": { \"/config/update\": \"2.04.05\" } }","title":"Response"},{"location":"endpoints/configuration/#update-firmware","text":"POST /api/<apikey>/config/updatefirmware Starts the update firmware process if newer version is available.","title":"Update firmware&nbsp;"},{"location":"endpoints/configuration/#response_5","text":"HTTP/1.1 200 OK { \"success\": { \"/config/updatefirmware\": \"26050500\" } }","title":"Response"},{"location":"endpoints/configuration/#possible-errors_5","text":"503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/configuration/#reset-gateway","text":"POST /api/<apikey>/config/reset Reset the gateway network settings to factory new and/or delete the deCONZ database (config, lights, scenes, groups, schedules, devices, rules).","title":"Reset gateway&nbsp;"},{"location":"endpoints/configuration/#parameters_5","text":"Field Type Description Required resetGW Bool Set the network settings of the gateway to factory new. optional deleteDB Bool Delete the Database. optional At least one parameter is required!","title":"Parameters"},{"location":"endpoints/configuration/#response_6","text":"HTTP/1.1 200 OK { \"success\": { \"/config/reset\": \"success\" } }","title":"Response"},{"location":"endpoints/configuration/#possible-errors_6","text":"400 Bad Request 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/configuration/#change-password","text":"PUT /api/<apikey>/config/password Change the Password of the Gateway. The parameter must be a Base64 encoded string of <username>:<password> .","title":"Change password&nbsp;"},{"location":"endpoints/configuration/#parameters_6","text":"Field Type Description Required username String The user name (currently only \u201cdelight\u201d is supported). required oldhash String The Base64 encoded combination of \u201cusername:old password\u201d. required newhash String The Base64 encoded combination of \u201cusername:new password\u201d. required","title":"Parameters"},{"location":"endpoints/configuration/#response_7","text":"HTTP/1.1 200 OK { \"success\": { \"/config/password\": \"changed\" } }","title":"Response"},{"location":"endpoints/configuration/#possible-errors_7","text":"400 Bad Request 401 Unauthorized","title":"Possible errors"},{"location":"endpoints/configuration/#reset-password","text":"DELETE /api/<apikey>/config/password Resets the username and password to default username = \u201cdelight\u201d and password = \u201cdelight\u201d. The request can only succeed within 10 minutes after gateway start.","title":"Reset password&nbsp;"},{"location":"endpoints/configuration/#response_8","text":"HTTP/1.1 200 OK {}","title":"Response"},{"location":"endpoints/configuration/#possible-errors_8","text":"403 Forbidden","title":"Possible errors"},{"location":"endpoints/groups/","text":"Groups \u00b6 Groups are useful to control many lights at once and provide the base to use scenes. Create group \u00b6 POST /api/<apikey>/groups Creates a new empty group. Parameters \u00b6 Field Type Description Required name String The name of the new group required Example request data \u00b6 { \"name\": \"Garage\" } Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ] Response fields \u00b6 Field Type Description id String The unique identifier of the group. Note Creating a group with a name which already exists will not create a new group or fail. Such a call does only return the id of the existing group. Possible errors \u00b6 400 Bad Request 403 Forbidden Get all groups \u00b6 GET /api/<apikey>/groups Returns a list of all groups. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK { \"1\": { \"devicemembership\": [], \"etag\": \"ab5272cfe11339202929259af22252ae\", \"hidden\" : false, \"name\": \"Living Room\" }, \"2\": { \"devicemembership\": [\"3\"], \"etag\": \"030cf8c1c0025420f3a0659afab251f5\", \"hidden\" : false, \"name\": \"Kitchen\" } } Response fields \u00b6 Field Type Description devicemembership Array If this group was created by a device (switch or sensor) this list contains the device ids. name String Name of a group. etag String HTTP etag which changes on any action to the group. hidden Bool Indicates if this group is hidden. Possible errors \u00b6 403 Forbidden Get group attributes \u00b6 GET /api/<apikey>/groups/<id> Returns the full state of a group. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK ETag: \"0b32030b31ef30a4446c9adff6a6f9e5\" { \"action\": { \"bri\": 0, \"ct\": 500, \"effect\": \"none\", \"hue\": 0, \"on\": false, \"sat\": 0, \"xy\": [ 0, 0 ] }, \"devicemembership\": [], \"etag\": \"0b32030b31ef30a4446c9adff6a6f9e5\", \"hidden\": false, \"id\": \"32772\", \"lights\": [ \"3\",\"42\",\"43\" ], \"lightsequence\": [ \"42\",\"43\",\"3\" ], \"multideviceids\": [\"2\"], \"name\": \"Livingroom\", \"scenes\": [ { \"id\": \"1\", \"name\": \"warmlight\" } ], \"state\": 0 } Response fields \u00b6 Field Type Description action Object The last action which was send to the group. action.on Bool true if the group was turned on. action.bri Number (0\u2013255) Brightness of the group. Depending on the lights 0 might not mean visible \"off\" but minimum brightness. action.hue Number (0\u201365535) The hue parameter in the HSV color model is between 0\u00b0\u2013360\u00b0 and is mapped to 0\u201365535 to get 16-bit resolution. action.sat Number (0\u2013255) Color saturation there 0 means no color at all and 255 is the greatest saturation of the color. action.ct Number (153\u2013500) Mired color temperature. (2000K\u20136500K) action.xy Array CIE xy color space coordinates as array [x, y] of real values (0\u20131). action.effect String Dynamic effect: none - no effect colorloop devicemembership Array A list of device ids (sensors) if this group was created by a device. etag String HTTP etag which changes on any action to the group. hidden Bool Indicates the hidden status of the group. Has no effect at the gateway but apps can uses this to hide groups. id String The id of the group. lights Array A list of all light ids of this group. Sequence is defined by the gateway. lightsequence Array A list of light ids of this group that can be sorted by the user. Need not to contain all light ids of this group. mulitdeviceids Array A list of light ids of this group that are subsequent ids from multidvices with multiple endpoints like the FLS-PP. name String Name of the group. scenes Array A list of scenes of the group. state Number Deprecated - will be removed in future. Possible errors \u00b6 304 Not Modified 403 Forbidden 404 Not Found Set group attributes \u00b6 PUT /api/<apikey>/groups/<id> Sets attributes of a group which are not related to its state. Parameters \u00b6 Field Type Description Required name String (0\u201332) The name of the group optional lights Array IDs of the lights which are members of the group. optional hidden Bool Indicates the hidden status of the group. Has no effect at the gateway but apps can uses this to hide groups. optional lightsequence Array Specify a sorted list of light ids that can be used in apps. optional mulitdeviceids Array Append the subsequential light ids of multidevices like the FLS-PP if the app should handle that light differently. optional Example request data \u00b6 { \"name\": \"Living Room\", \"lights\": [ \"1\", \"4\" ] } Response \u00b6 HTTP/1.1 200 OK ETag: \"000bf36b51ef3324446c98hdf6a6ace6\" [ { \"success\": { \"/groups/1/name\": \"Living Room\" } }, { \"success\": { \"/groups/1/lights\": [ \"1\", \"4\" ] } } ] Note In order to add or remove lights to the group the lights must be powered on. Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable Set group state \u00b6 PUT /api/<apikey>/groups/<id>/action Sets the state of a group. Parameters \u00b6 Field Type Description Required on Bool Set to true to turn the lights on, false to turn them off. optional toggle Bool Set to true toggles the lights of that group from on to off or vice versa, false has no effect. **Notice:** This setting supersedes the `on` parameter! optional bri Number (0\u2013255) Set the brightness of the group. Depending on the lights 0 might not mean visible \"off\" but minimum brightness. If the lights are off and the value is greater 0 a on=true shall also be provided. optional hue Number (0\u201365535) Set the color hue of the group. The hue parameter in the HSV color model is between 0\u00b0\u2013360\u00b0 and is mapped to 0\u201365535 to get 16-bit resolution. optional sat Number (0\u2013255) Set the color saturation of the group. There 0 means no color at all and 255 is the highest saturation of the color. optional ct Number (153\u2013500) Set the Mired color temperature of the group. (2000K\u20136500K) optional xy Array Set the CIE xy color space coordinates as array [x, y] of real values (0\u20131). optional alert String Trigger a temporary alert effect: none - lights are not performing an alert select - lights are blinking a short time lselect - lights are blinking a longer time optional effect String Trigger an effect of the group: none - no effect colorloop - the lights of the group will cycle continously through all colors with the speed specified by colorloopspeed optional colorloopspeed Number (1\u2013255) Specifies the speed of a colorloop. 1 = very fast, 255 = very slow (default: 15). This parameter only has an effect when it is called together with effect colorloop. optional transitiontime Number Transition time in 1/10 seconds between two states. optional Example request data \u00b6 { \"on\": true, \"bri\": 180, \"hue\": 43680, \"sat\": 255, \"transitiontime\": 10 } Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [ { \"success\": { \"/groups/1/action/on\": true }}, { \"success\": { \"/groups/1/action/bri\": 180 }}, { \"success\": { \"/groups/1/action/hue\": 43680 }}, { \"success\": { \"/groups/1/action/sat\": 255 }} ] Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable Delete group \u00b6 DELETE /api/<apikey>/groups/<id> Deletes a group. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"1\" } } ] Note In order to delete the group and therefore remove all lights from the group the lights must be powered on. Possible errors \u00b6 403 Forbidden 404 Not Found 503 Service Unavailable","title":"Groups"},{"location":"endpoints/groups/#groups","text":"Groups are useful to control many lights at once and provide the base to use scenes.","title":"Groups"},{"location":"endpoints/groups/#create-group","text":"POST /api/<apikey>/groups Creates a new empty group.","title":"Create group&nbsp;"},{"location":"endpoints/groups/#parameters","text":"Field Type Description Required name String The name of the new group required","title":"Parameters"},{"location":"endpoints/groups/#example-request-data","text":"{ \"name\": \"Garage\" }","title":"Example request data"},{"location":"endpoints/groups/#response","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ]","title":"Response"},{"location":"endpoints/groups/#response-fields","text":"Field Type Description id String The unique identifier of the group. Note Creating a group with a name which already exists will not create a new group or fail. Such a call does only return the id of the existing group.","title":"Response fields"},{"location":"endpoints/groups/#possible-errors","text":"400 Bad Request 403 Forbidden","title":"Possible errors"},{"location":"endpoints/groups/#get-all-groups","text":"GET /api/<apikey>/groups Returns a list of all groups.","title":"Get all groups&nbsp;"},{"location":"endpoints/groups/#parameters_1","text":"None","title":"Parameters"},{"location":"endpoints/groups/#response_1","text":"HTTP/1.1 200 OK { \"1\": { \"devicemembership\": [], \"etag\": \"ab5272cfe11339202929259af22252ae\", \"hidden\" : false, \"name\": \"Living Room\" }, \"2\": { \"devicemembership\": [\"3\"], \"etag\": \"030cf8c1c0025420f3a0659afab251f5\", \"hidden\" : false, \"name\": \"Kitchen\" } }","title":"Response"},{"location":"endpoints/groups/#response-fields_1","text":"Field Type Description devicemembership Array If this group was created by a device (switch or sensor) this list contains the device ids. name String Name of a group. etag String HTTP etag which changes on any action to the group. hidden Bool Indicates if this group is hidden.","title":"Response fields"},{"location":"endpoints/groups/#possible-errors_1","text":"403 Forbidden","title":"Possible errors"},{"location":"endpoints/groups/#get-group-attributes","text":"GET /api/<apikey>/groups/<id> Returns the full state of a group.","title":"Get group attributes&nbsp;"},{"location":"endpoints/groups/#parameters_2","text":"None","title":"Parameters"},{"location":"endpoints/groups/#response_2","text":"HTTP/1.1 200 OK ETag: \"0b32030b31ef30a4446c9adff6a6f9e5\" { \"action\": { \"bri\": 0, \"ct\": 500, \"effect\": \"none\", \"hue\": 0, \"on\": false, \"sat\": 0, \"xy\": [ 0, 0 ] }, \"devicemembership\": [], \"etag\": \"0b32030b31ef30a4446c9adff6a6f9e5\", \"hidden\": false, \"id\": \"32772\", \"lights\": [ \"3\",\"42\",\"43\" ], \"lightsequence\": [ \"42\",\"43\",\"3\" ], \"multideviceids\": [\"2\"], \"name\": \"Livingroom\", \"scenes\": [ { \"id\": \"1\", \"name\": \"warmlight\" } ], \"state\": 0 }","title":"Response"},{"location":"endpoints/groups/#response-fields_2","text":"Field Type Description action Object The last action which was send to the group. action.on Bool true if the group was turned on. action.bri Number (0\u2013255) Brightness of the group. Depending on the lights 0 might not mean visible \"off\" but minimum brightness. action.hue Number (0\u201365535) The hue parameter in the HSV color model is between 0\u00b0\u2013360\u00b0 and is mapped to 0\u201365535 to get 16-bit resolution. action.sat Number (0\u2013255) Color saturation there 0 means no color at all and 255 is the greatest saturation of the color. action.ct Number (153\u2013500) Mired color temperature. (2000K\u20136500K) action.xy Array CIE xy color space coordinates as array [x, y] of real values (0\u20131). action.effect String Dynamic effect: none - no effect colorloop devicemembership Array A list of device ids (sensors) if this group was created by a device. etag String HTTP etag which changes on any action to the group. hidden Bool Indicates the hidden status of the group. Has no effect at the gateway but apps can uses this to hide groups. id String The id of the group. lights Array A list of all light ids of this group. Sequence is defined by the gateway. lightsequence Array A list of light ids of this group that can be sorted by the user. Need not to contain all light ids of this group. mulitdeviceids Array A list of light ids of this group that are subsequent ids from multidvices with multiple endpoints like the FLS-PP. name String Name of the group. scenes Array A list of scenes of the group. state Number Deprecated - will be removed in future.","title":"Response fields"},{"location":"endpoints/groups/#possible-errors_2","text":"304 Not Modified 403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/groups/#set-group-attributes","text":"PUT /api/<apikey>/groups/<id> Sets attributes of a group which are not related to its state.","title":"Set group attributes&nbsp;"},{"location":"endpoints/groups/#parameters_3","text":"Field Type Description Required name String (0\u201332) The name of the group optional lights Array IDs of the lights which are members of the group. optional hidden Bool Indicates the hidden status of the group. Has no effect at the gateway but apps can uses this to hide groups. optional lightsequence Array Specify a sorted list of light ids that can be used in apps. optional mulitdeviceids Array Append the subsequential light ids of multidevices like the FLS-PP if the app should handle that light differently. optional","title":"Parameters"},{"location":"endpoints/groups/#example-request-data_1","text":"{ \"name\": \"Living Room\", \"lights\": [ \"1\", \"4\" ] }","title":"Example request data"},{"location":"endpoints/groups/#response_3","text":"HTTP/1.1 200 OK ETag: \"000bf36b51ef3324446c98hdf6a6ace6\" [ { \"success\": { \"/groups/1/name\": \"Living Room\" } }, { \"success\": { \"/groups/1/lights\": [ \"1\", \"4\" ] } } ] Note In order to add or remove lights to the group the lights must be powered on.","title":"Response"},{"location":"endpoints/groups/#possible-errors_3","text":"400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/groups/#set-group-state","text":"PUT /api/<apikey>/groups/<id>/action Sets the state of a group.","title":"Set group state&nbsp;"},{"location":"endpoints/groups/#parameters_4","text":"Field Type Description Required on Bool Set to true to turn the lights on, false to turn them off. optional toggle Bool Set to true toggles the lights of that group from on to off or vice versa, false has no effect. **Notice:** This setting supersedes the `on` parameter! optional bri Number (0\u2013255) Set the brightness of the group. Depending on the lights 0 might not mean visible \"off\" but minimum brightness. If the lights are off and the value is greater 0 a on=true shall also be provided. optional hue Number (0\u201365535) Set the color hue of the group. The hue parameter in the HSV color model is between 0\u00b0\u2013360\u00b0 and is mapped to 0\u201365535 to get 16-bit resolution. optional sat Number (0\u2013255) Set the color saturation of the group. There 0 means no color at all and 255 is the highest saturation of the color. optional ct Number (153\u2013500) Set the Mired color temperature of the group. (2000K\u20136500K) optional xy Array Set the CIE xy color space coordinates as array [x, y] of real values (0\u20131). optional alert String Trigger a temporary alert effect: none - lights are not performing an alert select - lights are blinking a short time lselect - lights are blinking a longer time optional effect String Trigger an effect of the group: none - no effect colorloop - the lights of the group will cycle continously through all colors with the speed specified by colorloopspeed optional colorloopspeed Number (1\u2013255) Specifies the speed of a colorloop. 1 = very fast, 255 = very slow (default: 15). This parameter only has an effect when it is called together with effect colorloop. optional transitiontime Number Transition time in 1/10 seconds between two states. optional","title":"Parameters"},{"location":"endpoints/groups/#example-request-data_2","text":"{ \"on\": true, \"bri\": 180, \"hue\": 43680, \"sat\": 255, \"transitiontime\": 10 }","title":"Example request data"},{"location":"endpoints/groups/#response_4","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [ { \"success\": { \"/groups/1/action/on\": true }}, { \"success\": { \"/groups/1/action/bri\": 180 }}, { \"success\": { \"/groups/1/action/hue\": 43680 }}, { \"success\": { \"/groups/1/action/sat\": 255 }} ]","title":"Response"},{"location":"endpoints/groups/#possible-errors_4","text":"400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/groups/#delete-group","text":"DELETE /api/<apikey>/groups/<id> Deletes a group.","title":"Delete group&nbsp;"},{"location":"endpoints/groups/#parameters_5","text":"None","title":"Parameters"},{"location":"endpoints/groups/#response_5","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"1\" } } ] Note In order to delete the group and therefore remove all lights from the group the lights must be powered on.","title":"Response"},{"location":"endpoints/groups/#possible-errors_5","text":"403 Forbidden 404 Not Found 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/lights/","text":"Lights \u00b6 Monitor and control single lights. Get all lights \u00b6 GET /api/<apikey>/lights Returns a list of all lights. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK { \"1\": { \"etag\": \"026bcfe544ad76c7534e5ca8ed39047c\", \"hascolor\": true, \"manufacturer\": \"dresden elektronik\", \"modelid\": \"FLS-PP3\", \"name\": \"Light 1\", \"pointsymbol\": {}, \"state\": { \"alert\": \"none\", \"bri\": 111, \"colormode\": \"ct\", \"ct\": 307, \"effect\": \"none\", \"hue\": 7998, \"on\": false, \"reachable\": true, \"sat\": 172, \"xy\": [ 0.421253, 0.39921 ] }, \"swversion\": \"020C.201000A0\", \"type\": \"Extended color light\", \"uniqueid\": \"00:21:2E:FF:FF:00:73:9F-0A\" }, \"2\": { \"etag\": \"026bcfe544ad76c7534e5ca8ed39047c\", \"hascolor\": false, \"manufacturer\": \"dresden elektronik\", \"modelid\": \"FLS-PP3 White\", \"name\": \"Light 2\", \"pointsymbol\": {}, \"state\": { \"alert\": \"none\", \"bri\": 1, \"effect\": \"none\", \"on\": false, \"reachable\": true }, \"swversion\": \"020C.201000A0\", \"type\": \"Dimmable light\", \"uniqueid\": \"00:21:2E:FF:FF:00:73:9F-0B\" } } Response fields \u00b6 The whole light object as descripted in Get light state . Possible errors \u00b6 403 Forbidden Get light state \u00b6 GET /api/<apikey>/lights/<id> Returns the full state of a light. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"etag\": \"026bcfe544ad76c7534e5ca8ed39047c\", \"hascolor\": true, \"manufacturer\": \"dresden elektronik\", \"modelid\": \"FLS-PP3\", \"name\": \"Light 1\", \"pointsymbol\": {}, \"state\": { \"alert\": \"none\", \"bri\": 111, \"colormode\": \"ct\", \"ct\": 307, \"effect\": \"none\", \"hue\": 7998, \"on\": false, \"reachable\": true, \"sat\": 172, \"xy\": [ 0.421253, 0.39921 ] }, \"swversion\": \"020C.201000A0\", \"type\": \"Extended color light\", \"uniqueid\": \"00:21:2E:FF:FF:00:73:9F-0A\" } Response fields \u00b6 Field Type Description colorcapabilities Number The color capabilities as reported by the light. ctmax Number The maximum mired color temperature value a device supports. ctmin Number The minimum mired color temperature value a device supports. lastannounced String Last time the device announced itself to the network. lastseen String Last time the device has transmitted any data. etag String HTTP etag which changes on any action to the light. hascolor bool Indicates if the light can change color. Deprecated - use state instead: if light has no color colormode, hue and xy will not be shown. manufacturer String The manufacturer of the light device. name String Name of a light. modelid String An identifier unique to the product. pointsymbol Object Not used in the current version. powerup Number SETTABLE. Brightness to set after power on (limited to DE devices). swversion String Firmware version. type String Human readable type of the light. state Object The current state of the light. state.on Bool true if the light is on. state.bri Number (0\u2013255) Brightness of the light. Depending on the light type 0 might not mean visible \"off\" but minimum brightness. state.effect Number (0\u20137) Run special scenes (if supported). state.hue Number (0\u201365535) Color hue of the light. The hue parameter in the HSV color model is between 0\u00b0\u2013360\u00b0 and is mapped to 0\u201365535 to get 16-bit resolution. state.sat Number (0\u2013255) Color saturation of the light. There 0 means no color at all and 255 is the greatest saturation of the color. state.ct Number (ctmin\u2013ctmax) Mired color temperature of the light. Where Mired is 1000000 / color temperature (in kelvins). state.xy Array CIE xy color space coordinates as array [x, y] of real values (0\u20131). state.alert String Temporary alert effect. \"none\" \u2014 light is not performing an alert \"select\" \u2014 light is blinking a short time \"lselect\" \u2014 light is blinking a longer time state.colormode String The current color mode of the light: \"hs\" \u2014 hue and saturation \"xy\" \u2014 CIE xy values \"ct\" \u2014 color temperature state.effect String Effect of the light: \"none\" \u2014 no effect \"colorloop\" \u2014 cycle through hue values 0\u2013360 state.speed Number (0\u20136) SETTABLE. Sets the speed of fans/ventilators. state.reachable Bool true if the light is reachable and accepts commands. uniqueid String The unique id of the light. It consists of the MAC address of the light followed by a dash and an unique endpoint identifier in the range 01 to FF. Possible errors \u00b6 304 Not Modified 403 Forbidden 404 Not Found Set light state \u00b6 PUT /api/<apikey>/lights/<id>/state Sets the state of a light. Parameters \u00b6 Field Type Description Required alert String Trigger a temporary alert effect: \"none\" \u2014 light is not performing an alert \"select\" \u2014 light is blinking a short time \"lselect\" \u2014 light is blinking a longer time optional bri Number (0\u2013255) Set the brightness of the light. Depending on the light type 0 might not mean visible \"off\" but minimum brightness. If the light is off and the value is greater 0 a on=true shall also be provided. optional colorloopspeed Number (1\u2013255) Specifies the speed of a colorloop (default: 15). 1 = very fast 255 = very slow This parameter only has an effect when it is called together with effect colorloop. optional ct Number (ctmin\u2013ctmax) Set the Mired color temperature of the light. Where Mired is 1000000 / color temperature (in kelvins). optional effect String Trigger an effect of the light: \"none\" \u2014 no effect \"colorloop\" \u2014 the light will cycle continously through all colors with the speed specified by colorloopspeed optional hue Number (0\u201365535) Set the color hue of the light. The hue parameter in the HSV color model is between 0\u00b0\u2013360\u00b0 and is mapped to 0\u201365535 to get 16-bit resolution. optional on Bool Set to true to turn the light on, false to turn it off. optional sat Number (0\u2013255) Set the color saturation of the light. There 0 means no color at all and 255 is the greatest saturation of the color. optional transitiontime Number Transition time in 1/10 seconds between two states. optional xy Array Set the CIE xy color space coordinates as array [x, y] of real values (0\u20131). optional Window covering parameters \u00b6 For historic reasons window covering devices are currently exposed under the lights endpoint. For lights with type : \"Window covering controller\" \"Window covering device\" Field Type Description Required open Bool Set to true to lift the shutter to 0\u2009%, false to lift it to 100\u2009%. optional stop Bool Stops the current action. optional lift Number String Supported range is 0\u2013100 or special value \"stop\". lift is best understood as \u201cpercentage closed\u201d. So for any lift value below 100\u2009%, open is true. 0\u201399 \u2014 open is true 100 \u2014 open is false \"stop\" \u2014 Stops the lift action optional tilt Number Sets the tilt angle of the shutter (0\u2013100\u2009%). optional Deprecated bri Number String (deprecated by \"lift\") 0\u2013255 or \"stop\" where lift = bri * 100 / 254. optional bri_inc Number (deprecated by \"stop\") Only supported value is 0 meaning stop. optional on Bool (deprecated by \"open\") Inverted value of open . optional sat Number (deprecated by \"tilt\") 0\u2013255 where tilt = sat * 100 / 254. optional Example request data \u00b6 { \"on\": true, \"bri\": 180, \"hue\": 43680, \"sat\": 255, \"transitiontime\": 10 } Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [ { \"success\": { \"/lights/1/state/on\": true }}, { \"success\": { \"/lights/1/state/bri\": 180 }}, { \"success\": { \"/lights/1/state/hue\": 43680 }}, { \"success\": { \"/lights/1/state/sat\": 255 }} ] Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found Set light attributes \u00b6 PUT /api/<apikey>/lights/<id> Sets attributes of a light which are not related to its state. Parameters \u00b6 Field Type Description Required name String (0\u201332) Set the name of the light. required Example request data \u00b6 { \"name\": \"Living Room 1\" } Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [{ \"success\": { \"/lights/1/name\": \"Living Room 1\"}}] Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found Delete light \u00b6 DELETE /api/<apikey>/lights/<id> Removes the light from the gateway. It will not be shown in any REST-API call. Also deletes all groups and scenes on the light device. Parameters \u00b6 Field Type Description Required reset Bool If true sends a network leave command to the light device (may not supported by each manufacturer). optional Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [{ \"success\": { \"id\": \"1\"}}] Possible errors \u00b6 400 Bad Request 404 Not Found Remove all groups \u00b6 DELETE /api/<apikey>/lights/<id>/groups Remove the light from all groups it is a member of. Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [{ \"success\": { \"id\": \"1\"}}] Possible errors \u00b6 404 Not Found Remove all scenes \u00b6 DELETE /api/<apikey>/lights/<id>/scenes Remove the light from all scenes it is a member of. Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [{ \"success\": { \"id\": \"1\"}}] Possible errors \u00b6 404 Not Found","title":"Lights"},{"location":"endpoints/lights/#lights","text":"Monitor and control single lights.","title":"Lights"},{"location":"endpoints/lights/#get-all-lights","text":"GET /api/<apikey>/lights Returns a list of all lights.","title":"Get all lights&nbsp;"},{"location":"endpoints/lights/#parameters","text":"None","title":"Parameters"},{"location":"endpoints/lights/#response","text":"HTTP/1.1 200 OK { \"1\": { \"etag\": \"026bcfe544ad76c7534e5ca8ed39047c\", \"hascolor\": true, \"manufacturer\": \"dresden elektronik\", \"modelid\": \"FLS-PP3\", \"name\": \"Light 1\", \"pointsymbol\": {}, \"state\": { \"alert\": \"none\", \"bri\": 111, \"colormode\": \"ct\", \"ct\": 307, \"effect\": \"none\", \"hue\": 7998, \"on\": false, \"reachable\": true, \"sat\": 172, \"xy\": [ 0.421253, 0.39921 ] }, \"swversion\": \"020C.201000A0\", \"type\": \"Extended color light\", \"uniqueid\": \"00:21:2E:FF:FF:00:73:9F-0A\" }, \"2\": { \"etag\": \"026bcfe544ad76c7534e5ca8ed39047c\", \"hascolor\": false, \"manufacturer\": \"dresden elektronik\", \"modelid\": \"FLS-PP3 White\", \"name\": \"Light 2\", \"pointsymbol\": {}, \"state\": { \"alert\": \"none\", \"bri\": 1, \"effect\": \"none\", \"on\": false, \"reachable\": true }, \"swversion\": \"020C.201000A0\", \"type\": \"Dimmable light\", \"uniqueid\": \"00:21:2E:FF:FF:00:73:9F-0B\" } }","title":"Response"},{"location":"endpoints/lights/#response-fields","text":"The whole light object as descripted in Get light state .","title":"Response fields"},{"location":"endpoints/lights/#possible-errors","text":"403 Forbidden","title":"Possible errors"},{"location":"endpoints/lights/#get-light-state","text":"GET /api/<apikey>/lights/<id> Returns the full state of a light.","title":"Get light state&nbsp;"},{"location":"endpoints/lights/#parameters_1","text":"None","title":"Parameters"},{"location":"endpoints/lights/#response_1","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"etag\": \"026bcfe544ad76c7534e5ca8ed39047c\", \"hascolor\": true, \"manufacturer\": \"dresden elektronik\", \"modelid\": \"FLS-PP3\", \"name\": \"Light 1\", \"pointsymbol\": {}, \"state\": { \"alert\": \"none\", \"bri\": 111, \"colormode\": \"ct\", \"ct\": 307, \"effect\": \"none\", \"hue\": 7998, \"on\": false, \"reachable\": true, \"sat\": 172, \"xy\": [ 0.421253, 0.39921 ] }, \"swversion\": \"020C.201000A0\", \"type\": \"Extended color light\", \"uniqueid\": \"00:21:2E:FF:FF:00:73:9F-0A\" }","title":"Response"},{"location":"endpoints/lights/#response-fields_1","text":"Field Type Description colorcapabilities Number The color capabilities as reported by the light. ctmax Number The maximum mired color temperature value a device supports. ctmin Number The minimum mired color temperature value a device supports. lastannounced String Last time the device announced itself to the network. lastseen String Last time the device has transmitted any data. etag String HTTP etag which changes on any action to the light. hascolor bool Indicates if the light can change color. Deprecated - use state instead: if light has no color colormode, hue and xy will not be shown. manufacturer String The manufacturer of the light device. name String Name of a light. modelid String An identifier unique to the product. pointsymbol Object Not used in the current version. powerup Number SETTABLE. Brightness to set after power on (limited to DE devices). swversion String Firmware version. type String Human readable type of the light. state Object The current state of the light. state.on Bool true if the light is on. state.bri Number (0\u2013255) Brightness of the light. Depending on the light type 0 might not mean visible \"off\" but minimum brightness. state.effect Number (0\u20137) Run special scenes (if supported). state.hue Number (0\u201365535) Color hue of the light. The hue parameter in the HSV color model is between 0\u00b0\u2013360\u00b0 and is mapped to 0\u201365535 to get 16-bit resolution. state.sat Number (0\u2013255) Color saturation of the light. There 0 means no color at all and 255 is the greatest saturation of the color. state.ct Number (ctmin\u2013ctmax) Mired color temperature of the light. Where Mired is 1000000 / color temperature (in kelvins). state.xy Array CIE xy color space coordinates as array [x, y] of real values (0\u20131). state.alert String Temporary alert effect. \"none\" \u2014 light is not performing an alert \"select\" \u2014 light is blinking a short time \"lselect\" \u2014 light is blinking a longer time state.colormode String The current color mode of the light: \"hs\" \u2014 hue and saturation \"xy\" \u2014 CIE xy values \"ct\" \u2014 color temperature state.effect String Effect of the light: \"none\" \u2014 no effect \"colorloop\" \u2014 cycle through hue values 0\u2013360 state.speed Number (0\u20136) SETTABLE. Sets the speed of fans/ventilators. state.reachable Bool true if the light is reachable and accepts commands. uniqueid String The unique id of the light. It consists of the MAC address of the light followed by a dash and an unique endpoint identifier in the range 01 to FF.","title":"Response fields"},{"location":"endpoints/lights/#possible-errors_1","text":"304 Not Modified 403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/lights/#set-light-state","text":"PUT /api/<apikey>/lights/<id>/state Sets the state of a light.","title":"Set light state&nbsp;"},{"location":"endpoints/lights/#parameters_2","text":"Field Type Description Required alert String Trigger a temporary alert effect: \"none\" \u2014 light is not performing an alert \"select\" \u2014 light is blinking a short time \"lselect\" \u2014 light is blinking a longer time optional bri Number (0\u2013255) Set the brightness of the light. Depending on the light type 0 might not mean visible \"off\" but minimum brightness. If the light is off and the value is greater 0 a on=true shall also be provided. optional colorloopspeed Number (1\u2013255) Specifies the speed of a colorloop (default: 15). 1 = very fast 255 = very slow This parameter only has an effect when it is called together with effect colorloop. optional ct Number (ctmin\u2013ctmax) Set the Mired color temperature of the light. Where Mired is 1000000 / color temperature (in kelvins). optional effect String Trigger an effect of the light: \"none\" \u2014 no effect \"colorloop\" \u2014 the light will cycle continously through all colors with the speed specified by colorloopspeed optional hue Number (0\u201365535) Set the color hue of the light. The hue parameter in the HSV color model is between 0\u00b0\u2013360\u00b0 and is mapped to 0\u201365535 to get 16-bit resolution. optional on Bool Set to true to turn the light on, false to turn it off. optional sat Number (0\u2013255) Set the color saturation of the light. There 0 means no color at all and 255 is the greatest saturation of the color. optional transitiontime Number Transition time in 1/10 seconds between two states. optional xy Array Set the CIE xy color space coordinates as array [x, y] of real values (0\u20131). optional","title":"Parameters"},{"location":"endpoints/lights/#window-covering-parameters","text":"For historic reasons window covering devices are currently exposed under the lights endpoint. For lights with type : \"Window covering controller\" \"Window covering device\" Field Type Description Required open Bool Set to true to lift the shutter to 0\u2009%, false to lift it to 100\u2009%. optional stop Bool Stops the current action. optional lift Number String Supported range is 0\u2013100 or special value \"stop\". lift is best understood as \u201cpercentage closed\u201d. So for any lift value below 100\u2009%, open is true. 0\u201399 \u2014 open is true 100 \u2014 open is false \"stop\" \u2014 Stops the lift action optional tilt Number Sets the tilt angle of the shutter (0\u2013100\u2009%). optional Deprecated bri Number String (deprecated by \"lift\") 0\u2013255 or \"stop\" where lift = bri * 100 / 254. optional bri_inc Number (deprecated by \"stop\") Only supported value is 0 meaning stop. optional on Bool (deprecated by \"open\") Inverted value of open . optional sat Number (deprecated by \"tilt\") 0\u2013255 where tilt = sat * 100 / 254. optional","title":"Window covering parameters"},{"location":"endpoints/lights/#example-request-data","text":"{ \"on\": true, \"bri\": 180, \"hue\": 43680, \"sat\": 255, \"transitiontime\": 10 }","title":"Example request data"},{"location":"endpoints/lights/#response_2","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [ { \"success\": { \"/lights/1/state/on\": true }}, { \"success\": { \"/lights/1/state/bri\": 180 }}, { \"success\": { \"/lights/1/state/hue\": 43680 }}, { \"success\": { \"/lights/1/state/sat\": 255 }} ]","title":"Response"},{"location":"endpoints/lights/#possible-errors_2","text":"400 Bad Request 403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/lights/#set-light-attributes","text":"PUT /api/<apikey>/lights/<id> Sets attributes of a light which are not related to its state.","title":"Set light attributes&nbsp;"},{"location":"endpoints/lights/#parameters_3","text":"Field Type Description Required name String (0\u201332) Set the name of the light. required","title":"Parameters"},{"location":"endpoints/lights/#example-request-data_1","text":"{ \"name\": \"Living Room 1\" }","title":"Example request data"},{"location":"endpoints/lights/#response_3","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [{ \"success\": { \"/lights/1/name\": \"Living Room 1\"}}]","title":"Response"},{"location":"endpoints/lights/#possible-errors_3","text":"400 Bad Request 403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/lights/#delete-light","text":"DELETE /api/<apikey>/lights/<id> Removes the light from the gateway. It will not be shown in any REST-API call. Also deletes all groups and scenes on the light device.","title":"Delete light&nbsp;"},{"location":"endpoints/lights/#parameters_4","text":"Field Type Description Required reset Bool If true sends a network leave command to the light device (may not supported by each manufacturer). optional","title":"Parameters"},{"location":"endpoints/lights/#response_4","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [{ \"success\": { \"id\": \"1\"}}]","title":"Response"},{"location":"endpoints/lights/#possible-errors_4","text":"400 Bad Request 404 Not Found","title":"Possible errors"},{"location":"endpoints/lights/#remove-all-groups","text":"DELETE /api/<apikey>/lights/<id>/groups Remove the light from all groups it is a member of.","title":"Remove all groups&nbsp;"},{"location":"endpoints/lights/#response_5","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [{ \"success\": { \"id\": \"1\"}}]","title":"Response"},{"location":"endpoints/lights/#possible-errors_5","text":"404 Not Found","title":"Possible errors"},{"location":"endpoints/lights/#remove-all-scenes","text":"DELETE /api/<apikey>/lights/<id>/scenes Remove the light from all scenes it is a member of.","title":"Remove all scenes&nbsp;"},{"location":"endpoints/lights/#response_6","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [{ \"success\": { \"id\": \"1\"}}]","title":"Response"},{"location":"endpoints/lights/#possible-errors_6","text":"404 Not Found","title":"Possible errors"},{"location":"endpoints/rules/","text":"Rules \u00b6 Rules provide the ability to trigger actions of lights or groups when a specific sensor condition is met. Create rule \u00b6 POST /api/<apikey>/rules Creates a new rule. Parameters \u00b6 Field Type Description Required actions Array (1\u20138) An array of actions that will happen when the rule triggers. required action.address String path to a light, group or scene resource required action.body Object Parameters that will be send to the resource formated as JSON. required action.method String Can be PUT, POST or DELETE. required conditions Array(condition) (1\u20138) The conditions that must be met to trigger a rule. required condition.address String path to a sensor resource and the related state required condition.operator String eq , gt , lt , dx (equals, greater than, lower than, on change). required condition.value String The value the operator is compared with. Will be casted automatically to the corresponding data type. required name String The name of the rule. required periodic Number Specifies if the rule should trigger periodically. 0 = trigger on event; >0 = time in ms the rule will be triggered periodically. Default is 0. optional status String The status of the rule, either \"enabled\" or \"disabled\". Default is \"enabled\". optional Example request data \u00b6 { \"actions\": [ { \"address\": \"/groups/0/action\", \"body\": { \"on\": true }, \"method\": \"BIND\" } ], \"conditions\": [ { \"address\": \"/sensors/1/state/buttonevent\", \"operator\": \"eq\", \"value\": \"1\" } ], \"name\": \"Switch button 1 all lights On/Off\" } This will create a binding between a switch and the On/Off Cluster of all Lights of the group 0. Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"1\" } } ] Response fields \u00b6 Field Type Description id String The unique identifier of the new rule. Possible errors \u00b6 400 Bad Request 403 Forbidden Get all Rules \u00b6 GET /api/<apikey>/rules Returns a list of all rules. If there are no rules in the system then an empty object {} will be returned. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK { \"1\": { \"actions\": [ { \"address\": \"/lights/1/state\", \"body\": { \"on\": true }, \"method\": \"BIND\" } ], \"conditions\": [ { \"address\": \"/sensors/2/state/buttonevent\", \"operator\": \"eq\", \"value\": \"4\" } ], \"created\": \"2016-07-04T14:17:12\", \"etag\": \"9bd1fcc627001458ea88c8742e61c692\", \"lasttriggered\": \"none\", \"name\": \"Sensor: 2 EP:4 On/Off\", \"owner\": \"AD4F14F244\", \"periodic\": 0, \"status\": \"enabled\", \"timestriggered\": 0 }, \"2\": { \"actions\": [ { \"address\": \"/groups/0/action\", \"body\": { \"on\": false }, \"method\": \"PUT\" } ], \"conditions\": [ { \"address\": \"/sensors/5/state/buttonevent\", \"operator\": \"eq\", \"value\": \"34\" }, { \"address\": \"/sensors/5/state/lastupdated\", \"operator\": \"dx\" } ], \"created\": \"2016-07-05T13:36:52\", \"etag\": \"0fb118418fa77116052f74fb129a648b\", \"lasttriggered\": \"none\", \"name\": \"0x0000000000402483[Rule1]\", \"owner\": \"AD4F14F244\", \"periodic\": 0, \"status\": \"enabled\", \"timestriggered\": 0 } } Response fields \u00b6 The whole rule object as descripted in Get rule . Possible errors \u00b6 403 Forbidden Get rule \u00b6 GET /api/<apikey>/rules/<id> Returns the rule with the specified id. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"actions\": [ { \"address\": \"/lights/1/state\", \"body\": { \"on\": true }, \"method\": \"BIND\" } ], \"conditions\": [ { \"address\": \"/sensors/2/state/buttonevent\", \"operator\": \"eq\", \"value\": \"4\" } ], \"created\": \"2016-07-04T14:17:12\", \"etag\": \"9bd1fcc627001458ea88c8742e61c692\", \"lasttriggered\": \"none\", \"name\": \"Sensor: 2 EP:4 On/Off\", \"owner\": \"AD4F14F244\", \"periodic\": 0, \"status\": \"enabled\", \"timestriggered\": 0 } Response fields \u00b6 Field Type Description actions Array An array of actions that will happen when the rule triggers. action.address String path to a light, group or scene resource action.body Object Parameters that will be send to the resource formated as JSON. action.method String Can be PUT, POST or DELETE. conditions Array The conditions that must be met to trigger a rule. condition.address String path to a sensor resource condition.operator String eq, gt, lt, dx (equals, greater than, lower than, on change). condition.value String The value the operator is compared with. Will be casted automatically to the corresponding data type. created String Timestamp when the rule was created. etag String HTTP etag which changes whenever the rule is changed. lasttriggered String Timestamp when the rule was last triggered. name String The name of the rule. owner String The owner of the rule. periodic Number Specifies if the rule should trigger periodically. 0 = trigger on event; >0 = time in ms the rule will be triggered periodically. status String The status of the rule, either \"enabled\" or \"disabled\". timestriggered Number Times the rule was triggered. Possible errors \u00b6 403 Forbidden 404 Not Found Update rule \u00b6 PUT /api/<apikey>/rules/<id>/ Update a rule with the specified parameters. Parameters \u00b6 Field Type Description Required actions Array (1\u20138) An array of actions that will happen when the rule triggers. optional conditions Array (1\u20138) The conditions that must be met to trigger a rule. optional name String The name of the rule. optional periodic Number Specifies if the rule should trigger periodically. 0 = trigger on event; >0 = time in ms the rule will be triggered periodically. Default is 0. optional status String The status of the rule, either \"enabled\" or \"disabled\", the default is \"enabled\". optional Example request data \u00b6 { \"actions\": [ { \"address\": \"/lights/1/state\", \"body\": { \"bri\": 1 }, \"method\": \"BIND\" } ] } Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [ { \"success\": { \"/rules/1/actions\": { \"address\": \"/lights/1/state\", \"body\": { \"bri\": 1 }, \"method\": \"BIND\" } } } ] Possible errors \u00b6 400 Bad Request 403 Forbidden Delete rule \u00b6 DELETE /api/<apikey>/ruless/<id> Delete a rule. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [{ \"success\": \"1\"}] Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found","title":"Rules"},{"location":"endpoints/rules/#rules","text":"Rules provide the ability to trigger actions of lights or groups when a specific sensor condition is met.","title":"Rules"},{"location":"endpoints/rules/#create-rule","text":"POST /api/<apikey>/rules Creates a new rule.","title":"Create rule&nbsp;"},{"location":"endpoints/rules/#parameters","text":"Field Type Description Required actions Array (1\u20138) An array of actions that will happen when the rule triggers. required action.address String path to a light, group or scene resource required action.body Object Parameters that will be send to the resource formated as JSON. required action.method String Can be PUT, POST or DELETE. required conditions Array(condition) (1\u20138) The conditions that must be met to trigger a rule. required condition.address String path to a sensor resource and the related state required condition.operator String eq , gt , lt , dx (equals, greater than, lower than, on change). required condition.value String The value the operator is compared with. Will be casted automatically to the corresponding data type. required name String The name of the rule. required periodic Number Specifies if the rule should trigger periodically. 0 = trigger on event; >0 = time in ms the rule will be triggered periodically. Default is 0. optional status String The status of the rule, either \"enabled\" or \"disabled\". Default is \"enabled\". optional","title":"Parameters"},{"location":"endpoints/rules/#example-request-data","text":"{ \"actions\": [ { \"address\": \"/groups/0/action\", \"body\": { \"on\": true }, \"method\": \"BIND\" } ], \"conditions\": [ { \"address\": \"/sensors/1/state/buttonevent\", \"operator\": \"eq\", \"value\": \"1\" } ], \"name\": \"Switch button 1 all lights On/Off\" } This will create a binding between a switch and the On/Off Cluster of all Lights of the group 0.","title":"Example request data"},{"location":"endpoints/rules/#response","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"1\" } } ]","title":"Response"},{"location":"endpoints/rules/#response-fields","text":"Field Type Description id String The unique identifier of the new rule.","title":"Response fields"},{"location":"endpoints/rules/#possible-errors","text":"400 Bad Request 403 Forbidden","title":"Possible errors"},{"location":"endpoints/rules/#get-all-rules","text":"GET /api/<apikey>/rules Returns a list of all rules. If there are no rules in the system then an empty object {} will be returned.","title":"Get all Rules&nbsp;"},{"location":"endpoints/rules/#parameters_1","text":"None","title":"Parameters"},{"location":"endpoints/rules/#response_1","text":"HTTP/1.1 200 OK { \"1\": { \"actions\": [ { \"address\": \"/lights/1/state\", \"body\": { \"on\": true }, \"method\": \"BIND\" } ], \"conditions\": [ { \"address\": \"/sensors/2/state/buttonevent\", \"operator\": \"eq\", \"value\": \"4\" } ], \"created\": \"2016-07-04T14:17:12\", \"etag\": \"9bd1fcc627001458ea88c8742e61c692\", \"lasttriggered\": \"none\", \"name\": \"Sensor: 2 EP:4 On/Off\", \"owner\": \"AD4F14F244\", \"periodic\": 0, \"status\": \"enabled\", \"timestriggered\": 0 }, \"2\": { \"actions\": [ { \"address\": \"/groups/0/action\", \"body\": { \"on\": false }, \"method\": \"PUT\" } ], \"conditions\": [ { \"address\": \"/sensors/5/state/buttonevent\", \"operator\": \"eq\", \"value\": \"34\" }, { \"address\": \"/sensors/5/state/lastupdated\", \"operator\": \"dx\" } ], \"created\": \"2016-07-05T13:36:52\", \"etag\": \"0fb118418fa77116052f74fb129a648b\", \"lasttriggered\": \"none\", \"name\": \"0x0000000000402483[Rule1]\", \"owner\": \"AD4F14F244\", \"periodic\": 0, \"status\": \"enabled\", \"timestriggered\": 0 } }","title":"Response"},{"location":"endpoints/rules/#response-fields_1","text":"The whole rule object as descripted in Get rule .","title":"Response fields"},{"location":"endpoints/rules/#possible-errors_1","text":"403 Forbidden","title":"Possible errors"},{"location":"endpoints/rules/#get-rule","text":"GET /api/<apikey>/rules/<id> Returns the rule with the specified id.","title":"Get rule&nbsp;"},{"location":"endpoints/rules/#parameters_2","text":"None","title":"Parameters"},{"location":"endpoints/rules/#response_2","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"actions\": [ { \"address\": \"/lights/1/state\", \"body\": { \"on\": true }, \"method\": \"BIND\" } ], \"conditions\": [ { \"address\": \"/sensors/2/state/buttonevent\", \"operator\": \"eq\", \"value\": \"4\" } ], \"created\": \"2016-07-04T14:17:12\", \"etag\": \"9bd1fcc627001458ea88c8742e61c692\", \"lasttriggered\": \"none\", \"name\": \"Sensor: 2 EP:4 On/Off\", \"owner\": \"AD4F14F244\", \"periodic\": 0, \"status\": \"enabled\", \"timestriggered\": 0 }","title":"Response"},{"location":"endpoints/rules/#response-fields_2","text":"Field Type Description actions Array An array of actions that will happen when the rule triggers. action.address String path to a light, group or scene resource action.body Object Parameters that will be send to the resource formated as JSON. action.method String Can be PUT, POST or DELETE. conditions Array The conditions that must be met to trigger a rule. condition.address String path to a sensor resource condition.operator String eq, gt, lt, dx (equals, greater than, lower than, on change). condition.value String The value the operator is compared with. Will be casted automatically to the corresponding data type. created String Timestamp when the rule was created. etag String HTTP etag which changes whenever the rule is changed. lasttriggered String Timestamp when the rule was last triggered. name String The name of the rule. owner String The owner of the rule. periodic Number Specifies if the rule should trigger periodically. 0 = trigger on event; >0 = time in ms the rule will be triggered periodically. status String The status of the rule, either \"enabled\" or \"disabled\". timestriggered Number Times the rule was triggered.","title":"Response fields"},{"location":"endpoints/rules/#possible-errors_2","text":"403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/rules/#update-rule","text":"PUT /api/<apikey>/rules/<id>/ Update a rule with the specified parameters.","title":"Update rule&nbsp;"},{"location":"endpoints/rules/#parameters_3","text":"Field Type Description Required actions Array (1\u20138) An array of actions that will happen when the rule triggers. optional conditions Array (1\u20138) The conditions that must be met to trigger a rule. optional name String The name of the rule. optional periodic Number Specifies if the rule should trigger periodically. 0 = trigger on event; >0 = time in ms the rule will be triggered periodically. Default is 0. optional status String The status of the rule, either \"enabled\" or \"disabled\", the default is \"enabled\". optional","title":"Parameters"},{"location":"endpoints/rules/#example-request-data_1","text":"{ \"actions\": [ { \"address\": \"/lights/1/state\", \"body\": { \"bri\": 1 }, \"method\": \"BIND\" } ] }","title":"Example request data"},{"location":"endpoints/rules/#response_3","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [ { \"success\": { \"/rules/1/actions\": { \"address\": \"/lights/1/state\", \"body\": { \"bri\": 1 }, \"method\": \"BIND\" } } } ]","title":"Response"},{"location":"endpoints/rules/#possible-errors_3","text":"400 Bad Request 403 Forbidden","title":"Possible errors"},{"location":"endpoints/rules/#delete-rule","text":"DELETE /api/<apikey>/ruless/<id> Delete a rule.","title":"Delete rule&nbsp;"},{"location":"endpoints/rules/#parameters_4","text":"None","title":"Parameters"},{"location":"endpoints/rules/#response_4","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [{ \"success\": \"1\"}]","title":"Response"},{"location":"endpoints/rules/#possible-errors_4","text":"400 Bad Request 403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/scenes/","text":"Scenes \u00b6 Scenes provide an easy and performant way to recall often used states to a group. Create scene \u00b6 POST /api/<apikey>/groups/<group_id>/scenes Creates a new scene for a group. The actual state of each light will become the lights scene state. Parameters \u00b6 Field Type Description Required name String The name of the new scene required Example request data \u00b6 { \"name\": \"Garage\" } Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ] Response fields \u00b6 Field Type Description id String The unique identifier of the scene. Note Creating a scene with a name which already exists will not create a new scene or fail. Such a call will only return the id of the existing scene and store the current state of all lights. Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable Get all scenes \u00b6 GET /api/<apikey>/groups/<group_id>/scenes Returns a list of all scenes of a group. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK Etag: 203941fel3ds8ad61903224 { \"1\": { \"lights\": [\"1\",\"2\"], \"name\": \"working\" }, \"2\": { \"lights\": [\"3\"], \"name\": \"reading\" } } Response fields \u00b6 Field Type Description lights Array Lights which are members of the scene. name String Name of the scene. Possible errors \u00b6 403 Forbidden 404 Not Found Get scene attributes \u00b6 GET /api/<apikey>/groups/<group_id>/scenes/<scene_id> Returns all attributes of a scene. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK Etag: 0b32030b31ef30a4446c9adff6a6f9e5 { \"lights\": [ { \"bri\": 111, \"id\": \"3\", \"on\": false, \"transitiontime\": 0, \"x\": 27499, \"y\": 26060 } ], \"name\": \"reading\", \"state\": 0 } Response fields \u00b6 Field Type Description lights Array Contains objects which describe the state fof each light in the scene. lights[].id String The id of the light. lights[].on Bool True if the light is on. lights[].bri Number (0..255) The brightness of the light. lights[].transitiontime Number The scene fading transition time in 1/10 seconds. lights[].x Number (0..1) The color x value of the light. lights[].y Number (0..1) The color y value of the light. lights[].ct Number The mired color temperature value of the light. lights[].hue Number (0.65535) The hue value of the light. lights[].sat Number (0.255) The saturation value of the light. name String Name of the scene. state Number Deprecated - will be removed in future. Possible errors \u00b6 403 Forbidden 404 Not Found Set scene attributes \u00b6 PUT /api/<apikey>/groups/<group_id>/scenes/<scene_id> Sets attributes of a scene. Parameters \u00b6 Field Type Description Required name String Name of the scene. optional Example request data \u00b6 { \"name\": \"working\" } Response \u00b6 HTTP/1.1 200 OK Etag: 030cf8c1c0025420f3a0659afab251f5 [ { \"success\": { \"/groups/1/scenes/1/name\": \"working\" } } ] Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found Store scene \u00b6 PUT /api/<apikey>/groups/<group_id>/scenes/<scene_id>/store Stores the current group state in the scene. The actual state of each light in the group will become the lights scene state. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ] Response fields \u00b6 Field Type Description id String The unique identifier of the scene. Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable Recall scene \u00b6 PUT /api/<apikey>/groups/<group_id>/scenes/<scene_id>/recall Recalls a scene. The actual state of each light in the group will become the lights scene state stored in each light. Note Lights which are not reachable (turned off) won\u2019t be affected! Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ] Response fields \u00b6 Field Type Description id String The unique identifier of the scene. Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable Modify scene \u00b6 PUT /api/<apikey>/groups/<group_id>/scenes/<scene_id>/lights/<light_id>/state Modifies the state of a light of the scene. Note The light must be a member of the scene. Example request data \u00b6 { \"bri\": 111, \"on\": true, \"transitiontime\": 10, \"xy\": [ 0.44, 0.98 ] } Parameters \u00b6 Field Type Description Required bri Number (0..255) Brightness of the light optional on Bool On/off status of the light optional transitiontime Number Transitiontime of the light when the scene is called in 1/10 seconds optional xy Array Xy color values of the light mapped to [0..1] optional Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"1\" } } ] Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable Delete scene \u00b6 DELETE /api/<apikey>/groups/<group_id>/scenes/<scene_id> Deletes a scene. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ] Response fields \u00b6 Field Type Description id String The unique identifier of the scene. Possible errors \u00b6 403 Forbidden 404 Not Found 503 Service Unavailable","title":"Scenes"},{"location":"endpoints/scenes/#scenes","text":"Scenes provide an easy and performant way to recall often used states to a group.","title":"Scenes"},{"location":"endpoints/scenes/#create-scene","text":"POST /api/<apikey>/groups/<group_id>/scenes Creates a new scene for a group. The actual state of each light will become the lights scene state.","title":"Create scene&nbsp;"},{"location":"endpoints/scenes/#parameters","text":"Field Type Description Required name String The name of the new scene required","title":"Parameters"},{"location":"endpoints/scenes/#example-request-data","text":"{ \"name\": \"Garage\" }","title":"Example request data"},{"location":"endpoints/scenes/#response","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ]","title":"Response"},{"location":"endpoints/scenes/#response-fields","text":"Field Type Description id String The unique identifier of the scene. Note Creating a scene with a name which already exists will not create a new scene or fail. Such a call will only return the id of the existing scene and store the current state of all lights.","title":"Response fields"},{"location":"endpoints/scenes/#possible-errors","text":"400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/scenes/#get-all-scenes","text":"GET /api/<apikey>/groups/<group_id>/scenes Returns a list of all scenes of a group.","title":"Get all scenes&nbsp;"},{"location":"endpoints/scenes/#parameters_1","text":"None","title":"Parameters"},{"location":"endpoints/scenes/#response_1","text":"HTTP/1.1 200 OK Etag: 203941fel3ds8ad61903224 { \"1\": { \"lights\": [\"1\",\"2\"], \"name\": \"working\" }, \"2\": { \"lights\": [\"3\"], \"name\": \"reading\" } }","title":"Response"},{"location":"endpoints/scenes/#response-fields_1","text":"Field Type Description lights Array Lights which are members of the scene. name String Name of the scene.","title":"Response fields"},{"location":"endpoints/scenes/#possible-errors_1","text":"403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/scenes/#get-scene-attributes","text":"GET /api/<apikey>/groups/<group_id>/scenes/<scene_id> Returns all attributes of a scene.","title":"Get scene attributes&nbsp;"},{"location":"endpoints/scenes/#parameters_2","text":"None","title":"Parameters"},{"location":"endpoints/scenes/#response_2","text":"HTTP/1.1 200 OK Etag: 0b32030b31ef30a4446c9adff6a6f9e5 { \"lights\": [ { \"bri\": 111, \"id\": \"3\", \"on\": false, \"transitiontime\": 0, \"x\": 27499, \"y\": 26060 } ], \"name\": \"reading\", \"state\": 0 }","title":"Response"},{"location":"endpoints/scenes/#response-fields_2","text":"Field Type Description lights Array Contains objects which describe the state fof each light in the scene. lights[].id String The id of the light. lights[].on Bool True if the light is on. lights[].bri Number (0..255) The brightness of the light. lights[].transitiontime Number The scene fading transition time in 1/10 seconds. lights[].x Number (0..1) The color x value of the light. lights[].y Number (0..1) The color y value of the light. lights[].ct Number The mired color temperature value of the light. lights[].hue Number (0.65535) The hue value of the light. lights[].sat Number (0.255) The saturation value of the light. name String Name of the scene. state Number Deprecated - will be removed in future.","title":"Response fields"},{"location":"endpoints/scenes/#possible-errors_2","text":"403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/scenes/#set-scene-attributes","text":"PUT /api/<apikey>/groups/<group_id>/scenes/<scene_id> Sets attributes of a scene.","title":"Set scene attributes&nbsp;"},{"location":"endpoints/scenes/#parameters_3","text":"Field Type Description Required name String Name of the scene. optional","title":"Parameters"},{"location":"endpoints/scenes/#example-request-data_1","text":"{ \"name\": \"working\" }","title":"Example request data"},{"location":"endpoints/scenes/#response_3","text":"HTTP/1.1 200 OK Etag: 030cf8c1c0025420f3a0659afab251f5 [ { \"success\": { \"/groups/1/scenes/1/name\": \"working\" } } ]","title":"Response"},{"location":"endpoints/scenes/#possible-errors_3","text":"400 Bad Request 403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/scenes/#store-scene","text":"PUT /api/<apikey>/groups/<group_id>/scenes/<scene_id>/store Stores the current group state in the scene. The actual state of each light in the group will become the lights scene state.","title":"Store scene&nbsp;"},{"location":"endpoints/scenes/#parameters_4","text":"None","title":"Parameters"},{"location":"endpoints/scenes/#response_4","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ]","title":"Response"},{"location":"endpoints/scenes/#response-fields_3","text":"Field Type Description id String The unique identifier of the scene.","title":"Response fields"},{"location":"endpoints/scenes/#possible-errors_4","text":"400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/scenes/#recall-scene","text":"PUT /api/<apikey>/groups/<group_id>/scenes/<scene_id>/recall Recalls a scene. The actual state of each light in the group will become the lights scene state stored in each light. Note Lights which are not reachable (turned off) won\u2019t be affected!","title":"Recall scene&nbsp;"},{"location":"endpoints/scenes/#parameters_5","text":"None","title":"Parameters"},{"location":"endpoints/scenes/#response_5","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ]","title":"Response"},{"location":"endpoints/scenes/#response-fields_4","text":"Field Type Description id String The unique identifier of the scene.","title":"Response fields"},{"location":"endpoints/scenes/#possible-errors_5","text":"400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/scenes/#modify-scene","text":"PUT /api/<apikey>/groups/<group_id>/scenes/<scene_id>/lights/<light_id>/state Modifies the state of a light of the scene. Note The light must be a member of the scene.","title":"Modify scene&nbsp;"},{"location":"endpoints/scenes/#example-request-data_2","text":"{ \"bri\": 111, \"on\": true, \"transitiontime\": 10, \"xy\": [ 0.44, 0.98 ] }","title":"Example request data"},{"location":"endpoints/scenes/#parameters_6","text":"Field Type Description Required bri Number (0..255) Brightness of the light optional on Bool On/off status of the light optional transitiontime Number Transitiontime of the light when the scene is called in 1/10 seconds optional xy Array Xy color values of the light mapped to [0..1] optional","title":"Parameters"},{"location":"endpoints/scenes/#response_6","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"1\" } } ]","title":"Response"},{"location":"endpoints/scenes/#possible-errors_6","text":"400 Bad Request 403 Forbidden 404 Not Found 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/scenes/#delete-scene","text":"DELETE /api/<apikey>/groups/<group_id>/scenes/<scene_id> Deletes a scene.","title":"Delete scene&nbsp;"},{"location":"endpoints/scenes/#parameters_7","text":"None","title":"Parameters"},{"location":"endpoints/scenes/#response_7","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ]","title":"Response"},{"location":"endpoints/scenes/#response-fields_5","text":"Field Type Description id String The unique identifier of the scene.","title":"Response fields"},{"location":"endpoints/scenes/#possible-errors_7","text":"403 Forbidden 404 Not Found 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/schedules/","text":"Schedules \u00b6 Schedules provide the ability to trigger timed commands to groups or lights. Create schedule \u00b6 POST /api/<apikey>/schedules Creates a new schedule. Parameters \u00b6 Field Type Description Required name String The name of the new schedule. If the name already exists a number will be appended. optional description String The description of the schedule. optional command Object The command to execute when the schedule triggers. required command.address String The address of a light or group ressource required command.method String Must be \"PUT\". required command.body Object The state that the light or group will activate when the schedule triggers required status String Whether the schedule is \"enabled\" or \"disabled\". Default is \"enabled\". optional autodelete Bool If true the schedule will be deleted after triggered. Else it will be disabled. Default is true. optional time String Time when the schedule shall trigger in UTC ISO 8601:2004 format. specific date: \"yyyy-MM-ddThh:mm:ss\" repeated days: \"W[0\u2013127]/Thh:mm:ss\" timer: \"PThh:mm:ss\" recurring timer: \"R[0\u201399]/PThh:mm:ss\" Repeated days use a bitmap to determine on which day of the week the alarm should trigger. The Format is: 0MTWTFSS. Example: 01111100 = 124 is weekdays, 00000011 = 3 is weekend. The number after R of recurring timer determine the number of repetitions of the timer. Not specifying a number means infinity. required Example request data \u00b6 { \"name\": \"blue moon\", \"description\": \"Turns all lights blue\", \"command\": { \"address\": \"/api/8918fbad2100nag17ca1/groups/5/action\", \"method\": \"PUT\", \"body\": { \"on\": true, \"hue\": 43000, \"sat\": 255 } }, \"time\": \"2013-07-29T09:30:00\" } Note The address in the command object must contain a valid API key. Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ]; Response fields \u00b6 Field Type Description id String The unique identifier of the new schedule. Possible errors \u00b6 400 Bad Request 403 Forbidden Get all schedules \u00b6 GET /api/<apikey>/schedules Returns a list of all schedules. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK Etag: 203941fel3ds8ad61903224 { \"1\": { \"autodelete\": false, \"command\": { \"address\": \"/api/8918fbad2100nag17ca1/groups/2/action\", \"method\": \"PUT\", \"body\": { \"on\": false } }, \"description\": \"Turns all lights off\", \"etag\": \"4e100d1c4e3497154a77bc0865c89030\", \"name\": \"turn all off\", \"status\": \"enabled\", \"time\": \"2013-07-30T20:10:00\" }, \"2\": { \"autodelete\": false, \"command\": { \"address\": \"/api/AD4F14F244/groups/4/scenes/1/recall\", \"body\": {}, \"method\": \"PUT\" }, \"description\": \"\", \"etag\": \"4e100d1c4e3497154a77bc0865c89030\", \"name\": \"call scene\", \"status\": \"enabled\", \"time\": \"W120/T10:00:00\" } } Response fields \u00b6 The full schedule object as in Get schedule attributs . Possible errors \u00b6 403 Forbidden Get schedule attributes \u00b6 GET /api/<apikey>/schedules/<id> Returns all attributes of a schedule. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK Etag: 0b32030b31ef30a4446c9adff6a6f9e5 { \"autodelete\": false, \"command\": { \"address\": \"/api/8918fbad2100nag17ca1/groups/2/action\", \"method\": \"PUT\", \"body\": { \"on\": false } }, \"description\": \"Turns all lights off\", \"etag\": \"4e100d1c4e3497154a77bc0865c89030\", \"name\": \"turn all off\", \"status\": \"enabled\", \"time\": \"2013-07-30T20:10:00\" } Response fields \u00b6 Field Type Description autodelete Bool If set to true the schedule will be deleted after trigger. Else it will be disabled. command Object The command to execute when the schedule triggers. command.address String The address of a light or group ressource required command.method String Must be \"PUT\". required command.body Object The state that the light or group will activate when the schedule triggers required description String The description of the schedule. etag String The etag of the schedule. name String Name of the schedule. status String The status of the schedule, \"enabled\" or \"disabled\". time String Time when the schedule shall trigger in UTC ISO 8601:2004 format. specific date: \"yyyy-MM-ddThh:mm:ss\" repeated days: \"W[0\u2013127]/Thh:mm:ss\" timer: \"PThh:mm:ss\" recurring timer: \"R[0\u201399]/PThh:mm:ss\" Repeated days use a bitmap to determine on which day of the week the alarm should trigger. The Format is: 0MTWTFSS. Example: 01111100 = 124 is weekdays, 00000011 = 3 is weekend. The number after R of recurring timer determine the number of repetitions of the timer. Not specifying a number means infinity. Possible errors \u00b6 403 Forbidden 404 Not Found Set schedule attributes \u00b6 PUT /api/<apikey>/schedules/<id> Sets attributes of a schedule. Parameters \u00b6 Field Type Description Required name String The name of the new schedule. If the name already exists a number will be appended. optional description String The description of the schedule. optional command Object The command to execute when the schedule triggers. optional command.address String The address of a light or group ressource optional command.method String Must be \"PUT\". optional command.body Object The state that the light or group will activate when the schedule triggers optional status String Whether the schedule is \"enabled\" or \"disabled\". Default is \"enabled\". optional autodelete Bool If true the schedule will be deleted after triggered. Else it will be disabled. Default is true. optional time String Time when the schedule shall trigger in UTC ISO 8601:2004 format. The time must be in the future. specific date: \"yyyy-MM-ddThh:mm:ss\" repeated days: \"W[0\u2013127]/Thh:mm:ss\" timer: \"PThh:mm:ss\" recurring timer: \"R[0\u201399]/PThh:mm:ss\" Repeated days use a bitmap to determine on which day of the week the alarm should trigger. The Format is: 0MTWTFSS. Example: 01111100 = 124 is weekdays, 00000011 = 3 is weekend. The number after R of recurring timer determine the number of repetitions of the timer. Not specifying a number means infinity. optional Example request data \u00b6 { \"name\": \"working\" } Response \u00b6 HTTP/1.1 200 OK Etag: 030cf8c1c0025420f3a0659afab251f5 [ { \"success\": { \"/schedules/1/name\": \"working\" } } ] Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found Delete schedule \u00b6 DELETE /api/<apikey>/schedules/<id> Deletes a schedule. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ] Response fields \u00b6 Field Type Description id String The unique identifier of the schedule. Possible errors \u00b6 403 Forbidden 404 Not Found","title":"Schedules"},{"location":"endpoints/schedules/#schedules","text":"Schedules provide the ability to trigger timed commands to groups or lights.","title":"Schedules"},{"location":"endpoints/schedules/#create-schedule","text":"POST /api/<apikey>/schedules Creates a new schedule.","title":"Create schedule&nbsp;"},{"location":"endpoints/schedules/#parameters","text":"Field Type Description Required name String The name of the new schedule. If the name already exists a number will be appended. optional description String The description of the schedule. optional command Object The command to execute when the schedule triggers. required command.address String The address of a light or group ressource required command.method String Must be \"PUT\". required command.body Object The state that the light or group will activate when the schedule triggers required status String Whether the schedule is \"enabled\" or \"disabled\". Default is \"enabled\". optional autodelete Bool If true the schedule will be deleted after triggered. Else it will be disabled. Default is true. optional time String Time when the schedule shall trigger in UTC ISO 8601:2004 format. specific date: \"yyyy-MM-ddThh:mm:ss\" repeated days: \"W[0\u2013127]/Thh:mm:ss\" timer: \"PThh:mm:ss\" recurring timer: \"R[0\u201399]/PThh:mm:ss\" Repeated days use a bitmap to determine on which day of the week the alarm should trigger. The Format is: 0MTWTFSS. Example: 01111100 = 124 is weekdays, 00000011 = 3 is weekend. The number after R of recurring timer determine the number of repetitions of the timer. Not specifying a number means infinity. required","title":"Parameters"},{"location":"endpoints/schedules/#example-request-data","text":"{ \"name\": \"blue moon\", \"description\": \"Turns all lights blue\", \"command\": { \"address\": \"/api/8918fbad2100nag17ca1/groups/5/action\", \"method\": \"PUT\", \"body\": { \"on\": true, \"hue\": 43000, \"sat\": 255 } }, \"time\": \"2013-07-29T09:30:00\" } Note The address in the command object must contain a valid API key.","title":"Example request data"},{"location":"endpoints/schedules/#response","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ];","title":"Response"},{"location":"endpoints/schedules/#response-fields","text":"Field Type Description id String The unique identifier of the new schedule.","title":"Response fields"},{"location":"endpoints/schedules/#possible-errors","text":"400 Bad Request 403 Forbidden","title":"Possible errors"},{"location":"endpoints/schedules/#get-all-schedules","text":"GET /api/<apikey>/schedules Returns a list of all schedules.","title":"Get all schedules&nbsp;"},{"location":"endpoints/schedules/#parameters_1","text":"None","title":"Parameters"},{"location":"endpoints/schedules/#response_1","text":"HTTP/1.1 200 OK Etag: 203941fel3ds8ad61903224 { \"1\": { \"autodelete\": false, \"command\": { \"address\": \"/api/8918fbad2100nag17ca1/groups/2/action\", \"method\": \"PUT\", \"body\": { \"on\": false } }, \"description\": \"Turns all lights off\", \"etag\": \"4e100d1c4e3497154a77bc0865c89030\", \"name\": \"turn all off\", \"status\": \"enabled\", \"time\": \"2013-07-30T20:10:00\" }, \"2\": { \"autodelete\": false, \"command\": { \"address\": \"/api/AD4F14F244/groups/4/scenes/1/recall\", \"body\": {}, \"method\": \"PUT\" }, \"description\": \"\", \"etag\": \"4e100d1c4e3497154a77bc0865c89030\", \"name\": \"call scene\", \"status\": \"enabled\", \"time\": \"W120/T10:00:00\" } }","title":"Response"},{"location":"endpoints/schedules/#response-fields_1","text":"The full schedule object as in Get schedule attributs .","title":"Response fields"},{"location":"endpoints/schedules/#possible-errors_1","text":"403 Forbidden","title":"Possible errors"},{"location":"endpoints/schedules/#get-schedule-attributes","text":"GET /api/<apikey>/schedules/<id> Returns all attributes of a schedule.","title":"Get schedule attributes&nbsp;"},{"location":"endpoints/schedules/#parameters_2","text":"None","title":"Parameters"},{"location":"endpoints/schedules/#response_2","text":"HTTP/1.1 200 OK Etag: 0b32030b31ef30a4446c9adff6a6f9e5 { \"autodelete\": false, \"command\": { \"address\": \"/api/8918fbad2100nag17ca1/groups/2/action\", \"method\": \"PUT\", \"body\": { \"on\": false } }, \"description\": \"Turns all lights off\", \"etag\": \"4e100d1c4e3497154a77bc0865c89030\", \"name\": \"turn all off\", \"status\": \"enabled\", \"time\": \"2013-07-30T20:10:00\" }","title":"Response"},{"location":"endpoints/schedules/#response-fields_2","text":"Field Type Description autodelete Bool If set to true the schedule will be deleted after trigger. Else it will be disabled. command Object The command to execute when the schedule triggers. command.address String The address of a light or group ressource required command.method String Must be \"PUT\". required command.body Object The state that the light or group will activate when the schedule triggers required description String The description of the schedule. etag String The etag of the schedule. name String Name of the schedule. status String The status of the schedule, \"enabled\" or \"disabled\". time String Time when the schedule shall trigger in UTC ISO 8601:2004 format. specific date: \"yyyy-MM-ddThh:mm:ss\" repeated days: \"W[0\u2013127]/Thh:mm:ss\" timer: \"PThh:mm:ss\" recurring timer: \"R[0\u201399]/PThh:mm:ss\" Repeated days use a bitmap to determine on which day of the week the alarm should trigger. The Format is: 0MTWTFSS. Example: 01111100 = 124 is weekdays, 00000011 = 3 is weekend. The number after R of recurring timer determine the number of repetitions of the timer. Not specifying a number means infinity.","title":"Response fields"},{"location":"endpoints/schedules/#possible-errors_2","text":"403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/schedules/#set-schedule-attributes","text":"PUT /api/<apikey>/schedules/<id> Sets attributes of a schedule.","title":"Set schedule attributes &nbsp;"},{"location":"endpoints/schedules/#parameters_3","text":"Field Type Description Required name String The name of the new schedule. If the name already exists a number will be appended. optional description String The description of the schedule. optional command Object The command to execute when the schedule triggers. optional command.address String The address of a light or group ressource optional command.method String Must be \"PUT\". optional command.body Object The state that the light or group will activate when the schedule triggers optional status String Whether the schedule is \"enabled\" or \"disabled\". Default is \"enabled\". optional autodelete Bool If true the schedule will be deleted after triggered. Else it will be disabled. Default is true. optional time String Time when the schedule shall trigger in UTC ISO 8601:2004 format. The time must be in the future. specific date: \"yyyy-MM-ddThh:mm:ss\" repeated days: \"W[0\u2013127]/Thh:mm:ss\" timer: \"PThh:mm:ss\" recurring timer: \"R[0\u201399]/PThh:mm:ss\" Repeated days use a bitmap to determine on which day of the week the alarm should trigger. The Format is: 0MTWTFSS. Example: 01111100 = 124 is weekdays, 00000011 = 3 is weekend. The number after R of recurring timer determine the number of repetitions of the timer. Not specifying a number means infinity. optional","title":"Parameters"},{"location":"endpoints/schedules/#example-request-data_1","text":"{ \"name\": \"working\" }","title":"Example request data"},{"location":"endpoints/schedules/#response_3","text":"HTTP/1.1 200 OK Etag: 030cf8c1c0025420f3a0659afab251f5 [ { \"success\": { \"/schedules/1/name\": \"working\" } } ]","title":"Response"},{"location":"endpoints/schedules/#possible-errors_3","text":"400 Bad Request 403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/schedules/#delete-schedule","text":"DELETE /api/<apikey>/schedules/<id> Deletes a schedule.","title":"Delete schedule&nbsp;"},{"location":"endpoints/schedules/#parameters_4","text":"None","title":"Parameters"},{"location":"endpoints/schedules/#response_4","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"3\" } } ]","title":"Response"},{"location":"endpoints/schedules/#response-fields_3","text":"Field Type Description id String The unique identifier of the schedule.","title":"Response fields"},{"location":"endpoints/schedules/#possible-errors_4","text":"403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/sensors/","text":"Sensors \u00b6 Sensors can be used to measure environment parameters like temperature or to emit events like a button press from a switch. With a coressponding rule they can control lights and groups. Create sensor \u00b6 POST /api/<apikey>/sensors Creates a new CLIP sensor. Parameters \u00b6 Field Type Description Required name String The name of the sensor. required modelid String The model identifier of the sensor. required swversion String The software version of the sensor. required type String The type of the sensor, see Sensor types and states . required uniqueid String The unique id of the sensor. Should be the MAC address of the device. required manufacturername String The manufacturer name of the sensor. required state Object The state of the sensor, see Sensor types and states . optional config Object The config of the sensor. on \u2014 Bool (default: true) reachable \u2014 Bool (default: true) battery \u2014 Number (0\u2013100) optional Example request data \u00b6 { \"config\": { \"on\": true, \"reachable\": true }, \"manufacturername\": \"Me\", \"modelid\": \"T1000\", \"name\": \"My Switch\", \"swversion\": \"1.0\", \"type\": \"CLIPSwitch\", \"uniqueid\": \"00:1f:ee:00:00:00:08:bb-01-1000\" } Response \u00b6 HTTP/1.1 200 OK [ { \"success\": { \"id\": \"1\" } } ] Response fields \u00b6 Field Type Description id String The unique identifier of the new sensor. Possible errors \u00b6 400 Bad Request 403 Forbidden Get all Sensors \u00b6 GET /api/<apikey>/sensors Returns a list of all sensors. If there are no sensors in the system an empty object {} is returned. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK { \"1\": { \"config\": { \"on\": true, \"reachable\": true }, \"ep\": 1, \"etag\": \"61eaee2477fc3d5c27932fefeef638bd\", \"manufacturername\": \"dresden elektronik\", \"modelid\": \"Lighting Switch\", \"name\": \"Lighting Switch 1\", \"state\": { \"lastupdated\": \"2016-07-06T09:39:53\" }, \"swversion\": \"1.0\", \"type\": \"ZHASwitch\", \"uniqueid\": \"00:21:2e:ff:ff:00:a6:bc-01-1000\" }, \"2\": { \"config\": { \"on\": true, \"reachable\": true }, \"ep\": 2, \"etag\": \"61eaee2477fc3d5c27932fefeef638bd\", \"manufacturername\": \"dresden elektronik\", \"modelid\": \"Lighting Switch\", \"name\": \"Lighting Switch 2\", \"state\": { \"lastupdated\": \"2016-07-06T09:39:53\" }, \"swversion\": \"1.0\", \"type\": \"ZHASwitch\", \"uniqueid\": \"00:21:2e:ff:ff:00:a6:bc-02-1000\" } } Response fields \u00b6 The whole sensor object as descripted in Get sensor . Possible errors \u00b6 403 Forbidden Get sensor \u00b6 GET /api/<apikey>/sensors/<id> Returns the sensor with the specified id. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"config\": { \"on\": true, \"reachable\": true }, \"ep\": 1, \"etag\": \"61eaee2477fc3d5c27932fefeef638bd\", \"manufacturername\": \"dresden elektronik\", \"mode\": 2, \"modelid\": \"Lighting Switch\", \"name\": \"Lighting Switch 1\", \"state\": { \"lastupdated\": \"2016-07-06T09:39:53\" }, \"swversion\": \"1.0\", \"type\": \"ZHASwitch\", \"uniqueid\": \"00:21:2e:ff:ff:00:a6:bc-01-1000\" } Response fields \u00b6 Field Type Description config Object The config of the sensor. Refer to Change sensor config for further details. ep Number The Endpoint of the sensor. etag String HTTP etag which changes whenever the sensor changes. manufacturername String The manufacturer name of the sensor. modelid String The model id of the sensor. mode Number The mode of the sensor. 1 = Scenes mode 2 = Two groups mode 3 = Color temperature mode (only available for dresden elektronik Lighting Switch) name String The name of the sensor. state Object The state of the sensor. state.lastupdated ISO 8601 timestamp Timestamp when the sensor was last updated. swversion String Software version of the sensor. type String The type of the sensor. uniqueid String The unique identifiers including the MAC address of the sensor. Possible errors \u00b6 403 Forbidden 404 Not Found Update sensor \u00b6 PUT /api/<apikey>/sensors/<id> Update a sensor with the specified parameters. Parameters \u00b6 Field Type Description Required name String The name of the sensor. optional mode Number Only availabe for dresden elektronik Lighting Switch. Set the mode of the switch. 1 = Scenes mode 2 = Two groups mode 3 = Color temperature mode optional Example request data \u00b6 { \"name\": \"a nice name\" } Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"success\": { \"/sensors/1/name\": \"a nice name\" } } Possible errors \u00b6 400 Bad Request 403 Forbidden Change sensor config \u00b6 PUT /api/<apikey>/sensors/<id>/config Update a sensor config with the specified parameters. Sensors expose certain configuration parameters depending on their defined or known capabilities. To get an overview on which parameters are available for a particular device, get the sensor state of either all Get all sensors or a single sensor Get sensor . Parameters \u00b6 Important: Most attributes can be found in Supported config attributes Field Type Description Required battery Number (1\u2013100) The current battery state in percent, only for battery powered devices. optional on Bool The on/off status of the sensor. optional reachable Bool The reachable status of the sensor. optional Example request data \u00b6 { \"on\": false, \"reachable\": false } Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"success\": { \"/sensors/1/config/on\": false }, \"success\": { \"/sensors/1/config/reachable\": false } } Possible errors \u00b6 400 Bad Request 403 Forbidden Change sensor state \u00b6 PUT /api/<apikey>/sensors/<id>/state Update a sensor state with the specified parameters. Note Changing the sensor state is only allowed for CLIP sensors. Parameters \u00b6 Allowed parameters are listed in CLIP sensors . Example request data \u00b6 { \"flag\": false } Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"success\": { \"/sensors/1/state/flag\": false } } Possible errors \u00b6 400 Bad Request 403 Forbidden Delete sensor \u00b6 DELETE /api/<apikey>/sensors/<id> Delete a sensor. Parameters \u00b6 Field Type Description Required reset Bool If this parameter is omitted, it will implicitly be set to false and the sensor is marked as deleted in the database. If set to true, deCONZ is trying to reset the whole physical device by issuing a leave request. It is required that the device is awake (able to receive commands) or supports this type of request respectively and on success, the device is deleted as a node and reset to factory defaults. optional Response \u00b6 HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [ { \"success\": \"1\" } ] Possible errors \u00b6 400 Bad Request 403 Forbidden 404 Not Found Supported sensor types and states \u00b6 CLIP sensors \u00b6 These are virtual sensors without a real device behind it. CLIP sensors can be created, modified and used in rules. Supported state attributes \u00b6 Sensor type State attribute Type CLIPAlarm alarm Bool CLIPBattery battery Number (uint8) CLIPCarbonMonoxide carbonmonoxide Bool CLIPConsumption consumption Number (uint64) CLIPFire fire Bool CLIPGenericFlag flag Bool CLIPGenericStatus status Int32 CLIPHumidity humidity Uint16 CLIPLightLevel lightlevel Uint16 lux Uint32 dark Bool daylight Bool CLIPOpenClose open Bool CLIPPower power Int16 voltage Uint16 current Uint16 CLIPPresence presence Bool duration Uint16 CLIPPressure pressure Int16 CLIPSwitch buttonevent Uint32 CLIPTemperature temperature Int16 CLIPVibration vibration Bool CLIPWater water Bool Supported config attributes \u00b6 Sensor type Config attribute Type CLIPHumidity offset Int16 CLIPLightLevel tholddark Uint16 tholddarkoffset Uint16 CLIPTemperature offset Int16 Device sensors \u00b6 Supported state attributes \u00b6 Sensor type State attribute Type ZHAAirQuality airquality String Supported values: \"excellent\" \"good\" \"moderate\" \"poor\" \"unhealthy\" \"out of scale\" airqualityppb Uint16 (0\u201365534) ZHAAlarm alarm Bool lastupdated ISO 8601 timestamp lowbattery Bool tampered Bool ZHACarbonMonoxide carbonmonoxide Bool lastupdated ISO 8601 timestamp lowbattery Bool tampered Bool ZHAConsumption consumption Number lastupdated ISO 8601 timestamp power Number ZHAFire fire Bool lastupdated ISO 8601 timestamp lowbattery Bool tampered Bool ZHAHumidity humidity Number lastupdated ISO 8601 timestamp ZHALightLevel lux Number lastupdated ISO 8601 timestamp lightlevel Number dark Bool daylight Bool ZHAOpenClose open Bool lastupdated ISO 8601 timestamp ZHAPower current Number lastupdated ISO 8601 timestamp power Number voltage Number ZHAPresence presence Bool lastupdated ISO 8601 timestamp ZHASwitch buttonevent Refer to Button Events for device specific values. Number lastupdated ISO 8601 timestamp gesture Number eventduration Number x Number y Number angle Number ZHAPressure pressure Number lastupdated ISO 8601 timestamp ZHATemperature temperature Number lastupdated ISO 8601 timestamp ZHATime lastset Time lastupdated ISO 8601 timestamp localtime ISO 8601 timestamp utc Time ZHAThermostat on Bool errorcode Bool fanmode String floortemperature Number heating Bool lastupdated ISO 8601 timestamp mountingmodeactive Bool temperature Number valve Number windowopen String ZHAVibration vibration Bool lastupdated ISO 8601 timestamp orientation Array of 3 Numbers tiltangle Number vibrationstrength Number ZHAWater water Bool lastupdated ISO 8601 timestamp lowbattery Bool tampered Bool Supported config attributes \u00b6 Sensor type Config attribute Type Description Daylight configured Bool True if the daylight sensor is configured with coordinates. R lat Number Latitude of the set location/timezone. W long Number Longitude of the set location/timezone. W sunriseoffset Number (-120\u2013120) Sunrise offset value for location/timezone in minutes. R sunsetoffset Number (-120\u2013120) Sunset offset value for location/timezone in minutes. R ZHALightLevel tholddark Number (0\u201365534) Specifies at which lightlevel the dark attribute turns false. Default: 12000 RW tholdoffset Number (1\u201365534) Relative offset to tholddark . Sets daylight attribute to true when when lightlevel is at or above (tholddark + tholdoffset). Default: 7000 RW ZHAHumidity offset Number (-32768\u201332767) Adds a signed offset value to measured state values. Values send by the REST-API are already amended by the offset. RW ZHAPresence duration Number (0\u201365535) Timeout in seconds presence state is set to false again. RW delay Uint16 (0\u201365535) The occupied to unoccupied delay in seconds. RW ZHATemperature offset Number (-32768\u201332767) Adds a signed offset value to measured state values. Values send by the REST-API are already amended by the offset. R ZHASwitch group Uint16 The associated Zigbee group the sensor controls. (only supported by some sensor) R mode String For ubisys S1/S2, operation mode of the switch. Supported values: \"momentary\" \"rocker\" RW Ubisys J1 (ZHASwitch) window coveringtype Number (0\u20139) Sets the covering type and starts calibration. Supported values: 0 = Roller Shade 1 = Roller Shade two motors 2 = Roller Shade exterior 3 = Roller Shade two motors ext 4 = Drapery 5 = Awning 6 = Shutter 7 = Tilt Blind Lift only 8 = Tilt Blind lift & tilt 9 = Projector Screen RW ZHAThermostat mode String Sets the current operating mode of a thermostat. Supported values: \"off\" \"auto\" \"cool\" \"heat\" \"emergency heating\" \"precooling\" \"fan only\" \"dry\" \"sleep\" (Supported modes are device dependent) RW displayflipped Bool Flip the display for TRVs supporting it. RW fanmode String Sets the mode of the fan. Supported values: \"off\" \"low\" \"medium\" \"high\" \"on\" \"auto\" \"smart\" (device dependent and only exposed for devices supporting it) RW hostflags Uint32 Eurotronic Spirit SPZB 0x0002 \u2014 Display flipped 0x0004 \u2014 Mode heat 0x0010 \u2014 Mode off 0x0080 \u2014 Locked Only for debugging purpose. R locked Bool Child lock active/inactive for thermostats/TRVs supporting it. RW preset String Sets the operating mode for Tuya thermostats. Supported values: \"holiday\" \"auto\" \"manual\" \"comfort\" \"eco\" \"boost\" \"complex\" (supported modes are device dependent) RW setvalve Bool Controls valve of thermostats. false \u2014 Close valve true \u2014 Open valve (exposed for thermostats supporting it) RW swingmode String Sets the AC louvers position. Supported values: \"fully closed\" \"fully open\" \"quarter open\" \"half open\" \"three quarters open\" (exposed for thermostats supporting it) RW temperature measurement String Sets the mode of operation for Elko Super TR thermostat. Supported values: \"air sensor\" \"floor sensor\" \"floor protection\" RW window open_set Bool Sets if window open detection shall be active or inactive for Tuya thermostats. (support is device dependent) RW schedule Array A thermostat schedule. todo: describe RW scheduleon Bool True when a thermostat schedule is enabled. RW coolsetpoint Number (700\u20133500) Set the desired cooling temperature. RW heatsetpoint Number (500\u20133200) Set the desired heating temperature. RW mountingmode Bool Sets a TRV into mounting mode if supported (valve fully open position). RW Various sensors ledindication Bool Lets the sensor indicate itself, usually via LED blinking. Supported for Philips Hue motion sensor. RW pending Uint8 Bitmap of outstanding configuration tasks for a device. A value of \"[]\" indicates no outstanding tasks. todo: describe possibe values R sensitivity Number Device specific sensitivity, with following supported values. Philips Hue motion sensor: 0 = low 1 = medium 2 = high Xiaomi vibration sensor: 21 = low 11 = medium 1 = high RW sensitivitymax Number Device specific maximum sensitivity value. Xiaomi vibration sensor: 21 Philips Hue motion sensor: 2 R usertest Bool Starts the sensor self-test mode. Supported for Philips Hue motion sensor. RW Xiaomi sensors temperature Number (-27315\u201332767) Reported temperature values by devices which are no temperature measuring devices. (presumably device temperature). R","title":"Sensors"},{"location":"endpoints/sensors/#sensors","text":"Sensors can be used to measure environment parameters like temperature or to emit events like a button press from a switch. With a coressponding rule they can control lights and groups.","title":"Sensors"},{"location":"endpoints/sensors/#create-sensor","text":"POST /api/<apikey>/sensors Creates a new CLIP sensor.","title":"Create sensor&nbsp;"},{"location":"endpoints/sensors/#parameters","text":"Field Type Description Required name String The name of the sensor. required modelid String The model identifier of the sensor. required swversion String The software version of the sensor. required type String The type of the sensor, see Sensor types and states . required uniqueid String The unique id of the sensor. Should be the MAC address of the device. required manufacturername String The manufacturer name of the sensor. required state Object The state of the sensor, see Sensor types and states . optional config Object The config of the sensor. on \u2014 Bool (default: true) reachable \u2014 Bool (default: true) battery \u2014 Number (0\u2013100) optional","title":"Parameters"},{"location":"endpoints/sensors/#example-request-data","text":"{ \"config\": { \"on\": true, \"reachable\": true }, \"manufacturername\": \"Me\", \"modelid\": \"T1000\", \"name\": \"My Switch\", \"swversion\": \"1.0\", \"type\": \"CLIPSwitch\", \"uniqueid\": \"00:1f:ee:00:00:00:08:bb-01-1000\" }","title":"Example request data"},{"location":"endpoints/sensors/#response","text":"HTTP/1.1 200 OK [ { \"success\": { \"id\": \"1\" } } ]","title":"Response"},{"location":"endpoints/sensors/#response-fields","text":"Field Type Description id String The unique identifier of the new sensor.","title":"Response fields"},{"location":"endpoints/sensors/#possible-errors","text":"400 Bad Request 403 Forbidden","title":"Possible errors"},{"location":"endpoints/sensors/#get-all-sensors","text":"GET /api/<apikey>/sensors Returns a list of all sensors. If there are no sensors in the system an empty object {} is returned.","title":"Get all Sensors&nbsp;"},{"location":"endpoints/sensors/#parameters_1","text":"None","title":"Parameters"},{"location":"endpoints/sensors/#response_1","text":"HTTP/1.1 200 OK { \"1\": { \"config\": { \"on\": true, \"reachable\": true }, \"ep\": 1, \"etag\": \"61eaee2477fc3d5c27932fefeef638bd\", \"manufacturername\": \"dresden elektronik\", \"modelid\": \"Lighting Switch\", \"name\": \"Lighting Switch 1\", \"state\": { \"lastupdated\": \"2016-07-06T09:39:53\" }, \"swversion\": \"1.0\", \"type\": \"ZHASwitch\", \"uniqueid\": \"00:21:2e:ff:ff:00:a6:bc-01-1000\" }, \"2\": { \"config\": { \"on\": true, \"reachable\": true }, \"ep\": 2, \"etag\": \"61eaee2477fc3d5c27932fefeef638bd\", \"manufacturername\": \"dresden elektronik\", \"modelid\": \"Lighting Switch\", \"name\": \"Lighting Switch 2\", \"state\": { \"lastupdated\": \"2016-07-06T09:39:53\" }, \"swversion\": \"1.0\", \"type\": \"ZHASwitch\", \"uniqueid\": \"00:21:2e:ff:ff:00:a6:bc-02-1000\" } }","title":"Response"},{"location":"endpoints/sensors/#response-fields_1","text":"The whole sensor object as descripted in Get sensor .","title":"Response fields"},{"location":"endpoints/sensors/#possible-errors_1","text":"403 Forbidden","title":"Possible errors"},{"location":"endpoints/sensors/#get-sensor","text":"GET /api/<apikey>/sensors/<id> Returns the sensor with the specified id.","title":"Get sensor&nbsp;"},{"location":"endpoints/sensors/#parameters_2","text":"None","title":"Parameters"},{"location":"endpoints/sensors/#response_2","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"config\": { \"on\": true, \"reachable\": true }, \"ep\": 1, \"etag\": \"61eaee2477fc3d5c27932fefeef638bd\", \"manufacturername\": \"dresden elektronik\", \"mode\": 2, \"modelid\": \"Lighting Switch\", \"name\": \"Lighting Switch 1\", \"state\": { \"lastupdated\": \"2016-07-06T09:39:53\" }, \"swversion\": \"1.0\", \"type\": \"ZHASwitch\", \"uniqueid\": \"00:21:2e:ff:ff:00:a6:bc-01-1000\" }","title":"Response"},{"location":"endpoints/sensors/#response-fields_2","text":"Field Type Description config Object The config of the sensor. Refer to Change sensor config for further details. ep Number The Endpoint of the sensor. etag String HTTP etag which changes whenever the sensor changes. manufacturername String The manufacturer name of the sensor. modelid String The model id of the sensor. mode Number The mode of the sensor. 1 = Scenes mode 2 = Two groups mode 3 = Color temperature mode (only available for dresden elektronik Lighting Switch) name String The name of the sensor. state Object The state of the sensor. state.lastupdated ISO 8601 timestamp Timestamp when the sensor was last updated. swversion String Software version of the sensor. type String The type of the sensor. uniqueid String The unique identifiers including the MAC address of the sensor.","title":"Response fields"},{"location":"endpoints/sensors/#possible-errors_2","text":"403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/sensors/#update-sensor","text":"PUT /api/<apikey>/sensors/<id> Update a sensor with the specified parameters.","title":"Update sensor&nbsp;"},{"location":"endpoints/sensors/#parameters_3","text":"Field Type Description Required name String The name of the sensor. optional mode Number Only availabe for dresden elektronik Lighting Switch. Set the mode of the switch. 1 = Scenes mode 2 = Two groups mode 3 = Color temperature mode optional","title":"Parameters"},{"location":"endpoints/sensors/#example-request-data_1","text":"{ \"name\": \"a nice name\" }","title":"Example request data"},{"location":"endpoints/sensors/#response_3","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"success\": { \"/sensors/1/name\": \"a nice name\" } }","title":"Response"},{"location":"endpoints/sensors/#possible-errors_3","text":"400 Bad Request 403 Forbidden","title":"Possible errors"},{"location":"endpoints/sensors/#change-sensor-config","text":"PUT /api/<apikey>/sensors/<id>/config Update a sensor config with the specified parameters. Sensors expose certain configuration parameters depending on their defined or known capabilities. To get an overview on which parameters are available for a particular device, get the sensor state of either all Get all sensors or a single sensor Get sensor .","title":"Change sensor config&nbsp;"},{"location":"endpoints/sensors/#parameters_4","text":"Important: Most attributes can be found in Supported config attributes Field Type Description Required battery Number (1\u2013100) The current battery state in percent, only for battery powered devices. optional on Bool The on/off status of the sensor. optional reachable Bool The reachable status of the sensor. optional","title":"Parameters"},{"location":"endpoints/sensors/#example-request-data_2","text":"{ \"on\": false, \"reachable\": false }","title":"Example request data"},{"location":"endpoints/sensors/#response_4","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"success\": { \"/sensors/1/config/on\": false }, \"success\": { \"/sensors/1/config/reachable\": false } }","title":"Response"},{"location":"endpoints/sensors/#possible-errors_4","text":"400 Bad Request 403 Forbidden","title":"Possible errors"},{"location":"endpoints/sensors/#change-sensor-state","text":"PUT /api/<apikey>/sensors/<id>/state Update a sensor state with the specified parameters. Note Changing the sensor state is only allowed for CLIP sensors.","title":"Change sensor state&nbsp;"},{"location":"endpoints/sensors/#parameters_5","text":"Allowed parameters are listed in CLIP sensors .","title":"Parameters"},{"location":"endpoints/sensors/#example-request-data_3","text":"{ \"flag\": false }","title":"Example request data"},{"location":"endpoints/sensors/#response_5","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" { \"success\": { \"/sensors/1/state/flag\": false } }","title":"Response"},{"location":"endpoints/sensors/#possible-errors_5","text":"400 Bad Request 403 Forbidden","title":"Possible errors"},{"location":"endpoints/sensors/#delete-sensor","text":"DELETE /api/<apikey>/sensors/<id> Delete a sensor.","title":"Delete sensor&nbsp;"},{"location":"endpoints/sensors/#parameters_6","text":"Field Type Description Required reset Bool If this parameter is omitted, it will implicitly be set to false and the sensor is marked as deleted in the database. If set to true, deCONZ is trying to reset the whole physical device by issuing a leave request. It is required that the device is awake (able to receive commands) or supports this type of request respectively and on success, the device is deleted as a node and reset to factory defaults. optional","title":"Parameters"},{"location":"endpoints/sensors/#response_6","text":"HTTP/1.1 200 OK ETag: \"030cf8c1c0025420f3a0659afab251f5\" [ { \"success\": \"1\" } ]","title":"Response"},{"location":"endpoints/sensors/#possible-errors_6","text":"400 Bad Request 403 Forbidden 404 Not Found","title":"Possible errors"},{"location":"endpoints/sensors/#supported-sensor-types-and-states","text":"","title":"Supported sensor types and states"},{"location":"endpoints/sensors/#clip-sensors","text":"These are virtual sensors without a real device behind it. CLIP sensors can be created, modified and used in rules.","title":"CLIP sensors"},{"location":"endpoints/sensors/#supported-state-attributes","text":"Sensor type State attribute Type CLIPAlarm alarm Bool CLIPBattery battery Number (uint8) CLIPCarbonMonoxide carbonmonoxide Bool CLIPConsumption consumption Number (uint64) CLIPFire fire Bool CLIPGenericFlag flag Bool CLIPGenericStatus status Int32 CLIPHumidity humidity Uint16 CLIPLightLevel lightlevel Uint16 lux Uint32 dark Bool daylight Bool CLIPOpenClose open Bool CLIPPower power Int16 voltage Uint16 current Uint16 CLIPPresence presence Bool duration Uint16 CLIPPressure pressure Int16 CLIPSwitch buttonevent Uint32 CLIPTemperature temperature Int16 CLIPVibration vibration Bool CLIPWater water Bool","title":"Supported state attributes"},{"location":"endpoints/sensors/#supported-config-attributes","text":"Sensor type Config attribute Type CLIPHumidity offset Int16 CLIPLightLevel tholddark Uint16 tholddarkoffset Uint16 CLIPTemperature offset Int16","title":"Supported config attributes"},{"location":"endpoints/sensors/#device-sensors","text":"","title":"Device sensors"},{"location":"endpoints/sensors/#supported-state-attributes_1","text":"Sensor type State attribute Type ZHAAirQuality airquality String Supported values: \"excellent\" \"good\" \"moderate\" \"poor\" \"unhealthy\" \"out of scale\" airqualityppb Uint16 (0\u201365534) ZHAAlarm alarm Bool lastupdated ISO 8601 timestamp lowbattery Bool tampered Bool ZHACarbonMonoxide carbonmonoxide Bool lastupdated ISO 8601 timestamp lowbattery Bool tampered Bool ZHAConsumption consumption Number lastupdated ISO 8601 timestamp power Number ZHAFire fire Bool lastupdated ISO 8601 timestamp lowbattery Bool tampered Bool ZHAHumidity humidity Number lastupdated ISO 8601 timestamp ZHALightLevel lux Number lastupdated ISO 8601 timestamp lightlevel Number dark Bool daylight Bool ZHAOpenClose open Bool lastupdated ISO 8601 timestamp ZHAPower current Number lastupdated ISO 8601 timestamp power Number voltage Number ZHAPresence presence Bool lastupdated ISO 8601 timestamp ZHASwitch buttonevent Refer to Button Events for device specific values. Number lastupdated ISO 8601 timestamp gesture Number eventduration Number x Number y Number angle Number ZHAPressure pressure Number lastupdated ISO 8601 timestamp ZHATemperature temperature Number lastupdated ISO 8601 timestamp ZHATime lastset Time lastupdated ISO 8601 timestamp localtime ISO 8601 timestamp utc Time ZHAThermostat on Bool errorcode Bool fanmode String floortemperature Number heating Bool lastupdated ISO 8601 timestamp mountingmodeactive Bool temperature Number valve Number windowopen String ZHAVibration vibration Bool lastupdated ISO 8601 timestamp orientation Array of 3 Numbers tiltangle Number vibrationstrength Number ZHAWater water Bool lastupdated ISO 8601 timestamp lowbattery Bool tampered Bool","title":"Supported state attributes"},{"location":"endpoints/sensors/#supported-config-attributes_1","text":"Sensor type Config attribute Type Description Daylight configured Bool True if the daylight sensor is configured with coordinates. R lat Number Latitude of the set location/timezone. W long Number Longitude of the set location/timezone. W sunriseoffset Number (-120\u2013120) Sunrise offset value for location/timezone in minutes. R sunsetoffset Number (-120\u2013120) Sunset offset value for location/timezone in minutes. R ZHALightLevel tholddark Number (0\u201365534) Specifies at which lightlevel the dark attribute turns false. Default: 12000 RW tholdoffset Number (1\u201365534) Relative offset to tholddark . Sets daylight attribute to true when when lightlevel is at or above (tholddark + tholdoffset). Default: 7000 RW ZHAHumidity offset Number (-32768\u201332767) Adds a signed offset value to measured state values. Values send by the REST-API are already amended by the offset. RW ZHAPresence duration Number (0\u201365535) Timeout in seconds presence state is set to false again. RW delay Uint16 (0\u201365535) The occupied to unoccupied delay in seconds. RW ZHATemperature offset Number (-32768\u201332767) Adds a signed offset value to measured state values. Values send by the REST-API are already amended by the offset. R ZHASwitch group Uint16 The associated Zigbee group the sensor controls. (only supported by some sensor) R mode String For ubisys S1/S2, operation mode of the switch. Supported values: \"momentary\" \"rocker\" RW Ubisys J1 (ZHASwitch) window coveringtype Number (0\u20139) Sets the covering type and starts calibration. Supported values: 0 = Roller Shade 1 = Roller Shade two motors 2 = Roller Shade exterior 3 = Roller Shade two motors ext 4 = Drapery 5 = Awning 6 = Shutter 7 = Tilt Blind Lift only 8 = Tilt Blind lift & tilt 9 = Projector Screen RW ZHAThermostat mode String Sets the current operating mode of a thermostat. Supported values: \"off\" \"auto\" \"cool\" \"heat\" \"emergency heating\" \"precooling\" \"fan only\" \"dry\" \"sleep\" (Supported modes are device dependent) RW displayflipped Bool Flip the display for TRVs supporting it. RW fanmode String Sets the mode of the fan. Supported values: \"off\" \"low\" \"medium\" \"high\" \"on\" \"auto\" \"smart\" (device dependent and only exposed for devices supporting it) RW hostflags Uint32 Eurotronic Spirit SPZB 0x0002 \u2014 Display flipped 0x0004 \u2014 Mode heat 0x0010 \u2014 Mode off 0x0080 \u2014 Locked Only for debugging purpose. R locked Bool Child lock active/inactive for thermostats/TRVs supporting it. RW preset String Sets the operating mode for Tuya thermostats. Supported values: \"holiday\" \"auto\" \"manual\" \"comfort\" \"eco\" \"boost\" \"complex\" (supported modes are device dependent) RW setvalve Bool Controls valve of thermostats. false \u2014 Close valve true \u2014 Open valve (exposed for thermostats supporting it) RW swingmode String Sets the AC louvers position. Supported values: \"fully closed\" \"fully open\" \"quarter open\" \"half open\" \"three quarters open\" (exposed for thermostats supporting it) RW temperature measurement String Sets the mode of operation for Elko Super TR thermostat. Supported values: \"air sensor\" \"floor sensor\" \"floor protection\" RW window open_set Bool Sets if window open detection shall be active or inactive for Tuya thermostats. (support is device dependent) RW schedule Array A thermostat schedule. todo: describe RW scheduleon Bool True when a thermostat schedule is enabled. RW coolsetpoint Number (700\u20133500) Set the desired cooling temperature. RW heatsetpoint Number (500\u20133200) Set the desired heating temperature. RW mountingmode Bool Sets a TRV into mounting mode if supported (valve fully open position). RW Various sensors ledindication Bool Lets the sensor indicate itself, usually via LED blinking. Supported for Philips Hue motion sensor. RW pending Uint8 Bitmap of outstanding configuration tasks for a device. A value of \"[]\" indicates no outstanding tasks. todo: describe possibe values R sensitivity Number Device specific sensitivity, with following supported values. Philips Hue motion sensor: 0 = low 1 = medium 2 = high Xiaomi vibration sensor: 21 = low 11 = medium 1 = high RW sensitivitymax Number Device specific maximum sensitivity value. Xiaomi vibration sensor: 21 Philips Hue motion sensor: 2 R usertest Bool Starts the sensor self-test mode. Supported for Philips Hue motion sensor. RW Xiaomi sensors temperature Number (-27315\u201332767) Reported temperature values by devices which are no temperature measuring devices. (presumably device temperature). R","title":"Supported config attributes"},{"location":"endpoints/sensors/button_events/","text":"Button Events \u00b6 This page was auto generated from button_maps.json The following sections enumerate supported values for state.buttonevent for /sensors of type ZHASwitch. dresden elektronik Lighting Switch \u00b6 Model identifiers \"Lighting Switch\" Value Action Button 1002 Short release Top left button 1001 Hold Top left button 1003 Long release Top left button 2002 Short release Bottom left button 2001 Hold Bottom left button 2003 Long release Bottom left button 3002 Short release Top right button 3001 Hold Top right button 3003 Long release Top right button 4002 Short release Bottom right button 4001 Hold Bottom right button 4003 Long release Bottom right button dresden elektronik Scene Switch \u00b6 Model identifiers \"Scene Switch\" Value Action Button 1002 Short release Top left button 1001 Hold Top left button 1003 Long release Top left button 2002 Short release Bottom left button 2001 Hold Bottom left button 2003 Long release Bottom left button 3002 Short release Scene 1 button 4002 Short release Scene 2 button 5002 Short release Scene 3 button 6002 Short release Scene 4 button GIRA / JUNG Switches and remotes \u00b6 Model identifiers \"HS_4f_GJ_1\" \"WS_4f_J_1\" \"WS_3f_G_1\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 4002 Short release Button 4 5002 Short release Button 5 6002 Short release Button 6 7002 Short release Button 7 8002 Short release Button 8 IKEA TR\u00c5DFRI on/off switch \u00b6 Model identifiers \"TRADFRI on/off switch\" \"TRADFRI SHORTCUT Button\" Value Action Button 1002 Short release On button 1001 Hold On button 1003 Long release On button 2002 Short release Off button 2001 Hold Off button 2003 Long release Off button IKEA TR\u00c5DFRI open/close remote \u00b6 Model identifiers \"TRADFRI open/close remote\" Value Action Button 1002 Short release Open button 1003 Long release Open button 2002 Short release Close button 2003 Long release Close button IKEA TR\u00c5DFRI round 5 button remote \u00b6 Model identifiers \"TRADFRI remote control\" Value Action Button 1002 Short release Large middle button 1001 Hold Large middle button 2002 Short release Top dimm up button 2001 Hold Top dimm up button 2003 Long release Top dimm up button 3002 Short release Bottom dimm down button 3001 Hold Bottom dimm down button 3003 Long release Bottom dimm down button 4002 Short release Left arrow button 4001 Hold Left arrow button 4003 Long release Left arrow button 5002 Short release Right arrow button 5001 Hold Right arrow button 5003 Long release Right arrow button OSRAM Lightify Switch Mini \u00b6 Model identifiers \"Lightify Switch Mini\" Value Action Button 1002 Short release Up button 1001 Hold Up button 1003 Long release Up button 3002 Short release Middle button 3001 Hold Middle button 3003 Long release Middle button 2002 Short release Down button 2001 Hold Down button 2003 Long release Down button OSRAM Lightify 4 button remote (1) \u00b6 Model identifiers \"Switch 4x EU-LIGHTIFY\" \"Switch 4x-LIGHTIFY\" Value Action Button 1002 Short release Top left button 1001 Hold Top left button 1003 Long release Top left button 2002 Short release Top right button 2001 Hold Top right button 2003 Long release Top right button 3002 Short release Bottom left button 3001 Hold Bottom left button 3003 Long release Bottom left button 4002 Short release Bottom right button 4001 Hold Bottom right button 4003 Long release Bottom right button OSRAM Lightify 4 button remote (2) \u00b6 Model identifiers \"Switch-LIGHTIFY\" Value Action Button 1002 Short release Top left button 1001 Hold Top left button 1003 Long release Top left button 2002 Short release Top right button 2001 Hold Top right button 2003 Long release Top right button 3002 Short release Bottom left button 3001 Hold Bottom left button 3003 Long release Bottom left button 4002 Short release Bottom right button 4001 Hold Bottom right button 4003 Long release Bottom right button IKEA TR\u00c5DFRI dimmer \u00b6 Model identifiers \"TRADFRI wireless dimmer\" Value Action Button 1002 Short release Rotate full brightness 2002 Short release Rotate clockwise 3002 Short release Rotate counter clockwise 4002 Short release Rotate to off IKEA TR\u00c5DFRI motion sensor \u00b6 Model identifiers \"TRADFRI motion sensor\" Value Action Button 1002 Short release Motion IKEA SYMFONISK remote \u00b6 Model identifiers \"SYMFONISK Sound Controller\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1005 Treeble press Button 1 2001 Hold Rotate clockwise 2003 Long release Rotate clockwise 2002 Short release Rotate clockwise 3001 Hold Rotate counter clockwise 3003 Long release Rotate counter clockwise 3002 Short release Rotate counter clockwise Busch-Jaeger Switches \u00b6 Model identifiers \"RB01\" \"RM01\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 5001 Hold Button 5 5003 Long release Button 5 6002 Short release Button 6 6001 Hold Button 6 6003 Long release Button 6 7002 Short release Button 7 7001 Hold Button 7 7003 Long release Button 7 8002 Short release Button 8 8001 Hold Button 8 8003 Long release Button 8 Trust ZYCT-202 remote \u00b6 Model identifiers \"ZYCT-202\" \"ZLL-NonColorController\" Value Action Button 1002 Short release Button 1 2001 Hold Button 2 2003 Long release Button 2 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 Xiaomi QBKG11LM switch \u00b6 Model identifiers \"lumi.ctrl_ln1.aq1\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 Xiaomi QBKG12LM switch \u00b6 Model identifiers \"lumi.ctrl_ln2.aq1\" Value Action Button 1002 Short release Left button 1004 Double press Left button 2002 Short release Right button 2004 Double press Right button 3002 Short release Both buttons Xiaomi WXKG03LM 2018 remote \u00b6 Model identifiers \"lumi.remote.b186acn01\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1001 Hold Button 1 Xiaomi WXKG12LM remote \u00b6 Model identifiers \"lumi.sensor_switch.aq3\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1001 Hold Button 1 1003 Long release Button 1 1007 Shake Button 1 Xiaomi WXKG11LM 2018 remote \u00b6 Model identifiers \"lumi.remote.b1acn01\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1001 Hold Button 1 1003 Long release Button 1 Xiaomi WXKG11LM 2016 remote \u00b6 Model identifiers \"lumi.sensor_switch.aq2\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1005 Treeble press Button 1 1006 Quadruple press Button 1 Xiaomi WXKG01LM remote \u00b6 Model identifiers \"lumi.sensor_switch\" Value Action Button 1000 Initial press Button 1 1002 Short release Button 1 1003 Long release Button 1 1004 Double press Button 1 1005 Treeble press Button 1 1006 Quadruple press Button 1 1010 Many press Button 1 Xiaomi Vibration sensor (not implemented) \u00b6 Model identifiers \"lumi.vibration\" Value Action Button 1007 Shake Button 1 1009 Tilt Button 1 1008 Drop Button 1 Ubisys Universal dimmer D1 and power switch S1 \u00b6 Model identifiers \"D1\" \"S1\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 Ubisys Control unit C4 \u00b6 Model identifiers \"C4\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 Ubisys Power switch S2 \u00b6 Model identifiers \"S2\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 Lutron LZL4BWHL remote \u00b6 Model identifiers \"LZL4BWHL\" Value Action Button 1002 Short release Button 1 2001 Hold Button 2 2003 Long release Button 2 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 Lutron Z3-1BRL remote \u00b6 Model identifiers \"Z3-1BRL\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 Innr RC 110 remote \u00b6 Model identifiers \"RC 110\" Value Action Button 1002 Short release Button 1 2001 Hold Button 2 2002 Short release Button 2 2003 Long release Button 2 3001 Hold Button 3 3002 Short release Button 3 3003 Long release Button 3 4002 Short release Button 4 5002 Short release Button 5 6002 Short release Button 6 7002 Short release Button 7 8002 Short release Button 8 9002 Short release Button 9 10002 Short release Button 10 11001 Hold Button 11 11002 Short release Button 11 11003 Long release Button 11 12001 Hold Button 12 12002 Short release Button 12 12003 Long release Button 12 13002 Short release Button 13 14001 Hold Button 14 14002 Short release Button 14 14003 Long release Button 14 15001 Hold Button 15 15002 Short release Button 15 15003 Long release Button 15 16002 Short release Button 16 17001 Hold Button 17 17002 Short release Button 17 17003 Long release Button 17 18001 Hold Button 18 18002 Short release Button 18 18003 Long release Button 18 19002 Short release Button 19 20001 Hold Button 20 20002 Short release Button 20 20003 Long release Button 20 21001 Hold Button 21 21002 Short release Button 21 21003 Long release Button 21 22002 Short release Button 22 23001 Hold Button 23 23002 Short release Button 23 23003 Long release Button 23 24001 Hold Button 24 24002 Short release Button 24 24003 Long release Button 24 25002 Short release Button 25 26001 Hold Button 26 26002 Short release Button 26 26003 Long release Button 26 27001 Hold Button 27 27002 Short release Button 27 27003 Long release Button 27 iCasa ICZB-KPD12 remote \u00b6 Model identifiers \"ICZB-KPD12\" Value Action Button 1002 Short release Off button 1001 Hold Off button 1003 Long release Off button 2002 Short release On button 2001 Hold On button 2003 Long release On button iCasa ICZB-KPD14S remote \u00b6 Model identifiers \"ICZB-KPD14S\" Value Action Button 1002 Short release Off button 1001 Hold Off button 1003 Long release Off button 2002 Short release On button 2001 Hold On button 2003 Long release On button 3002 Short release S1 button 3003 Long release S1 button 4002 Short release S2 button 4003 Long release S2 button iCasa ICZB-KPD18S remote \u00b6 Model identifiers \"ICZB-KPD18S\" Value Action Button 1002 Short release Off button 1001 Hold Off button 1003 Long release Off button 2002 Short release On button 2001 Hold On button 2003 Long release On button 3002 Short release S1 button 3003 Long release S1 button 4002 Short release S2 button 4003 Long release S2 button 5002 Short release S3 button 5003 Long release S3 button 6002 Short release S4 button 6003 Long release S4 button 7002 Short release S5 button 7003 Long release S5 button 8002 Short release S6 button 8003 Long release S6 button iCasa Remotes \u00b6 Model identifiers \"ICZB-RM\" \"ZGRC-KEY-012\" \"ZGRC-KEY-013\" \"RGBgenie ZB-5001\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 9002 Short release Button 9 10002 Short release Button 10 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 5001 Hold Button 5 5003 Long release Button 5 6002 Short release Button 6 6001 Hold Button 6 6003 Long release Button 6 7002 Short release Button 7 7001 Hold Button 7 7003 Long release Button 7 8002 Short release Button 8 8001 Hold Button 8 8003 Long release Button 8 Samjin Remote \u00b6 Model identifiers \"button\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1001 Hold Button 1 Sunricher CCT remote \u00b6 Model identifiers Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 RGBgenie Micro remote ZB-5121 \u00b6 Model identifiers \"RGBgenie ZB-5121\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 5003 Long release Button 5 Sunricher Remotes \u00b6 Model identifiers \"ED-1001\" \"ZG2833K\" \"ZG2835\" \"45127\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 5001 Hold Button 5 5003 Long release Button 5 6002 Short release Button 6 6001 Hold Button 6 6003 Long release Button 6 7002 Short release Button 7 7001 Hold Button 7 7003 Long release Button 7 8002 Short release Button 8 8001 Hold Button 8 8003 Long release Button 8 Tuya 3-gang remote \u00b6 Model identifiers \"_TZ3000_bi6lpsew\" \"_TZ3400_keyjhapk\" \"_TYZB02_key8kk7r\" \"_TZ3400_keyjqthh\" \"_TZ3400_key8kk7r\" \"_TZ3000_vp6clf9d\" \"_TYZB02_keyjqthh\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1003 Long release Button 1 2002 Short release Button 2 2004 Double press Button 2 2003 Long release Button 2 3002 Short release Button 3 3004 Double press Button 3 3003 Long release Button 3 4002 Short release Button 4 4004 Double press Button 4 4003 Long release Button 4 Legrand Remote switch \u00b6 Model identifiers \"Remote switch\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 1001 Hold Button 1 1003 Long release Button 1 2001 Hold Button 2 2003 Long release Button 2 Legrand Double remote switch \u00b6 Model identifiers \"Double gangs remote switch\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 1001 Hold Button 1 1003 Long release Button 1 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 4002 Short release Button 4 3001 Hold Button 3 3003 Long release Button 3 4001 Hold Button 4 4003 Long release Button 4 Xiaomi Aqara Opple switches \u00b6 Model identifiers \"lumi.remote.b286opcn01\" \"lumi.remote.b486opcn01\" \"lumi.remote.b686opcn01\" Value Action Button 1001 Hold Button 1 1002 Short release Button 1 1004 Double press Button 1 1005 Treeble press Button 1 1003 Long release Button 1 2001 Hold Button 2 2002 Short release Button 2 2004 Double press Button 2 2005 Treeble press Button 2 2003 Long release Button 2 3001 Hold Button 3 3002 Short release Button 3 3004 Double press Button 3 3005 Treeble press Button 3 3003 Long release Button 3 4001 Hold Button 4 4002 Short release Button 4 4004 Double press Button 4 4005 Treeble press Button 4 4003 Long release Button 4 5001 Hold Button 5 5002 Short release Button 5 5004 Double press Button 5 5005 Treeble press Button 5 5003 Long release Button 5 6001 Hold Button 6 6002 Short release Button 6 6004 Double press Button 6 6005 Treeble press Button 6 6003 Long release Button 6 Legrand Shutter switch remote \u00b6 Model identifiers \"Shutters central remote switch\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 3003 Long release Button 3 Legrand Remote toggle switch \u00b6 Model identifiers \"Remote toggle switch\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 Legrand Remote motion sensor \u00b6 Model identifiers \"Remote motion sensor\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 Bitron 4 button remote 902010/23 \u00b6 Model identifiers \"902010/23\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 4002 Short release Button 4 Heiman Smart controller HS1RC-M and HS1RC-E \u00b6 Model identifiers \"RC_V14\" \"RC-EM\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 4002 Short release Button 4 Tint Remote \u00b6 Model identifiers \"ZBT-Remote-ALL-RGBW\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 5002 Short release Button 5 6002 Short release Button 6 7002 Short release Button 7 8002 Short release Button 8 9002 Short release Button 9 10002 Short release Button 10 11002 Short release Button 11 12002 Short release Button 12 Sage Door bell \u00b6 Model identifiers \"Bell\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3001 Hold Button 3 3003 Long release Button 3 Sonoff Switch SNZB-01 \u00b6 Model identifiers \"WB01\" Value Action Button 1004 Double press Button 1 1003 Long release Button 1 1002 Short release Button 1 YPHIX RGB wall switch \u00b6 Model identifiers \"ZGRC-KEY-009\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 5001 Hold Button 5 5003 Long release Button 5 6002 Short release Button 6 6001 Hold Button 6 6003 Long release Button 6 7002 Short release Button 7 8002 Short release Button 8 YPHIX K2 wall switch \u00b6 Model identifiers \"ZGRC-KEY-007\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 1001 Hold Button 1 1003 Long release Button 1 2001 Hold Button 2 2003 Long release Button 2 EcoSmart/LDS 4 button CCT switch \u00b6 Model identifiers \"ZBT-CCTSwitch-D0001\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 Linkind 1 button remote ZS232000178 \u00b6 Model identifiers \"ZBT-DIMSwitch-D0001\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 1001 Hold Button 1 1003 Long release Button 1 2001 Hold Button 2 2003 Long release Button 2 Iluminize 4 button CCT touch remote \u00b6 Model identifiers \"ZGRC-TEUR-003\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 4002 Short release Button 4 3001 Hold Button 3 3003 Long release Button 3 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 6002 Short release Button 6 6003 Long release Button 6 7002 Short release Button 7 8002 Short release Button 8 9002 Short release Button 9 10002 Short release Button 10 9001 Hold Button 9 9003 Long release Button 9 10001 Hold Button 10 10003 Long release Button 10 11002 Short release Button 11 12002 Short release Button 12 12003 Long release Button 12 13002 Short release Button 13 14002 Short release Button 14 15002 Short release Button 15 16002 Short release Button 16 15001 Hold Button 15 15003 Long release Button 15 16001 Hold Button 16 16003 Long release Button 16 17002 Short release Button 17 18002 Short release Button 18 18003 Long release Button 18 19002 Short release Button 19 20002 Short release Button 20 21002 Short release Button 21 22002 Short release Button 22 21001 Hold Button 21 21003 Long release Button 21 22001 Hold Button 22 22003 Long release Button 22 23002 Short release Button 23 24002 Short release Button 24 24003 Long release Button 24 LIDL Livarno Lux LIDL / Livarno Lux Remote Control (_TYZB01_bngwdjsr) \u00b6 Model identifiers \"HG06323\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1005 Treeble press Button 1 1006 Quadruple press Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4","title":"Button Events"},{"location":"endpoints/sensors/button_events/#button-events","text":"This page was auto generated from button_maps.json The following sections enumerate supported values for state.buttonevent for /sensors of type ZHASwitch.","title":"Button Events"},{"location":"endpoints/sensors/button_events/#dresden-elektronik-lighting-switch","text":"Model identifiers \"Lighting Switch\" Value Action Button 1002 Short release Top left button 1001 Hold Top left button 1003 Long release Top left button 2002 Short release Bottom left button 2001 Hold Bottom left button 2003 Long release Bottom left button 3002 Short release Top right button 3001 Hold Top right button 3003 Long release Top right button 4002 Short release Bottom right button 4001 Hold Bottom right button 4003 Long release Bottom right button","title":"dresden elektronik Lighting Switch"},{"location":"endpoints/sensors/button_events/#dresden-elektronik-scene-switch","text":"Model identifiers \"Scene Switch\" Value Action Button 1002 Short release Top left button 1001 Hold Top left button 1003 Long release Top left button 2002 Short release Bottom left button 2001 Hold Bottom left button 2003 Long release Bottom left button 3002 Short release Scene 1 button 4002 Short release Scene 2 button 5002 Short release Scene 3 button 6002 Short release Scene 4 button","title":"dresden elektronik Scene Switch"},{"location":"endpoints/sensors/button_events/#gira-jung-switches-and-remotes","text":"Model identifiers \"HS_4f_GJ_1\" \"WS_4f_J_1\" \"WS_3f_G_1\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 4002 Short release Button 4 5002 Short release Button 5 6002 Short release Button 6 7002 Short release Button 7 8002 Short release Button 8","title":"GIRA / JUNG Switches and remotes"},{"location":"endpoints/sensors/button_events/#ikea-tradfri-onoff-switch","text":"Model identifiers \"TRADFRI on/off switch\" \"TRADFRI SHORTCUT Button\" Value Action Button 1002 Short release On button 1001 Hold On button 1003 Long release On button 2002 Short release Off button 2001 Hold Off button 2003 Long release Off button","title":"IKEA TR\u00c5DFRI on/off switch"},{"location":"endpoints/sensors/button_events/#ikea-tradfri-openclose-remote","text":"Model identifiers \"TRADFRI open/close remote\" Value Action Button 1002 Short release Open button 1003 Long release Open button 2002 Short release Close button 2003 Long release Close button","title":"IKEA TR\u00c5DFRI open/close remote"},{"location":"endpoints/sensors/button_events/#ikea-tradfri-round-5-button-remote","text":"Model identifiers \"TRADFRI remote control\" Value Action Button 1002 Short release Large middle button 1001 Hold Large middle button 2002 Short release Top dimm up button 2001 Hold Top dimm up button 2003 Long release Top dimm up button 3002 Short release Bottom dimm down button 3001 Hold Bottom dimm down button 3003 Long release Bottom dimm down button 4002 Short release Left arrow button 4001 Hold Left arrow button 4003 Long release Left arrow button 5002 Short release Right arrow button 5001 Hold Right arrow button 5003 Long release Right arrow button","title":"IKEA TR\u00c5DFRI round 5 button remote"},{"location":"endpoints/sensors/button_events/#osram-lightify-switch-mini","text":"Model identifiers \"Lightify Switch Mini\" Value Action Button 1002 Short release Up button 1001 Hold Up button 1003 Long release Up button 3002 Short release Middle button 3001 Hold Middle button 3003 Long release Middle button 2002 Short release Down button 2001 Hold Down button 2003 Long release Down button","title":"OSRAM Lightify Switch Mini"},{"location":"endpoints/sensors/button_events/#osram-lightify-4-button-remote-1","text":"Model identifiers \"Switch 4x EU-LIGHTIFY\" \"Switch 4x-LIGHTIFY\" Value Action Button 1002 Short release Top left button 1001 Hold Top left button 1003 Long release Top left button 2002 Short release Top right button 2001 Hold Top right button 2003 Long release Top right button 3002 Short release Bottom left button 3001 Hold Bottom left button 3003 Long release Bottom left button 4002 Short release Bottom right button 4001 Hold Bottom right button 4003 Long release Bottom right button","title":"OSRAM Lightify 4 button remote (1)"},{"location":"endpoints/sensors/button_events/#osram-lightify-4-button-remote-2","text":"Model identifiers \"Switch-LIGHTIFY\" Value Action Button 1002 Short release Top left button 1001 Hold Top left button 1003 Long release Top left button 2002 Short release Top right button 2001 Hold Top right button 2003 Long release Top right button 3002 Short release Bottom left button 3001 Hold Bottom left button 3003 Long release Bottom left button 4002 Short release Bottom right button 4001 Hold Bottom right button 4003 Long release Bottom right button","title":"OSRAM Lightify 4 button remote (2)"},{"location":"endpoints/sensors/button_events/#ikea-tradfri-dimmer","text":"Model identifiers \"TRADFRI wireless dimmer\" Value Action Button 1002 Short release Rotate full brightness 2002 Short release Rotate clockwise 3002 Short release Rotate counter clockwise 4002 Short release Rotate to off","title":"IKEA TR\u00c5DFRI dimmer"},{"location":"endpoints/sensors/button_events/#ikea-tradfri-motion-sensor","text":"Model identifiers \"TRADFRI motion sensor\" Value Action Button 1002 Short release Motion","title":"IKEA TR\u00c5DFRI motion sensor"},{"location":"endpoints/sensors/button_events/#ikea-symfonisk-remote","text":"Model identifiers \"SYMFONISK Sound Controller\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1005 Treeble press Button 1 2001 Hold Rotate clockwise 2003 Long release Rotate clockwise 2002 Short release Rotate clockwise 3001 Hold Rotate counter clockwise 3003 Long release Rotate counter clockwise 3002 Short release Rotate counter clockwise","title":"IKEA SYMFONISK remote"},{"location":"endpoints/sensors/button_events/#busch-jaeger-switches","text":"Model identifiers \"RB01\" \"RM01\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 5001 Hold Button 5 5003 Long release Button 5 6002 Short release Button 6 6001 Hold Button 6 6003 Long release Button 6 7002 Short release Button 7 7001 Hold Button 7 7003 Long release Button 7 8002 Short release Button 8 8001 Hold Button 8 8003 Long release Button 8","title":"Busch-Jaeger Switches"},{"location":"endpoints/sensors/button_events/#trust-zyct-202-remote","text":"Model identifiers \"ZYCT-202\" \"ZLL-NonColorController\" Value Action Button 1002 Short release Button 1 2001 Hold Button 2 2003 Long release Button 2 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4","title":"Trust ZYCT-202 remote"},{"location":"endpoints/sensors/button_events/#xiaomi-qbkg11lm-switch","text":"Model identifiers \"lumi.ctrl_ln1.aq1\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1","title":"Xiaomi QBKG11LM switch"},{"location":"endpoints/sensors/button_events/#xiaomi-qbkg12lm-switch","text":"Model identifiers \"lumi.ctrl_ln2.aq1\" Value Action Button 1002 Short release Left button 1004 Double press Left button 2002 Short release Right button 2004 Double press Right button 3002 Short release Both buttons","title":"Xiaomi QBKG12LM switch"},{"location":"endpoints/sensors/button_events/#xiaomi-wxkg03lm-2018-remote","text":"Model identifiers \"lumi.remote.b186acn01\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1001 Hold Button 1","title":"Xiaomi WXKG03LM 2018 remote"},{"location":"endpoints/sensors/button_events/#xiaomi-wxkg12lm-remote","text":"Model identifiers \"lumi.sensor_switch.aq3\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1001 Hold Button 1 1003 Long release Button 1 1007 Shake Button 1","title":"Xiaomi WXKG12LM remote"},{"location":"endpoints/sensors/button_events/#xiaomi-wxkg11lm-2018-remote","text":"Model identifiers \"lumi.remote.b1acn01\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1001 Hold Button 1 1003 Long release Button 1","title":"Xiaomi WXKG11LM 2018 remote"},{"location":"endpoints/sensors/button_events/#xiaomi-wxkg11lm-2016-remote","text":"Model identifiers \"lumi.sensor_switch.aq2\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1005 Treeble press Button 1 1006 Quadruple press Button 1","title":"Xiaomi WXKG11LM 2016 remote"},{"location":"endpoints/sensors/button_events/#xiaomi-wxkg01lm-remote","text":"Model identifiers \"lumi.sensor_switch\" Value Action Button 1000 Initial press Button 1 1002 Short release Button 1 1003 Long release Button 1 1004 Double press Button 1 1005 Treeble press Button 1 1006 Quadruple press Button 1 1010 Many press Button 1","title":"Xiaomi WXKG01LM remote"},{"location":"endpoints/sensors/button_events/#xiaomi-vibration-sensor-not-implemented","text":"Model identifiers \"lumi.vibration\" Value Action Button 1007 Shake Button 1 1009 Tilt Button 1 1008 Drop Button 1","title":"Xiaomi Vibration sensor (not implemented)"},{"location":"endpoints/sensors/button_events/#ubisys-universal-dimmer-d1-and-power-switch-s1","text":"Model identifiers \"D1\" \"S1\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2","title":"Ubisys Universal dimmer D1 and power switch S1"},{"location":"endpoints/sensors/button_events/#ubisys-control-unit-c4","text":"Model identifiers \"C4\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4","title":"Ubisys Control unit C4"},{"location":"endpoints/sensors/button_events/#ubisys-power-switch-s2","text":"Model identifiers \"S2\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2","title":"Ubisys Power switch S2"},{"location":"endpoints/sensors/button_events/#lutron-lzl4bwhl-remote","text":"Model identifiers \"LZL4BWHL\" Value Action Button 1002 Short release Button 1 2001 Hold Button 2 2003 Long release Button 2 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4","title":"Lutron LZL4BWHL remote"},{"location":"endpoints/sensors/button_events/#lutron-z3-1brl-remote","text":"Model identifiers \"Z3-1BRL\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3","title":"Lutron Z3-1BRL remote"},{"location":"endpoints/sensors/button_events/#innr-rc-110-remote","text":"Model identifiers \"RC 110\" Value Action Button 1002 Short release Button 1 2001 Hold Button 2 2002 Short release Button 2 2003 Long release Button 2 3001 Hold Button 3 3002 Short release Button 3 3003 Long release Button 3 4002 Short release Button 4 5002 Short release Button 5 6002 Short release Button 6 7002 Short release Button 7 8002 Short release Button 8 9002 Short release Button 9 10002 Short release Button 10 11001 Hold Button 11 11002 Short release Button 11 11003 Long release Button 11 12001 Hold Button 12 12002 Short release Button 12 12003 Long release Button 12 13002 Short release Button 13 14001 Hold Button 14 14002 Short release Button 14 14003 Long release Button 14 15001 Hold Button 15 15002 Short release Button 15 15003 Long release Button 15 16002 Short release Button 16 17001 Hold Button 17 17002 Short release Button 17 17003 Long release Button 17 18001 Hold Button 18 18002 Short release Button 18 18003 Long release Button 18 19002 Short release Button 19 20001 Hold Button 20 20002 Short release Button 20 20003 Long release Button 20 21001 Hold Button 21 21002 Short release Button 21 21003 Long release Button 21 22002 Short release Button 22 23001 Hold Button 23 23002 Short release Button 23 23003 Long release Button 23 24001 Hold Button 24 24002 Short release Button 24 24003 Long release Button 24 25002 Short release Button 25 26001 Hold Button 26 26002 Short release Button 26 26003 Long release Button 26 27001 Hold Button 27 27002 Short release Button 27 27003 Long release Button 27","title":"Innr RC 110 remote"},{"location":"endpoints/sensors/button_events/#icasa-iczb-kpd12-remote","text":"Model identifiers \"ICZB-KPD12\" Value Action Button 1002 Short release Off button 1001 Hold Off button 1003 Long release Off button 2002 Short release On button 2001 Hold On button 2003 Long release On button","title":"iCasa ICZB-KPD12 remote"},{"location":"endpoints/sensors/button_events/#icasa-iczb-kpd14s-remote","text":"Model identifiers \"ICZB-KPD14S\" Value Action Button 1002 Short release Off button 1001 Hold Off button 1003 Long release Off button 2002 Short release On button 2001 Hold On button 2003 Long release On button 3002 Short release S1 button 3003 Long release S1 button 4002 Short release S2 button 4003 Long release S2 button","title":"iCasa ICZB-KPD14S remote"},{"location":"endpoints/sensors/button_events/#icasa-iczb-kpd18s-remote","text":"Model identifiers \"ICZB-KPD18S\" Value Action Button 1002 Short release Off button 1001 Hold Off button 1003 Long release Off button 2002 Short release On button 2001 Hold On button 2003 Long release On button 3002 Short release S1 button 3003 Long release S1 button 4002 Short release S2 button 4003 Long release S2 button 5002 Short release S3 button 5003 Long release S3 button 6002 Short release S4 button 6003 Long release S4 button 7002 Short release S5 button 7003 Long release S5 button 8002 Short release S6 button 8003 Long release S6 button","title":"iCasa ICZB-KPD18S remote"},{"location":"endpoints/sensors/button_events/#icasa-remotes","text":"Model identifiers \"ICZB-RM\" \"ZGRC-KEY-012\" \"ZGRC-KEY-013\" \"RGBgenie ZB-5001\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 9002 Short release Button 9 10002 Short release Button 10 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 5001 Hold Button 5 5003 Long release Button 5 6002 Short release Button 6 6001 Hold Button 6 6003 Long release Button 6 7002 Short release Button 7 7001 Hold Button 7 7003 Long release Button 7 8002 Short release Button 8 8001 Hold Button 8 8003 Long release Button 8","title":"iCasa Remotes"},{"location":"endpoints/sensors/button_events/#samjin-remote","text":"Model identifiers \"button\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1001 Hold Button 1","title":"Samjin Remote"},{"location":"endpoints/sensors/button_events/#sunricher-cct-remote","text":"Model identifiers Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4","title":"Sunricher CCT remote"},{"location":"endpoints/sensors/button_events/#rgbgenie-micro-remote-zb-5121","text":"Model identifiers \"RGBgenie ZB-5121\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 5003 Long release Button 5","title":"RGBgenie Micro remote ZB-5121"},{"location":"endpoints/sensors/button_events/#sunricher-remotes","text":"Model identifiers \"ED-1001\" \"ZG2833K\" \"ZG2835\" \"45127\" Value Action Button 1002 Short release Button 1 1001 Hold Button 1 1003 Long release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 5001 Hold Button 5 5003 Long release Button 5 6002 Short release Button 6 6001 Hold Button 6 6003 Long release Button 6 7002 Short release Button 7 7001 Hold Button 7 7003 Long release Button 7 8002 Short release Button 8 8001 Hold Button 8 8003 Long release Button 8","title":"Sunricher Remotes"},{"location":"endpoints/sensors/button_events/#tuya-3-gang-remote","text":"Model identifiers \"_TZ3000_bi6lpsew\" \"_TZ3400_keyjhapk\" \"_TYZB02_key8kk7r\" \"_TZ3400_keyjqthh\" \"_TZ3400_key8kk7r\" \"_TZ3000_vp6clf9d\" \"_TYZB02_keyjqthh\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1003 Long release Button 1 2002 Short release Button 2 2004 Double press Button 2 2003 Long release Button 2 3002 Short release Button 3 3004 Double press Button 3 3003 Long release Button 3 4002 Short release Button 4 4004 Double press Button 4 4003 Long release Button 4","title":"Tuya 3-gang remote"},{"location":"endpoints/sensors/button_events/#legrand-remote-switch","text":"Model identifiers \"Remote switch\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 1001 Hold Button 1 1003 Long release Button 1 2001 Hold Button 2 2003 Long release Button 2","title":"Legrand Remote switch"},{"location":"endpoints/sensors/button_events/#legrand-double-remote-switch","text":"Model identifiers \"Double gangs remote switch\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 1001 Hold Button 1 1003 Long release Button 1 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 4002 Short release Button 4 3001 Hold Button 3 3003 Long release Button 3 4001 Hold Button 4 4003 Long release Button 4","title":"Legrand Double remote switch"},{"location":"endpoints/sensors/button_events/#xiaomi-aqara-opple-switches","text":"Model identifiers \"lumi.remote.b286opcn01\" \"lumi.remote.b486opcn01\" \"lumi.remote.b686opcn01\" Value Action Button 1001 Hold Button 1 1002 Short release Button 1 1004 Double press Button 1 1005 Treeble press Button 1 1003 Long release Button 1 2001 Hold Button 2 2002 Short release Button 2 2004 Double press Button 2 2005 Treeble press Button 2 2003 Long release Button 2 3001 Hold Button 3 3002 Short release Button 3 3004 Double press Button 3 3005 Treeble press Button 3 3003 Long release Button 3 4001 Hold Button 4 4002 Short release Button 4 4004 Double press Button 4 4005 Treeble press Button 4 4003 Long release Button 4 5001 Hold Button 5 5002 Short release Button 5 5004 Double press Button 5 5005 Treeble press Button 5 5003 Long release Button 5 6001 Hold Button 6 6002 Short release Button 6 6004 Double press Button 6 6005 Treeble press Button 6 6003 Long release Button 6","title":"Xiaomi Aqara Opple switches"},{"location":"endpoints/sensors/button_events/#legrand-shutter-switch-remote","text":"Model identifiers \"Shutters central remote switch\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 3003 Long release Button 3","title":"Legrand Shutter switch remote"},{"location":"endpoints/sensors/button_events/#legrand-remote-toggle-switch","text":"Model identifiers \"Remote toggle switch\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2","title":"Legrand Remote toggle switch"},{"location":"endpoints/sensors/button_events/#legrand-remote-motion-sensor","text":"Model identifiers \"Remote motion sensor\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3","title":"Legrand Remote motion sensor"},{"location":"endpoints/sensors/button_events/#bitron-4-button-remote-90201023","text":"Model identifiers \"902010/23\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 4002 Short release Button 4","title":"Bitron 4 button remote 902010/23"},{"location":"endpoints/sensors/button_events/#heiman-smart-controller-hs1rc-m-and-hs1rc-e","text":"Model identifiers \"RC_V14\" \"RC-EM\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 4002 Short release Button 4","title":"Heiman Smart controller HS1RC-M and HS1RC-E"},{"location":"endpoints/sensors/button_events/#tint-remote","text":"Model identifiers \"ZBT-Remote-ALL-RGBW\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 5002 Short release Button 5 6002 Short release Button 6 7002 Short release Button 7 8002 Short release Button 8 9002 Short release Button 9 10002 Short release Button 10 11002 Short release Button 11 12002 Short release Button 12","title":"Tint Remote"},{"location":"endpoints/sensors/button_events/#sage-door-bell","text":"Model identifiers \"Bell\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3001 Hold Button 3 3003 Long release Button 3","title":"Sage Door bell"},{"location":"endpoints/sensors/button_events/#sonoff-switch-snzb-01","text":"Model identifiers \"WB01\" Value Action Button 1004 Double press Button 1 1003 Long release Button 1 1002 Short release Button 1","title":"Sonoff Switch SNZB-01"},{"location":"endpoints/sensors/button_events/#yphix-rgb-wall-switch","text":"Model identifiers \"ZGRC-KEY-009\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 5001 Hold Button 5 5003 Long release Button 5 6002 Short release Button 6 6001 Hold Button 6 6003 Long release Button 6 7002 Short release Button 7 8002 Short release Button 8","title":"YPHIX RGB wall switch"},{"location":"endpoints/sensors/button_events/#yphix-k2-wall-switch","text":"Model identifiers \"ZGRC-KEY-007\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 1001 Hold Button 1 1003 Long release Button 1 2001 Hold Button 2 2003 Long release Button 2","title":"YPHIX K2 wall switch"},{"location":"endpoints/sensors/button_events/#ecosmartlds-4-button-cct-switch","text":"Model identifiers \"ZBT-CCTSwitch-D0001\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3","title":"EcoSmart/LDS 4 button CCT switch"},{"location":"endpoints/sensors/button_events/#linkind-1-button-remote-zs232000178","text":"Model identifiers \"ZBT-DIMSwitch-D0001\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 1001 Hold Button 1 1003 Long release Button 1 2001 Hold Button 2 2003 Long release Button 2","title":"Linkind 1 button remote ZS232000178"},{"location":"endpoints/sensors/button_events/#iluminize-4-button-cct-touch-remote","text":"Model identifiers \"ZGRC-TEUR-003\" Value Action Button 1002 Short release Button 1 2002 Short release Button 2 3002 Short release Button 3 4002 Short release Button 4 3001 Hold Button 3 3003 Long release Button 3 4001 Hold Button 4 4003 Long release Button 4 5002 Short release Button 5 6002 Short release Button 6 6003 Long release Button 6 7002 Short release Button 7 8002 Short release Button 8 9002 Short release Button 9 10002 Short release Button 10 9001 Hold Button 9 9003 Long release Button 9 10001 Hold Button 10 10003 Long release Button 10 11002 Short release Button 11 12002 Short release Button 12 12003 Long release Button 12 13002 Short release Button 13 14002 Short release Button 14 15002 Short release Button 15 16002 Short release Button 16 15001 Hold Button 15 15003 Long release Button 15 16001 Hold Button 16 16003 Long release Button 16 17002 Short release Button 17 18002 Short release Button 18 18003 Long release Button 18 19002 Short release Button 19 20002 Short release Button 20 21002 Short release Button 21 22002 Short release Button 22 21001 Hold Button 21 21003 Long release Button 21 22001 Hold Button 22 22003 Long release Button 22 23002 Short release Button 23 24002 Short release Button 24 24003 Long release Button 24","title":"Iluminize 4 button CCT touch remote"},{"location":"endpoints/sensors/button_events/#lidl-livarno-lux-lidl-livarno-lux-remote-control-_tyzb01_bngwdjsr","text":"Model identifiers \"HG06323\" Value Action Button 1002 Short release Button 1 1004 Double press Button 1 1005 Treeble press Button 1 1006 Quadruple press Button 1 2002 Short release Button 2 2001 Hold Button 2 2003 Long release Button 2 3002 Short release Button 3 3001 Hold Button 3 3003 Long release Button 3 4002 Short release Button 4","title":"LIDL Livarno Lux LIDL / Livarno Lux Remote Control (_TYZB01_bngwdjsr)"},{"location":"endpoints/touchlink/","text":"Touchlink \u00b6 The touchlink endpoint allows to communicate with near by located devices. Scan for devices \u00b6 POST /api/<apikey>/touchlink/scan Starts scanning on all channels for devices which are located close to the gateway. The whole scan process will take about 10 seconds. Note While scanning is in progress further API requests which require network access aren\u2019t allowed. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK Possible errors \u00b6 403 Forbidden 503 Service Unavailable Get scan results \u00b6 GET /api/<apikey>/touchlink/scan Returns the results of a touchlink scan. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK { \"scanstate\": \"scanning\", \"lastscan\": \"2013-11-05T08:14:12\", \"result\": { \"1\": { \"factorynew\": true, \"address\": \"0x0017880100bfbfed\" }, \"2\": { \"factorynew\": false, \"address\": \"0x001788010022b40a\" } }, } Response fields \u00b6 Field Type Description scanstate String State of a scan request: idle - scan is finished or was not started scanning - scan is in progress lastscan String UTC time of the last scan in ISO 8601 format. result Object A list of all devices which where found during the scan. Possible errors \u00b6 403 Forbidden Identify a device \u00b6 POST /api/<apikey>/touchlink/<id>/identify Puts a device into identify mode for example a light will blink a few times. Note id must be one of the indentifiers which are returned in the scan result. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK Possible errors \u00b6 403 Forbidden 404 Not Found 503 Service Unavailable Reset a device \u00b6 POST /api/<apikey>/touchlink/<id>/reset Send a reset to factory new request to a device. Note id must be one of the indentifiers which are returned in the scan result. Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK Possible errors \u00b6 403 Forbidden 404 Not Found 503 Service Unavailable","title":"Touchlink"},{"location":"endpoints/touchlink/#touchlink","text":"The touchlink endpoint allows to communicate with near by located devices.","title":"Touchlink"},{"location":"endpoints/touchlink/#scan-for-devices","text":"POST /api/<apikey>/touchlink/scan Starts scanning on all channels for devices which are located close to the gateway. The whole scan process will take about 10 seconds. Note While scanning is in progress further API requests which require network access aren\u2019t allowed.","title":"Scan for devices&nbsp;"},{"location":"endpoints/touchlink/#parameters","text":"None","title":"Parameters"},{"location":"endpoints/touchlink/#response","text":"HTTP/1.1 200 OK","title":"Response"},{"location":"endpoints/touchlink/#possible-errors","text":"403 Forbidden 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/touchlink/#get-scan-results","text":"GET /api/<apikey>/touchlink/scan Returns the results of a touchlink scan.","title":"Get scan results&nbsp;"},{"location":"endpoints/touchlink/#parameters_1","text":"None","title":"Parameters"},{"location":"endpoints/touchlink/#response_1","text":"HTTP/1.1 200 OK { \"scanstate\": \"scanning\", \"lastscan\": \"2013-11-05T08:14:12\", \"result\": { \"1\": { \"factorynew\": true, \"address\": \"0x0017880100bfbfed\" }, \"2\": { \"factorynew\": false, \"address\": \"0x001788010022b40a\" } }, }","title":"Response"},{"location":"endpoints/touchlink/#response-fields","text":"Field Type Description scanstate String State of a scan request: idle - scan is finished or was not started scanning - scan is in progress lastscan String UTC time of the last scan in ISO 8601 format. result Object A list of all devices which where found during the scan.","title":"Response fields"},{"location":"endpoints/touchlink/#possible-errors_1","text":"403 Forbidden","title":"Possible errors"},{"location":"endpoints/touchlink/#identify-a-device","text":"POST /api/<apikey>/touchlink/<id>/identify Puts a device into identify mode for example a light will blink a few times. Note id must be one of the indentifiers which are returned in the scan result.","title":"Identify a device&nbsp;"},{"location":"endpoints/touchlink/#parameters_2","text":"None","title":"Parameters"},{"location":"endpoints/touchlink/#response_2","text":"HTTP/1.1 200 OK","title":"Response"},{"location":"endpoints/touchlink/#possible-errors_2","text":"403 Forbidden 404 Not Found 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/touchlink/#reset-a-device","text":"POST /api/<apikey>/touchlink/<id>/reset Send a reset to factory new request to a device. Note id must be one of the indentifiers which are returned in the scan result.","title":"Reset a device&nbsp;"},{"location":"endpoints/touchlink/#parameters_3","text":"None","title":"Parameters"},{"location":"endpoints/touchlink/#response_3","text":"HTTP/1.1 200 OK","title":"Response"},{"location":"endpoints/touchlink/#possible-errors_3","text":"403 Forbidden 404 Not Found 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/websocket/","text":"Websocket \u00b6 The embedded Websocket server provides push notifications to applications which require real-time feedback from devices like lights, groups, switches, and sensors. Since deCONZ version 2.04.40. Websocket Configuration \u00b6 The Websocket server is started on an unused proxy friendly port which, depending on the system, is either 443, 8080, 8088, 20877, or any other unused random port. The Websocket server can be configured to include all state or config attributes in the message, or only the changed attributes. The Websocket used port and setting are listed in the configuration API endpoint: GET /api/<apikey>/config Parameters \u00b6 None Response \u00b6 HTTP/1.1 200 OK { ... \"websocketnotifyall\": true, \"websocketport\": 8088, ... } Possible errors \u00b6 403 Forbidden 503 Service Unavailable Open Connection \u00b6 How to establish a connection to a Websocket server depends on the underlying programming environment. Javascript example \u00b6 The following example demonstrates how to establish a connection with Javascript in a browser or NodeJS implementation. const WebSocket = require('ws'); const host = '192.168.1.202'; const port = 8088; const ws = new WebSocket('ws://' + host + ':' + port); ws.onmessage = function(msg) { console.log(JSON.parse(msg.data)); } Message Format \u00b6 Messages received over a Websocket connection contain data in JSON format. Light state change example \u00b6 { \"e\": \"changed\", \"id\": \"1\", \"r\": \"lights\", \"state\": { \"bri\": 1, \"on\": true, \"x\": 65279, \"xy\": [ 0.9961, 0.9961 ], \"y\": 65279 }, \"t\": \"event\", \"uniqueid\": \"00:0b:57:ff:fe:9a:46:ab-01\" } Note that x and y are included in the state for backwards compatibility. New apps should use xy instead. Group state change example \u00b6 { \"e\": \"changed\", \"id\": \"1\", \"r\": \"groups\", \"state\": { \"all_on\": true, \"any_on\": true }, \"t\": \"event\" } Sensor button event example \u00b6 { \"e\": \"changed\", \"id\": \"5\", \"r\": \"sensors\", \"state\": { \"buttonevent\": 2002, \"lastupdated\": \"2019-03-15T20:16:30\" }, \"t\": \"event\", \"uniqueid\": \"00:0d:6f:00:10:65:8a:6e-01-1000\" } Sensor name change example \u00b6 { \"e\": \"changed\", \"id\": \"10\", \"name\": \"Pulse 2\", \"r\": \"sensors\", \"t\": \"event\", \"uniqueid\": \"00:0d:6f:00:10:65:8a:6e-01-1000\" } Sensor added example \u00b6 { \"e\": \"added\", \"id\": \"10\", \"r\": \"sensors\", \"sensor\": { \"config\": { \"battery\": null, \"on\": true, \"reachable\": true }, \"ep\": 1, \"etag\": \"7088b28f8a8a2c786e6e48d95c547fa4\", \"id\": \"10\", \"manufacturername\": \"icasa\", \"mode\": 1, \"modelid\": \"ICZB-KPD12\", \"name\": \"ICZB-KPD12 10\", \"state\": { \"buttonevent\": null, \"lastupdated\": \"none\" }, \"type\": \"ZHASwitch\", \"uniqueid\": \"00:0d:6f:00:10:65:8a:6e-01-1000\" }, \"t\": \"event\", \"uniqueid\": \"00:0d:6f:00:10:65:8a:6e-01-1000\" } Scene Recall example \u00b6 { \"e\": \"scene-called\", \"gid\": \"0\", \"r\": \"scenes\", \"scid\": \"2\", \"t\": \"event\" } Message fields \u00b6 Field Type Description t String The type of the message: event - the message holds an event. e String The event type of the message: added - resource has been added; changed - resource attributes have changed; deleted - resource has been deleted. scene-called - a scene has been recalled. r String The resource type to which the message belongs: groups - message relates to a group resource; lights - message relates to a light resource; scenes - message relates to a scene under a group resource; sensors - message relates to a sensor resource. id String The id of the resource to which the message relates, e.g. 5 for /sensors/5. Not for scene-called events. uniqueid String The uniqueid of the resource to which the message relates, e.g. 00:0d:6f:00:10:65:8a:6e-01-1000 . Only for light and sensor resources. gid String The group id of the resource to which the message relates. Only for scene-called events. scid String The scene id of the resource to which the message relates. Only for scene-called events. config Map Depending on the websocketnotifyall setting: a map containing all or only the changed config attributes of a sensor resource. Only for changed events. name String The (new) name of a resource. Only for changed events. state Map Depending on the websocketnotifyall setting: a map containing all or only the changed state attributes of a group, light, or sensor resource. Only for changed events. group Map The full group resource. Only for added events of a group resource. light Map The full light resource. Only for added events of a light resource. sensor Map The full sensor resource. Only for added events of a sensor resource. Note that only one of config , name , or state will be present per changed event. Note that the Websocket functionality is still under development. Notably added and deleted notifications might not be issued under all circumstances.","title":"Websocket"},{"location":"endpoints/websocket/#websocket","text":"The embedded Websocket server provides push notifications to applications which require real-time feedback from devices like lights, groups, switches, and sensors. Since deCONZ version 2.04.40.","title":"Websocket"},{"location":"endpoints/websocket/#websocket-configuration","text":"The Websocket server is started on an unused proxy friendly port which, depending on the system, is either 443, 8080, 8088, 20877, or any other unused random port. The Websocket server can be configured to include all state or config attributes in the message, or only the changed attributes. The Websocket used port and setting are listed in the configuration API endpoint: GET /api/<apikey>/config","title":"Websocket Configuration&nbsp;"},{"location":"endpoints/websocket/#parameters","text":"None","title":"Parameters"},{"location":"endpoints/websocket/#response","text":"HTTP/1.1 200 OK { ... \"websocketnotifyall\": true, \"websocketport\": 8088, ... }","title":"Response"},{"location":"endpoints/websocket/#possible-errors","text":"403 Forbidden 503 Service Unavailable","title":"Possible errors"},{"location":"endpoints/websocket/#open-connection","text":"How to establish a connection to a Websocket server depends on the underlying programming environment.","title":"Open Connection&nbsp;"},{"location":"endpoints/websocket/#javascript-example","text":"The following example demonstrates how to establish a connection with Javascript in a browser or NodeJS implementation. const WebSocket = require('ws'); const host = '192.168.1.202'; const port = 8088; const ws = new WebSocket('ws://' + host + ':' + port); ws.onmessage = function(msg) { console.log(JSON.parse(msg.data)); }","title":"Javascript example"},{"location":"endpoints/websocket/#message-format","text":"Messages received over a Websocket connection contain data in JSON format.","title":"Message Format&nbsp;"},{"location":"endpoints/websocket/#light-state-change-example","text":"{ \"e\": \"changed\", \"id\": \"1\", \"r\": \"lights\", \"state\": { \"bri\": 1, \"on\": true, \"x\": 65279, \"xy\": [ 0.9961, 0.9961 ], \"y\": 65279 }, \"t\": \"event\", \"uniqueid\": \"00:0b:57:ff:fe:9a:46:ab-01\" } Note that x and y are included in the state for backwards compatibility. New apps should use xy instead.","title":"Light state change example"},{"location":"endpoints/websocket/#group-state-change-example","text":"{ \"e\": \"changed\", \"id\": \"1\", \"r\": \"groups\", \"state\": { \"all_on\": true, \"any_on\": true }, \"t\": \"event\" }","title":"Group state change example"},{"location":"endpoints/websocket/#sensor-button-event-example","text":"{ \"e\": \"changed\", \"id\": \"5\", \"r\": \"sensors\", \"state\": { \"buttonevent\": 2002, \"lastupdated\": \"2019-03-15T20:16:30\" }, \"t\": \"event\", \"uniqueid\": \"00:0d:6f:00:10:65:8a:6e-01-1000\" }","title":"Sensor button event example"},{"location":"endpoints/websocket/#sensor-name-change-example","text":"{ \"e\": \"changed\", \"id\": \"10\", \"name\": \"Pulse 2\", \"r\": \"sensors\", \"t\": \"event\", \"uniqueid\": \"00:0d:6f:00:10:65:8a:6e-01-1000\" }","title":"Sensor name change example"},{"location":"endpoints/websocket/#sensor-added-example","text":"{ \"e\": \"added\", \"id\": \"10\", \"r\": \"sensors\", \"sensor\": { \"config\": { \"battery\": null, \"on\": true, \"reachable\": true }, \"ep\": 1, \"etag\": \"7088b28f8a8a2c786e6e48d95c547fa4\", \"id\": \"10\", \"manufacturername\": \"icasa\", \"mode\": 1, \"modelid\": \"ICZB-KPD12\", \"name\": \"ICZB-KPD12 10\", \"state\": { \"buttonevent\": null, \"lastupdated\": \"none\" }, \"type\": \"ZHASwitch\", \"uniqueid\": \"00:0d:6f:00:10:65:8a:6e-01-1000\" }, \"t\": \"event\", \"uniqueid\": \"00:0d:6f:00:10:65:8a:6e-01-1000\" }","title":"Sensor added example"},{"location":"endpoints/websocket/#scene-recall-example","text":"{ \"e\": \"scene-called\", \"gid\": \"0\", \"r\": \"scenes\", \"scid\": \"2\", \"t\": \"event\" }","title":"Scene Recall example"},{"location":"endpoints/websocket/#message-fields","text":"Field Type Description t String The type of the message: event - the message holds an event. e String The event type of the message: added - resource has been added; changed - resource attributes have changed; deleted - resource has been deleted. scene-called - a scene has been recalled. r String The resource type to which the message belongs: groups - message relates to a group resource; lights - message relates to a light resource; scenes - message relates to a scene under a group resource; sensors - message relates to a sensor resource. id String The id of the resource to which the message relates, e.g. 5 for /sensors/5. Not for scene-called events. uniqueid String The uniqueid of the resource to which the message relates, e.g. 00:0d:6f:00:10:65:8a:6e-01-1000 . Only for light and sensor resources. gid String The group id of the resource to which the message relates. Only for scene-called events. scid String The scene id of the resource to which the message relates. Only for scene-called events. config Map Depending on the websocketnotifyall setting: a map containing all or only the changed config attributes of a sensor resource. Only for changed events. name String The (new) name of a resource. Only for changed events. state Map Depending on the websocketnotifyall setting: a map containing all or only the changed state attributes of a group, light, or sensor resource. Only for changed events. group Map The full group resource. Only for added events of a group resource. light Map The full light resource. Only for added events of a light resource. sensor Map The full sensor resource. Only for added events of a sensor resource. Note that only one of config , name , or state will be present per changed event. Note that the Websocket functionality is still under development. Notably added and deleted notifications might not be issued under all circumstances.","title":"Message fields"},{"location":"getting_started/","text":"img { max-width: inherit; border: 1px solid #ccc; margin: 1em 0; } Getting started \u00b6 This section describes the first steps needed in order to use the API. If you are new to REST APIs please read the About REST section first. REST-API client \u00b6 The only tool needed in this section is a browser with a REST-API client add-on to access the API. This document doesn\u2019t cover the API access through a programming language since everybody may have its favorite language. There are various free clients available; please pick one for your favourite browser in the browser add-on section. In the following steps Postman for Chrome from the Google Webstore will be used. For Firefox the REST Client is another popular client. Find your gateway \u00b6 As first step the gateway IP address and port must be found. This could be achieved by doing a GET request to https://phoscon.de/discover . The response body shows that the gateway has the IP address 192.168.192.32 and the API is reachable through port 8080 . Hint If the above request doesn\u2019t work, there are several other ways to find the gateway IP address as described in Discovery . Acquire an API key \u00b6 Any client that wants to access the API must provide a valid API key otherwise the access will fail. To acquire an API key send a POST request to /api as follows. Use the IP address and the port of your gateway that you got during discovery. Important The request must contain a JSON object with the required field devicetype . In some Rest clients it is mandatory to put \u2018http://\u2019 in front of the IP address of the gateway. \u2026 something went wrong! The returned HTTP status is 403 Forbidden . The response body provides further information about the raised error in the JSON object. Unlock the gateway \u00b6 The reason why the request failed is that the gateway was not unlocked. This mechanism is needed to prevent anybody from access to the gateway without being permitted to do so. As described in the section Authorization unlock the gateway as follows: In a new browser tab open the Phoscon App Click on Menu \u2192 Settings \u2192 Gateway Click on \u201cAdvanced\u201d button Click on the \u201cAuthenticate app\u201d button See: Phoscon App \u2014 Advanced Gateway Settings Now the gateway is unlocked for 60 seconds . Second attempt \u00b6 Within 60 seconds after unlocking the gateway, go back to the REST client and repeat the acquire API key request as before. (just click on Send again) This time the request succeded with HTTP status 200 OK. In the response body the new API key is in the field username . From now on this API key will be used in further API requests. Get a list of all lights \u00b6 With the API key from the last section it is now possible to access the full API. To get a list of all available lights run a GET request to /api/<apikey>/lights as follows. In the response 3 lights where returned. There are serval things to note here. The response contains not a list like [ ] of lights but a object { } with key/value pairs Each light can be accessed by its id \"17\" The light id is a key in the response object and the related value is a further object Note Ids are strings and even if they contain numbers never expect them to be \u201c1\u201d, \u201c2\u201d, \u201c3\u201d, \u2026 if the user removes light \u201c2\u201d the list will become \u201c1\u201d, \u201c3\u201d. Get the details of a light \u00b6 To get the detail of a light do a GET request to /api/<apikey>/lights/<id> as follows. Turn light on/off \u00b6 To turn a light on/off do a PUT request to /api/<apikey>/lights/<id>/state as follows. In the request body set the on value to true or false to turn the light on and off. Dim the light with transition time \u00b6 Dimming is done the same way as sending on/off by using the bri parameter; additionally specify a transition time in 1/10 seconds. The following example dims the light in 5 seconds down. What\u2019s next \u00b6 To do some more advanced things with this API please refer to the API Endpoints documentation on the left side menu.","title":"Getting Started"},{"location":"getting_started/#getting-started","text":"This section describes the first steps needed in order to use the API. If you are new to REST APIs please read the About REST section first.","title":"Getting started&nbsp;"},{"location":"getting_started/#rest-api-client","text":"The only tool needed in this section is a browser with a REST-API client add-on to access the API. This document doesn\u2019t cover the API access through a programming language since everybody may have its favorite language. There are various free clients available; please pick one for your favourite browser in the browser add-on section. In the following steps Postman for Chrome from the Google Webstore will be used. For Firefox the REST Client is another popular client.","title":"REST-API client"},{"location":"getting_started/#find-your-gateway","text":"As first step the gateway IP address and port must be found. This could be achieved by doing a GET request to https://phoscon.de/discover . The response body shows that the gateway has the IP address 192.168.192.32 and the API is reachable through port 8080 . Hint If the above request doesn\u2019t work, there are several other ways to find the gateway IP address as described in Discovery .","title":"Find your gateway"},{"location":"getting_started/#acquire-an-api-key","text":"Any client that wants to access the API must provide a valid API key otherwise the access will fail. To acquire an API key send a POST request to /api as follows. Use the IP address and the port of your gateway that you got during discovery. Important The request must contain a JSON object with the required field devicetype . In some Rest clients it is mandatory to put \u2018http://\u2019 in front of the IP address of the gateway. \u2026 something went wrong! The returned HTTP status is 403 Forbidden . The response body provides further information about the raised error in the JSON object.","title":"Acquire an API key"},{"location":"getting_started/#unlock-the-gateway","text":"The reason why the request failed is that the gateway was not unlocked. This mechanism is needed to prevent anybody from access to the gateway without being permitted to do so. As described in the section Authorization unlock the gateway as follows: In a new browser tab open the Phoscon App Click on Menu \u2192 Settings \u2192 Gateway Click on \u201cAdvanced\u201d button Click on the \u201cAuthenticate app\u201d button See: Phoscon App \u2014 Advanced Gateway Settings Now the gateway is unlocked for 60 seconds .","title":"Unlock the gateway"},{"location":"getting_started/#second-attempt","text":"Within 60 seconds after unlocking the gateway, go back to the REST client and repeat the acquire API key request as before. (just click on Send again) This time the request succeded with HTTP status 200 OK. In the response body the new API key is in the field username . From now on this API key will be used in further API requests.","title":"Second attempt"},{"location":"getting_started/#get-a-list-of-all-lights","text":"With the API key from the last section it is now possible to access the full API. To get a list of all available lights run a GET request to /api/<apikey>/lights as follows. In the response 3 lights where returned. There are serval things to note here. The response contains not a list like [ ] of lights but a object { } with key/value pairs Each light can be accessed by its id \"17\" The light id is a key in the response object and the related value is a further object Note Ids are strings and even if they contain numbers never expect them to be \u201c1\u201d, \u201c2\u201d, \u201c3\u201d, \u2026 if the user removes light \u201c2\u201d the list will become \u201c1\u201d, \u201c3\u201d.","title":"Get a list of all lights"},{"location":"getting_started/#get-the-details-of-a-light","text":"To get the detail of a light do a GET request to /api/<apikey>/lights/<id> as follows.","title":"Get the details of a light"},{"location":"getting_started/#turn-light-onoff","text":"To turn a light on/off do a PUT request to /api/<apikey>/lights/<id>/state as follows. In the request body set the on value to true or false to turn the light on and off.","title":"Turn light on/off"},{"location":"getting_started/#dim-the-light-with-transition-time","text":"Dimming is done the same way as sending on/off by using the bri parameter; additionally specify a transition time in 1/10 seconds. The following example dims the light in 5 seconds down.","title":"Dim the light with transition time"},{"location":"getting_started/#whats-next","text":"To do some more advanced things with this API please refer to the API Endpoints documentation on the left side menu.","title":"What's next"},{"location":"misc/authorization/","text":"Authorization \u00b6 API keys \u00b6 Apps which want to access the API must obtain an API key. There are two methods for doing so. Unlocking the gateway HTTP basic authentification Unlocking the gateway \u00b6 Unlocking the gateway for a short period of time allows any app to acquire an API key via configuration API. To unlock the gateway for 60 seconds: In a new browser tab open the Phoscon App Click on Menu \u2192 Settings \u2192 Gateway Click on \u201cAdvanced\u201d button Click on the \u201cAuthenticate app\u201d button See: Phoscon App \u2014 Advanced Gateway Settings HTTP basic authentication \u00b6 Apps might want to receive an API key without the need that the user must unlock the gateway. This could be achieved by asking the user for the gateway username and password and handover the credentials in the Acquire API key call via HTTP basic authentification. The API call needs to be extended with HTTP header field Authorization as follows: Authorization: Basic <credential-hash> There <credential-hash> is the base64 encoded version of username:password .","title":"Authorization"},{"location":"misc/authorization/#authorization","text":"","title":"Authorization"},{"location":"misc/authorization/#api-keys","text":"Apps which want to access the API must obtain an API key. There are two methods for doing so. Unlocking the gateway HTTP basic authentification","title":"API keys"},{"location":"misc/authorization/#unlocking-the-gateway","text":"Unlocking the gateway for a short period of time allows any app to acquire an API key via configuration API. To unlock the gateway for 60 seconds: In a new browser tab open the Phoscon App Click on Menu \u2192 Settings \u2192 Gateway Click on \u201cAdvanced\u201d button Click on the \u201cAuthenticate app\u201d button See: Phoscon App \u2014 Advanced Gateway Settings","title":"Unlocking the gateway"},{"location":"misc/authorization/#http-basic-authentication","text":"Apps might want to receive an API key without the need that the user must unlock the gateway. This could be achieved by asking the user for the gateway username and password and handover the credentials in the Acquire API key call via HTTP basic authentification. The API call needs to be extended with HTTP header field Authorization as follows: Authorization: Basic <credential-hash> There <credential-hash> is the base64 encoded version of username:password .","title":"HTTP basic authentication"},{"location":"misc/discovery/","text":"Discovery \u00b6 The gateways in the local network can be discovered in various ways. Discovery via Internet \u00b6 GET https://phoscon.de/discover This returns a JSON array of all known gateways in the local network. If both the gateway and the application have access to the Internet, discovery via the Internet is the easiest way to find the gateway. Response \u00b6 [{ \"id\": \"E0:69:78:58:22:A4:32:CE\", \"internalipaddress\": \"192.168.192.34\", \"internalport\": \"8080\", \"macaddress\": \"E0:69:78:58:22:A4:32:CE\", \"name\": \"RaspBee GW\" }] Note For webapps this is the only way to automatically discover the gateway. By visiting https://phoscon.de/discover a list of all gateways in the local network will be displayed. Discovery via UPnP \u00b6 Another method to find the gateway is UPnP discovery via UDP sockets. The main advantage compared to the internet discovery is that no internet is needed at all. Note The discovery might not work as expected if in the local network beside the main router also bridges are used, which might prevent UDP broadcasts to reach the whole network. Discovery via nmap \u00b6 Nmap is an open source command-line network scanner which is available for all major platforms. Since the gateway runs a SSH deamon at port 22 it is easy to find it in the local network. $ nmap -p 22 -T5 -n -min-parallelism 100 --open 192.168.192.0/24 Replace the 192.168.192.0/24 with your subnetwork for example 192.168.0.0/24 . Result \u00b6 Starting Nmap 6.25 ( http://nmap.org ) at 2013-07-01 13:04 CEST Nmap scan report for 192.168.192.34 Host is up (0.00081s latency). PORT STATE SERVICE 22/tcp open ssh","title":"Discovery"},{"location":"misc/discovery/#discovery","text":"The gateways in the local network can be discovered in various ways.","title":"Discovery"},{"location":"misc/discovery/#discovery-via-internet","text":"GET https://phoscon.de/discover This returns a JSON array of all known gateways in the local network. If both the gateway and the application have access to the Internet, discovery via the Internet is the easiest way to find the gateway.","title":"Discovery via Internet"},{"location":"misc/discovery/#response","text":"[{ \"id\": \"E0:69:78:58:22:A4:32:CE\", \"internalipaddress\": \"192.168.192.34\", \"internalport\": \"8080\", \"macaddress\": \"E0:69:78:58:22:A4:32:CE\", \"name\": \"RaspBee GW\" }] Note For webapps this is the only way to automatically discover the gateway. By visiting https://phoscon.de/discover a list of all gateways in the local network will be displayed.","title":"Response"},{"location":"misc/discovery/#discovery-via-upnp","text":"Another method to find the gateway is UPnP discovery via UDP sockets. The main advantage compared to the internet discovery is that no internet is needed at all. Note The discovery might not work as expected if in the local network beside the main router also bridges are used, which might prevent UDP broadcasts to reach the whole network.","title":"Discovery via UPnP"},{"location":"misc/discovery/#discovery-via-nmap","text":"Nmap is an open source command-line network scanner which is available for all major platforms. Since the gateway runs a SSH deamon at port 22 it is easy to find it in the local network. $ nmap -p 22 -T5 -n -min-parallelism 100 --open 192.168.192.0/24 Replace the 192.168.192.0/24 with your subnetwork for example 192.168.0.0/24 .","title":"Discovery via nmap"},{"location":"misc/discovery/#result","text":"Starting Nmap 6.25 ( http://nmap.org ) at 2013-07-01 13:04 CEST Nmap scan report for 192.168.192.34 Host is up (0.00081s latency). PORT STATE SERVICE 22/tcp open ssh","title":"Result"},{"location":"misc/errors/","text":"Error handling \u00b6 Errors might occur for various reasons. Robust applications shall handle them and not assume that each API call will succeed. HTTP status codes \u00b6 As usual in REST APIs errors are returned as HTTP status codes. The documentation for each API call lists all possible errors which might occur. Error code Name Description 200 OK Request succeded 201 Created A new resource was created 202 Accepted Request will be processed but isn't finished yet 304 Not Modified Is returned if the request had the If-None-Match header and the ETag on the resource was the same. 400 Bad request The request was not formated as expected or missing parameters 401 Unauthorized Authorization failed 403 Forbidden The caller has no rights to access the requested URI 404 Resource Not Found The requested resource (light, group, ...) was not found 503 Service Unavailable The device is not connected to the network or too busy to handle further requests JSON error objects \u00b6 Further details of the errors are available as JSON object in the response body. { \"error\": { \"type\": <error code>, \"address\": <ressource/parameter>, \"description\": <description> } } Field Type Description type Number One of the error codes listed below. address String The url which refers to the resource/parameter which caused the error. description String The error description contains details on what went wrong. Errors \u00b6 Error Description Details 1 unauthorized user This will be returned if the request had no valid apikey or if the apikey has not the rights to access a resource. 2 body contains invalid JSON This will be returned if the JSON in the body couldn't be parsed. 3 resource, <resource> , not available This will be returned if the requestet resource like a light or a group does not exist. 4 method, <method> , not available for resource, <resource> This will be returned if the requested method (GET, PUT, POST or DELETE) is not supported for the resource. 5 missing parameters in body This will be returned if the request didn't contain all required parameters. 6 parameter, <parameter> , not available This will be returned if a parameter sent in the request is not supported. 7 invalid value, <value> , for parameter, <parameter> This will be returned if a parameter hasn't the expected format or is out of range. 8 parameter, <parameter> , is not modifiable This will be returned in an attempt to change a read only parameter.","title":"Error handling"},{"location":"misc/errors/#error-handling","text":"Errors might occur for various reasons. Robust applications shall handle them and not assume that each API call will succeed.","title":"Error handling"},{"location":"misc/errors/#http-status-codes","text":"As usual in REST APIs errors are returned as HTTP status codes. The documentation for each API call lists all possible errors which might occur. Error code Name Description 200 OK Request succeded 201 Created A new resource was created 202 Accepted Request will be processed but isn't finished yet 304 Not Modified Is returned if the request had the If-None-Match header and the ETag on the resource was the same. 400 Bad request The request was not formated as expected or missing parameters 401 Unauthorized Authorization failed 403 Forbidden The caller has no rights to access the requested URI 404 Resource Not Found The requested resource (light, group, ...) was not found 503 Service Unavailable The device is not connected to the network or too busy to handle further requests","title":"HTTP status codes"},{"location":"misc/errors/#json-error-objects","text":"Further details of the errors are available as JSON object in the response body. { \"error\": { \"type\": <error code>, \"address\": <ressource/parameter>, \"description\": <description> } } Field Type Description type Number One of the error codes listed below. address String The url which refers to the resource/parameter which caused the error. description String The error description contains details on what went wrong.","title":"JSON error objects"},{"location":"misc/errors/#errors","text":"Error Description Details 1 unauthorized user This will be returned if the request had no valid apikey or if the apikey has not the rights to access a resource. 2 body contains invalid JSON This will be returned if the JSON in the body couldn't be parsed. 3 resource, <resource> , not available This will be returned if the requestet resource like a light or a group does not exist. 4 method, <method> , not available for resource, <resource> This will be returned if the requested method (GET, PUT, POST or DELETE) is not supported for the resource. 5 missing parameters in body This will be returned if the request didn't contain all required parameters. 6 parameter, <parameter> , not available This will be returned if a parameter sent in the request is not supported. 7 invalid value, <value> , for parameter, <parameter> This will be returned if a parameter hasn't the expected format or is out of range. 8 parameter, <parameter> , is not modifiable This will be returned in an attempt to change a read only parameter.","title":"Errors"},{"location":"misc/polling/","text":"Polling \u00b6 Since the state of lights and groups might be changed from various devices, client applications shall update their local cache regularly to provide the best user experience. To keep the processing overhead low in the gateway as well as on the client low the API supports the common HTTP ETag and If-None-Match headers to prevent full state updates in each polling attempt. ETag HTTP header \u00b6 Many API calls return an ETag in the HTTP header. An ETag is a hash string which belongs to a resource and is changed every time the resource is modified. Ressources are: - Lights - Groups - Configuration For example the first API call to get the state of light 1 returns an ETag. In a second call the client provides the HTTP header field If-None-Match with the latest known ETag of the light. If the light meanwhile has changed the request will return the new state and another ETag. If the light wasn\u2019t changed a HTTP status 304 Not Modified will be returned with no body content, in this case the client doesn\u2019t need to update any data or UI.","title":"Polling"},{"location":"misc/polling/#polling","text":"Since the state of lights and groups might be changed from various devices, client applications shall update their local cache regularly to provide the best user experience. To keep the processing overhead low in the gateway as well as on the client low the API supports the common HTTP ETag and If-None-Match headers to prevent full state updates in each polling attempt.","title":"Polling"},{"location":"misc/polling/#etag-http-header","text":"Many API calls return an ETag in the HTTP header. An ETag is a hash string which belongs to a resource and is changed every time the resource is modified. Ressources are: - Lights - Groups - Configuration For example the first API call to get the state of light 1 returns an ETag. In a second call the client provides the HTTP header field If-None-Match with the latest known ETag of the light. If the light meanwhile has changed the request will return the new state and another ETag. If the light wasn\u2019t changed a HTTP status 304 Not Modified will be returned with no body content, in this case the client doesn\u2019t need to update any data or UI.","title":"ETag HTTP header"}]}